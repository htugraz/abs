From 0c89ff941bfdd9f3378312f293a84f13cf3e2a96 Mon Sep 17 00:00:00 2001
From: Moritz Bunkus <moritz@bunkus.org>
Date: Sat, 9 Aug 2014 22:32:24 +0200
Subject: [PATCH] fix compilation with Boost 1.56.0
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Boost's »indexed« range adaptor has changed in an incompatible way in
1.56.0. The underlying iterator can now be used with range-based for
loops, but that means that there's no way safe for #ifdefs for catering
to both 1.56.0 and older versions.

Fixes #1051.
---
 src/common/iso639.cpp | 25 +++++++++++++++++++++----
 1 file changed, 21 insertions(+), 4 deletions(-)

diff --git a/src/common/iso639.cpp b/src/common/iso639.cpp
index db40117..aec77f0 100644
--- a/src/common/iso639.cpp
+++ b/src/common/iso639.cpp
@@ -13,6 +13,7 @@
 
 #include "common/common_pch.h"
 
+#include <boost/version.hpp>
 #include <unordered_map>
 
 #include "common/iso639.h"
@@ -592,20 +593,36 @@ map_to_iso639_2_code(std::string const &s,
   auto range = iso639_languages | badap::indexed(0);
   auto end   = boost::end(range);
   for (auto lang = boost::begin(range); lang != end; lang++) {
-    auto names = split(lang->english_name, ";");
+#if BOOST_VERSION < 105600
+    auto const &english_name = lang->english_name;
+    auto index               = lang.index();
+#else
+    auto const &english_name = lang->value().english_name;
+    auto index               = lang->index();
+#endif
+
+    auto names = split(english_name, ";");
     strip(names);
     if (brng::find(names, source) != names.end())
-      return lang.index();
+      return index;
   }
 
   if (!allow_short_english_name)
     return -1;
 
   for (auto lang = boost::begin(range); lang != end; lang++) {
-    auto names = split(lang->english_name, ";");
+#if BOOST_VERSION < 105600
+    auto const &english_name = lang->english_name;
+    auto index               = lang.index();
+#else
+    auto const &english_name = lang->value().english_name;
+    auto index               = lang->index();
+#endif
+
+    auto names = split(english_name, ";");
     strip(names);
     if (names.end() != brng::find_if(names, [&](std::string const &name) { return balg::istarts_with(name, source); }))
-      return lang.index();
+      return index;
   }
 
   return -1;
-- 
2.0.3

