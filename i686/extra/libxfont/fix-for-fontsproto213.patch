diff --git a/src/util/patcache.c b/src/util/patcache.c
index 9c05fa1..2101015 100644
--- a/src/util/patcache.c
+++ b/src/util/patcache.c
@@ -50,7 +50,7 @@ typedef unsigned char	EntryPtr;
 typedef struct _FontPatternCacheEntry {
     struct _FontPatternCacheEntry   *next, **prev;
     short			    patlen;
-    char			    *pattern;
+    const char			    *pattern;
     int				    hash;
     FontPtr			    pFont;	/* associated font */
 } FontPatternCacheEntryRec, *FontPatternCacheEntryPtr;
@@ -74,7 +74,7 @@ EmptyFontPatternCache (FontPatternCachePtr cache)
 	cache->entries[i].next = &cache->entries[i+1];
 	cache->entries[i].prev = 0;
 	cache->entries[i].pFont = 0;
-	free (cache->entries[i].pattern);
+	free ((void *) cache->entries[i].pattern);
 	cache->entries[i].pattern = 0;
 	cache->entries[i].patlen = 0;
     }
@@ -107,7 +107,7 @@ FreeFontPatternCache (FontPatternCachePtr cache)
     int	    i;
 
     for (i = 0; i < NENTRIES; i++)
-	free (cache->entries[i].pattern);
+	free ((void *) cache->entries[i].pattern);
     free (cache);
 }
 
@@ -128,7 +128,7 @@ Hash (const char *string, int len)
 /* add entry */
 void
 CacheFontPattern (FontPatternCachePtr cache,
-		  char *pattern,
+		  const char *pattern,
 		  int patlen,
 		  FontPtr pFont)
 {
@@ -154,7 +154,7 @@ CacheFontPattern (FontPatternCachePtr cache,
 	if (e->next)
 	    e->next->prev = e->prev;
 	*e->prev = e->next;
-	free (e->pattern);
+	free ((void *) e->pattern);
     }
     /* set pattern */
     memcpy (newpat, pattern, patlen);
@@ -174,7 +174,7 @@ CacheFontPattern (FontPatternCachePtr cache,
 /* find matching entry */
 FontPtr
 FindCachedFontPattern (FontPatternCachePtr cache,
-		       char *pattern,
+		       const char *pattern,
 		       int patlen)
 {
     int				hash;
@@ -211,7 +211,7 @@ RemoveCachedFontPattern (FontPatternCachePtr cache,
 	    *e->prev = e->next;
 	    e->next = cache->free;
 	    cache->free = e;
-	    free (e->pattern);
+	    free ((void *) e->pattern);
 	    e->pattern = 0;
 	}
     }
--
cgit v0.9.0.2-2-gbebe

