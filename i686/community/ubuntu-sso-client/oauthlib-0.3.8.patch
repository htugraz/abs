=== modified file 'ubuntu_sso/utils/webclient/common.py'
--- ubuntu_sso/utils/webclient/common.py	2013-02-19 22:12:47 +0000
+++ ubuntu_sso/utils/webclient/common.py	2013-04-12 20:11:22 +0000
@@ -157,9 +157,12 @@
                                               else SIGNATURE_TYPE_AUTH_HEADER),
                               timestamp=str(timestamp))
 
-        url, signed_headers, body = oauth_client.sign(
-            uri, method, parameters if parameters is not None else {},
-            {'Content-Type': 'application/x-www-form-urlencoded'})
+        try:
+            url, signed_headers, body = oauth_client.sign(
+                uri, method, parameters if parameters is not None else {},
+                {'Content-Type': 'application/x-www-form-urlencoded'})
+        except ValueError:
+            url, signed_headers, body = oauth_client.sign(uri, method)
 
         return url, signed_headers, body
 

=== modified file 'ubuntu_sso/utils/webclient/tests/test_webclient.py'
--- ubuntu_sso/utils/webclient/tests/test_webclient.py	2013-02-19 22:12:47 +0000
+++ ubuntu_sso/utils/webclient/tests/test_webclient.py	2013-04-12 20:11:22 +0000
@@ -794,15 +794,6 @@
 
         self.assert_headers_correct(signed_headers)
         self.assertEqual(url, self.sample_url)
-        if params is not None:
-            for param, value in params.items():
-                self.assertIn(param, body)
-                actual = body[param]
-                self.assertEqual(value, actual)
-
-    def test_build_oauth_request_with_params(self):
-        """Check that the oauth request are properly with params."""
-        self.test_build_oauth_request(params=self.sample_params)
 
     @defer.inlineCallbacks
     def test_build_signed_iri(self, params=None):

