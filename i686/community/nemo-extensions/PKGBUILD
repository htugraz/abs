# $Id: PKGBUILD 145938 2015-11-04 09:26:44Z jgc $
# Maintainer: Alexandre Filgueira <alexfilgueira@antergos.com>

pkgbase=nemo-extensions
pkgname=('nemo-fileroller'
	 'nemo-preview'
	 'nemo-python'
	 'nemo-share'
	 'nemo-seahorse')
	#'nemo-media-columns'
	#'nemo-pastebin'
	#'nemo-compare'
	#'nemo-rabbitvcs'
pkgver=2.6.0
_pkgver=2.6.x
pkgrel=3
arch=('i686' 'x86_64')
license=('GPL2')
url="https://github.com/linuxmint/nemo-extensions"
depends=(nemo file-roller cjs clutter-gtk clutter-gst gst-plugins-good libmusicbrainz5
         evince gtksourceview3 webkitgtk python2-gobject seahorse-nautilus samba)
makedepends=(gconf gnome-common gtk-doc intltool gobject-introspection) # python2-distutils-extra
options=('!emptydirs')
source=("${pkgbase}-${pkgver}.tar.gz::https://github.com/linuxmint/nemo-extensions/archive/${_pkgver}.tar.gz"
        "gpgversion.patch"
        clutter-gst3.patch)
sha256sums=('222a9c96644c3dd22171a97721c11d9bc08e1d27b0c168179947bb94edc824cf'
            '187b9c1d684b81abac7ef3095882cfe859bd50570e554d45fcfdbf6e50455b86'
            '7217c05f4cf4d797e8e042392c1cb92481bb616a1e7ce20393228591a6bc91e0')

prepare() {
  cd ${pkgbase}-${_pkgver}

  # Python2 fix
  find -type f | xargs sed -i 's@^#!.*python$@#!/usr/bin/python2@'

  # Fix nemo-preview build
  sed -i '/AM_GNU_GETTEXT/d' nemo-preview/configure.ac

  # GPG version in testing
  patch -Np1 -i ../gpgversion.patch

  # Fix path for nemo-python
  sed -i 's|libdirsuffix="/i386-linux-gnu/"|libdirsuffix=""|' nemo-python/m4/python.m4

  cd nemo-preview
  patch -Np1 -i ../../clutter-gst3.patch
}

build() {
  cd ${pkgbase}-${_pkgver}

  _configure_pkgs="nemo-fileroller nemo-seahorse nemo-share"
  for dir in ${_configure_pkgs}
  do
    pushd ${dir}
    autoreconf -fi
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --libexecdir=/usr/lib/${dir} \
                --disable-static --disable-schemas-compile
    make
    sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0 /g' -e 's/    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then/      func_append compile_command " -Wl,-O1,--as-needed"\n      func_append finalize_command " -Wl,-O1,--as-needed"\n\0/' libtool
    popd
  done

  _autogen_pkgs="nemo-preview nemo-python"
  for dir in ${_autogen_pkgs}
  do
    pushd ${dir}
    ./autogen.sh --prefix=/usr --sysconfdir=/etc --localstatedir=/var --libexecdir=/usr/lib/${dir} \
                 --disable-static --disable-schemas-compile
  sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0 /g' -e 's/    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then/      func_append compile_command " -Wl,-O1,--as-needed"\n      func_append finalize_command " -Wl,-O1,--as-needed"\n\0/' libtool
    make
    popd
  done

    # # nemo-pastebin
    # cd nemo-pastebin
    # python2 ./setup.py build --build-base ${srcdir}/build/ || return 1
    # cd ..

  	# nemo-media-columns
  	# Nothing to do here
  	# Required python2-pypdf from AUR

  	# nemo-compare
  	# cd nemo-compare

    # nemo-rabbitvcs
    # Nothing to do here

}

package_nemo-fileroller(){
  pkgdesc="File archiver extension for Nemo"
  depends=(nemo file-roller)

  cd ${pkgbase}-${_pkgver}/nemo-fileroller
  make DESTDIR="${pkgdir}" install
}

package_nemo-preview(){
  pkgdesc=("GtkClutter and Javascript-based quick previewer for Nemo")
  depends=(nemo cjs clutter-gtk clutter-gst libmusicbrainz5 evince gtksourceview3 webkitgtk)

  cd ${pkgbase}-${_pkgver}/nemo-preview
  make DESTDIR="${pkgdir}" install
}

package_nemo-python() {
  pkgdesc="Python2 binding for Nemo components"
  depends=(nemo python2-gobject)

  cd ${pkgbase}-${_pkgver}/nemo-python
  make DESTDIR="${pkgdir}" install
}

package_nemo-seahorse(){
  pkgdesc="PGP encryption and signing extension for Nemo"
  depends=(nemo seahorse-nautilus)

  cd ${pkgbase}-${_pkgver}/nemo-seahorse
  make DESTDIR="${pkgdir}" install

  # seahorse-tool is already in seahorse-nautilus package
  make -C data DESTDIR="${pkgdir}" uninstall
  make -C tool DESTDIR="${pkgdir}" uninstall
}

package_nemo-share(){
  pkgdesc="Samba extension for Nemo"
  depends=(nemo samba)

  cd ${pkgbase}-${_pkgver}/nemo-share
  make DESTDIR="${pkgdir}" install
}

# package_nemo-media-columns(){
# 	cd ${pkgbase}-${_pkgver}/nemo-media-columns

# 	pkgdesc=("A Nemo extension to display music/EXIF and PDF metadata info in the Nemo List View")
# 	arch=(any)

#   install -d ${pkgdir}/usr/share/nemo-python/extensions/
# 	install -Dm755 ${srcdir}/nemo-media-columns.py \
# 			${pkgdir}/usr/share/nemo-python/extensions/nemo-media-columns.py
# }

# package_nemo-pastebin(){
# 	cd ${pkgbase}-${_pkgver}/nemo-pastebin

# 	pkgdesc="Nemo extension to send files to a pastebin"
# 	arch=(any)
# 	depends=(nemo pastebinit nemo-python)
#   install=nemo-pastebin.install

# 	python2 ./setup.py install --prefix=/usr --root=${pkgdir} \
# 		--no-compile -O0
# }

# package_nemo-compare() {
#   cd ${pkgbase}-${_pkgver}/nemo-compare

#   pkgdesc="Context menu comparison extension for Nemo file manager"
#   depends=(python2 python2-xdg meld nemo-python)

#   install -d ${pkgdir}/usr/share/applications/
#   install -d ${pkgdir}/usr/share/nemo-compare/

#   install -Dm755 ${srcdir}/data/nemo-compare-preferences.desktop \
#                   /usr/share/applications/nemo-compare-preferences.desktop
#   install -Dm755 ${srcdir}/data/nemo-compare-notification \
#                   /usr/share/nemo-compare/nemo-compare-notification
#   install -Dm755 ${srcdir}/src/nemo-compare.py \
#                   /usr/share/nemo-compare/nemo-compare.py
#   install -Dm755 ${srcdir}/src/utils.py \
#                   /usr/share/nemo-compare/utils.py
#   install -Dm755 ${srcdir}/src/nemo-compare-preferences.py \
#                   /usr/share/nemo-compare/nemo-compare-preferences.py

# }

# package_nemo-rabbitvcs(){
# 	cd ${pkgbase}-${_pkgver}/nemo-rabbitvcs

#   depends=(nemo-python python2-dbus)

#   install -d ${pkgdir}/usr/share/nemo-python/extensions/
#   install -Dm755 ${srcdir}/RabbitVCS.py \
#       ${pkgdir}/usr/share/nemo-python/extensions/RabbitVCS.py
# }

