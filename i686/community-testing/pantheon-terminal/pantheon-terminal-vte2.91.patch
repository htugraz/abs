diff -rupN pantheon-terminal-0.3.0.1.orig/CMakeLists.txt pantheon-terminal-0.3.0.1/CMakeLists.txt
--- pantheon-terminal-0.3.0.1.orig/CMakeLists.txt	2014-09-30 22:39:03.398514500 +0200
+++ pantheon-terminal-0.3.0.1/CMakeLists.txt	2014-09-30 22:39:26.076941700 +0200
@@ -42,7 +42,7 @@ pkg_check_modules (DEPS REQUIRED
   gthread-2.0
   gtk+-3.0>=3.9.10
   granite>=0.3.0
-  vte-2.90
+  vte-2.91
   libnotify
   gdk-3.0)
 
@@ -64,7 +64,7 @@ vala_precompile (VALA_C
     src/ForegroundProcessDialog.vala
     src/Constants.vala
 PACKAGES
-    vte-2.90
+    vte-2.91
     granite
     gtk+-3.0
     libnotify
diff -rupN pantheon-terminal-0.3.0.1.orig/src/Settings.vala pantheon-terminal-0.3.0.1/src/Settings.vala
--- pantheon-terminal-0.3.0.1.orig/src/Settings.vala	2014-09-30 22:39:03.426457100 +0200
+++ pantheon-terminal-0.3.0.1/src/Settings.vala	2014-09-30 22:39:26.077945600 +0200
@@ -63,7 +63,7 @@ namespace PantheonTerminal {
         public string foreground { get; set; }
         public string background { get; set; }
         public string cursor_color { get; set; }
-        public Vte.TerminalCursorShape cursor_shape { get; set; }
+        public Vte.CursorShape cursor_shape { get; set; }
         public string palette { get; set; }
 
         public string shell { get; set; }
@@ -77,4 +77,4 @@ namespace PantheonTerminal {
             base ("org.pantheon.terminal.settings");
         }
     }
-}
\ No newline at end of file
+}
diff -rupN pantheon-terminal-0.3.0.1.orig/src/TerminalWidget.vala pantheon-terminal-0.3.0.1/src/TerminalWidget.vala
--- pantheon-terminal-0.3.0.1.orig/src/TerminalWidget.vala	2014-09-30 22:39:03.427111000 +0200
+++ pantheon-terminal-0.3.0.1/src/TerminalWidget.vala	2014-09-30 22:40:09.512353200 +0200
@@ -89,9 +89,6 @@ namespace PantheonTerminal {
 
         public TerminalWidget (PantheonTerminalWindow parent_window) {
 
-            /* Sets characters that define word for double click selection */
-            set_word_chars ("-A-Za-z0-9/.,_~#%?:=+@");
-
             restore_settings ();
             settings.changed.connect (restore_settings);
 
@@ -162,14 +159,13 @@ namespace PantheonTerminal {
         public void restore_settings () {
             /* Load configuration */
             int opacity = settings.opacity * 65535;
-            set_background_image (null);
             set_opacity ((uint16) (opacity / 100));
 
-            Gdk.Color background_color;
-            Gdk.Color.parse (settings.background, out background_color);
+            Gdk.RGBA background_color = Gdk.RGBA ();
+            background_color.parse (settings.background);
 
-            Gdk.Color foreground_color;
-            Gdk.Color.parse (settings.foreground, out foreground_color);
+            Gdk.RGBA foreground_color = Gdk.RGBA ();
+            foreground_color.parse (settings.foreground);
 
             string[] hex_palette = {"#000000", "#FF6C60", "#A8FF60", "#FFFFCC", "#96CBFE",
                                     "#FF73FE", "#C6C5FE", "#EEEEEE", "#000000", "#FF6C60",
@@ -188,19 +184,19 @@ namespace PantheonTerminal {
                 }
             }
 
-            Gdk.Color[] palette = new Gdk.Color[16];
+            Gdk.RGBA[] palette = new Gdk.RGBA[16];
 
             for (int i = 0; i < hex_palette.length; i++) {
-                Gdk.Color new_color;
-                Gdk.Color.parse (hex_palette[i], out new_color);
+                Gdk.RGBA new_color= Gdk.RGBA();
+                new_color.parse (hex_palette[i]);
 
                 palette[i] = new_color;
             }
 
             set_colors (foreground_color, background_color, palette);
 
-            Gdk.Color cursor_color;
-            Gdk.Color.parse (settings.cursor_color, out cursor_color);
+            Gdk.RGBA cursor_color = Gdk.RGBA ();
+            cursor_color.parse (settings.cursor_color);
             set_color_cursor (cursor_color);
 
             /* Bold font */
@@ -241,11 +237,11 @@ namespace PantheonTerminal {
         public void active_shell (string dir = GLib.Environment.get_current_dir ()) {
             try {
                 if (settings.shell == "")
-                    this.fork_command_full (Vte.PtyFlags.DEFAULT, dir, { Vte.get_user_shell () },
-                                            null, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                    this.spawn_sync (Vte.PtyFlags.DEFAULT, dir, { Vte.get_user_shell () },
+                                     null, SpawnFlags.SEARCH_PATH, null, out this.child_pid, null);
                 else
-                    this.fork_command_full (Vte.PtyFlags.DEFAULT, dir, { settings.shell }, null,
-                                            SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                    this.spawn_sync (Vte.PtyFlags.DEFAULT, dir, { settings.shell }, null,
+                                     SpawnFlags.SEARCH_PATH, null, out this.child_pid, null);
             } catch (Error e) {
                 warning (e.message);
             }
@@ -257,11 +253,11 @@ namespace PantheonTerminal {
 
             try {
                 if (program_with_args != null)
-                    this.fork_command_full (Vte.PtyFlags.DEFAULT, dir, program_with_args,
-                                            null, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                    this.spawn_sync (Vte.PtyFlags.DEFAULT, dir, program_with_args,
+                                     null, SpawnFlags.SEARCH_PATH, null, out this.child_pid, null);
                 else
-                    this.fork_command_full (Vte.PtyFlags.DEFAULT, dir, ("bash -c " + program).split (" "),
-                                            null, SpawnFlags.SEARCH_PATH, null, out this.child_pid);
+                    this.spawn_sync (Vte.PtyFlags.DEFAULT, dir, ("bash -c " + program).split (" "),
+                                     null, SpawnFlags.SEARCH_PATH, null, out this.child_pid, null);
             } catch (Error e) {
                 warning (e.message);
             }
@@ -273,7 +269,7 @@ namespace PantheonTerminal {
                 return false;
             }
 
-            int pty = this.pty_object.fd;
+            int pty = this.get_pty().fd;
             int fgpid = Posix.tcgetpgrp (pty);
 
             if (fgpid != this.child_pid && fgpid != -1) {
@@ -410,4 +406,4 @@ namespace PantheonTerminal {
             }
         }
     }
-}
\ No newline at end of file
+}
