diff -rupN cairo-dock-plugins.orig/CMakeLists.txt cairo-dock-plugins/CMakeLists.txt
--- cairo-dock-plugins.orig/CMakeLists.txt	2014-09-28 11:56:56.841693400 +0200
+++ cairo-dock-plugins/CMakeLists.txt	2014-09-28 11:57:14.664204700 +0200
@@ -1345,7 +1345,7 @@ add_subdirectory (systray)
 message (STATUS "> Terminal:")
 enable_if_not_defined (enable-terminal)
 if (enable-terminal)
-	set (TERMINAL_MODULE vte-2.90)
+	set (TERMINAL_MODULE vte-2.91)
 	pkg_check_modules (VTE ${TERMINAL_MODULE})
 	if (NOT VTE_FOUND)
 		message (STATUS "Could not find ${TERMINAL_MODULE}; Cairo-Dock won't be built with terminal applet.")
diff -rupN cairo-dock-plugins.orig/terminal/src/terminal-widget.c cairo-dock-plugins/terminal/src/terminal-widget.c
--- cairo-dock-plugins.orig/terminal/src/terminal-widget.c	2014-09-28 11:56:56.788514700 +0200
+++ cairo-dock-plugins/terminal/src/terminal-widget.c	2014-09-28 12:25:33.651331600 +0200
@@ -263,12 +263,9 @@ static void _term_apply_settings_on_vter
 {
 	g_return_if_fail (vterm != NULL);
 
-	vte_terminal_set_colors_rgba (VTE_TERMINAL(vterm), &myConfig.forecolor.rgba, &myConfig.backcolor.rgba, NULL, 0);
+	vte_terminal_set_colors (VTE_TERMINAL(vterm), &myConfig.forecolor.rgba, &myConfig.backcolor.rgba, NULL, 0);
 
-	if (myConfig.bCustomFont)
-		vte_terminal_set_font_from_string (VTE_TERMINAL (vterm), myConfig.cCustomFont);
-	else
-		vte_terminal_set_font (VTE_TERMINAL (vterm), NULL);
+	vte_terminal_set_font (VTE_TERMINAL (vterm), NULL);
 
 	vte_terminal_set_scroll_on_output (VTE_TERMINAL (vterm), myConfig.bScrollOutput);
 	vte_terminal_set_scroll_on_keystroke (VTE_TERMINAL (vterm), myConfig.bScrollKeystroke);
@@ -324,7 +321,7 @@ static void on_terminal_child_exited(Vte
 		#if (GLIB_MAJOR_VERSION > 2) || (GLIB_MAJOR_VERSION == 2 && GLIB_MINOR_VERSION >= 18)  // VTE_CHECK_VERSION doesn't exist in Hardy.
 			#if VTE_CHECK_VERSION(0,26,0)
 			const gchar *argv[] = {g_getenv ("SHELL"), NULL};
-			vte_terminal_fork_command_full (VTE_TERMINAL(vterm),
+			vte_terminal_spawn_sync (VTE_TERMINAL(vterm),
 				VTE_PTY_NO_LASTLOG | VTE_PTY_NO_UTMP | VTE_PTY_NO_WTMP,
 				"~/",
 				(gchar**)argv,  // argv
@@ -333,6 +330,7 @@ static void on_terminal_child_exited(Vte
 				NULL,  // GSpawnChildSetupFunc child_setup
 				NULL,  // gpointer child_setup_data
 				&pid,
+				NULL,
 				NULL);
 			#else
 			pid = vte_terminal_fork_command (VTE_TERMINAL(vterm),
@@ -541,12 +539,11 @@ void terminal_new_tab(void)
 	//\_________________ On cree un nouveau terminal.
 	GtkWidget *vterm = vte_terminal_new();
 	GTK_WIDGET_GET_CLASS (vterm)->get_accessible = _get_dummy_accessible;  // this is to prevent a bug in libvet2.90; it gives a warning, but it's better than a crash !
-	vte_terminal_set_emulation (VTE_TERMINAL(vterm), "xterm");
 	pid_t pid; 
 	#if (GLIB_MAJOR_VERSION > 2) || (GLIB_MAJOR_VERSION == 2 && GLIB_MINOR_VERSION >= 18)  // VTE_CHECK_VERSION doesn't exist in Hardy.
 		#if VTE_CHECK_VERSION(0,26,0)
 		const gchar *argv[] = {g_getenv ("SHELL"), NULL};
-		vte_terminal_fork_command_full (VTE_TERMINAL(vterm),
+		vte_terminal_spawn_sync (VTE_TERMINAL(vterm),
 			VTE_PTY_NO_LASTLOG | VTE_PTY_NO_UTMP | VTE_PTY_NO_WTMP,
 			"~/",
 			(gchar**)argv,  // argv
@@ -555,6 +552,7 @@ void terminal_new_tab(void)
 			NULL,  // GSpawnChildSetupFunc child_setup
 			NULL,  // gpointer child_setup_data
 			&pid,
+			NULL,
 			NULL);
 		#else
 		pid = vte_terminal_fork_command (VTE_TERMINAL(vterm),
Binary files cairo-dock-plugins.orig/terminal/src/.terminal-widget.c.swp and cairo-dock-plugins/terminal/src/.terminal-widget.c.swp differ
