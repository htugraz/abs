diff -wbBur opensips-2.1.0/db/db_insertq.c opensips-2.1.0.my/db/db_insertq.c
--- opensips-2.1.0/db/db_insertq.c	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/db/db_insertq.c	2015-05-25 16:57:42.010460560 +0300
@@ -534,7 +534,7 @@
 }
 
 /* clean shm memory used by the rows */
-inline void cleanup_rows(db_val_t **rows)
+void cleanup_rows(db_val_t **rows)
 {
 	int i;
 
diff -wbBur opensips-2.1.0/db/db_insertq.h opensips-2.1.0.my/db/db_insertq.h
--- opensips-2.1.0/db/db_insertq.h	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/db/db_insertq.h	2015-05-25 16:57:34.480593553 +0300
@@ -92,7 +92,7 @@
 		lock_release((entry)->lock); \
 	} while (0)
 
-inline void cleanup_rows(db_val_t **rows);
+void cleanup_rows(db_val_t **rows);
 void handle_ql_shutdown(void);
 
 #endif
diff -wbBur opensips-2.1.0/dprint.c opensips-2.1.0.my/dprint.c
--- opensips-2.1.0/dprint.c	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/dprint.c	2015-05-25 16:57:11.490999596 +0300
@@ -119,18 +119,18 @@
 }
 
 /* change the actual log level of the current process */
-inline void set_proc_debug_level(int level)
+void set_proc_debug_level(int level)
 {
 	__set_proc_debug_level(process_no, level);
 }
 
 /* change the actual log level of a given process */
-inline void __set_proc_debug_level(int proc_idx, int level)
+void __set_proc_debug_level(int proc_idx, int level)
 {
 	pt[proc_idx].debug = level;
 }
 
-inline void set_global_debug_level(int level)
+void set_global_debug_level(int level)
 {
 	int i;
 
@@ -140,7 +140,7 @@
 	}
 }
 
-inline void reset_proc_debug_level(void)
+void reset_proc_debug_level(void)
 {
 	*debug = *default_debug;
 }
diff -wbBur opensips-2.1.0/dprint.h opensips-2.1.0.my/dprint.h
--- opensips-2.1.0/dprint.h	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/dprint.h	2015-05-25 16:57:21.624153957 +0300
@@ -117,21 +117,21 @@
 int str2facility(char *s);
 
 /* set the current and default log levels for all OpenSIPS processes */
-inline void set_global_debug_level(int level);
+void set_global_debug_level(int level);
 
 /* set the log level of the current process */
-inline void set_proc_debug_level(int level);
+void set_proc_debug_level(int level);
 
 /*
  * set the (default) log level of a given process
  *
  * Note: the index param is not validated!
  */
-inline void __set_proc_debug_level(int proc_idx, int level);
-inline void __set_proc_default_debug(int proc_idx, int level);
+void __set_proc_debug_level(int proc_idx, int level);
+void __set_proc_default_debug(int proc_idx, int level);
 
 /* changes the logging level to the default value for the current process */
-inline void reset_proc_debug_level(void);
+void reset_proc_debug_level(void);
 
 inline static char* dp_time(void)
 {
diff -wbBur opensips-2.1.0/mem/mem.c opensips-2.1.0.my/mem/mem.c
--- opensips-2.1.0/mem/mem.c	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/mem/mem.c	2015-05-25 16:55:03.996584777 +0300
@@ -166,7 +166,7 @@
 	event_pkg_pending = 0;
 }
 
-inline void pkg_threshold_check(void)
+void pkg_threshold_check(void)
 {
 	long pkg_perc, used, size;
 
diff -wbBur opensips-2.1.0/mem/meminfo.h opensips-2.1.0.my/mem/meminfo.h
--- opensips-2.1.0/mem/meminfo.h	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/mem/meminfo.h	2015-05-25 16:54:49.196846178 +0300
@@ -44,7 +44,7 @@
 // threshold percentage checked
 extern long event_pkg_threshold;
 // events are used only if STATISTICS are used
-inline void pkg_threshold_check(void);
+void pkg_threshold_check(void);
 #else
  #define pkg_threshold_check()
 #endif /* STATISTICS */
diff -wbBur opensips-2.1.0/resolve.c opensips-2.1.0.my/resolve.c
--- opensips-2.1.0/resolve.c	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/resolve.c	2015-05-25 16:54:37.070393698 +0300
@@ -445,7 +445,7 @@
 	return &global_he;
 }
 
-inline struct hostent* resolvehost(char* name, int no_ip_test)
+struct hostent* resolvehost(char* name, int no_ip_test)
 {
 	static struct hostent* he=0;
 #ifdef HAVE_GETIPNODEBYNAME
@@ -591,7 +591,7 @@
 }
 
 
-inline struct hostent* rev_resolvehost(struct ip_addr *ip)
+struct hostent* rev_resolvehost(struct ip_addr *ip)
 {
 	if (dnscache_fetch_func != NULL) {
 		return own_gethostbyaddr((char*)(ip)->u.addr, (ip)->len, (ip)->af);
diff -wbBur opensips-2.1.0/socket_info.c opensips-2.1.0.my/socket_info.c
--- opensips-2.1.0/socket_info.c	2015-04-22 11:20:03.000000000 +0300
+++ opensips-2.1.0.my/socket_info.c	2015-05-25 16:57:57.863513899 +0300
@@ -101,7 +101,7 @@
 
 
 /* another helper function, it just creates a socket_info struct */
-inline struct socket_info* new_sock_info(	char* name,
+struct socket_info* new_sock_info(	char* name,
 								unsigned short port, unsigned short proto,
 								char *adv_name, unsigned short adv_port,
 								unsigned short children,enum si_flags flags)
diff -wbBur opensips-2.1.0/socket_info.h opensips-2.1.0.my/socket_info.h
--- opensips-2.1.0/socket_info.h	2015-05-07 17:13:54.000000000 +0300
+++ opensips-2.1.0.my/socket_info.h	2015-05-25 16:57:54.256910931 +0300
@@ -43,7 +43,7 @@
 int add_listen_iface(char* name, unsigned short port, unsigned short proto,
 							char *adv_name, unsigned short adv_port,
 							unsigned short children, enum si_flags flags);
-inline struct socket_info *
+struct socket_info *
 new_sock_info(char* name, unsigned short port, unsigned short proto,
 							char *adv_name, unsigned short adv_port,
 							unsigned short children, enum si_flags flags);
