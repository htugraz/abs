Index: /trunk/boost/lexical_cast.hpp
===================================================================
--- /trunk/boost/lexical_cast.hpp	(revision 84136)
+++ /trunk/boost/lexical_cast.hpp	(revision 84965)
@@ -70,8 +70,8 @@
 #endif
 
-#if (defined(BOOST_LCAST_HAS_INT128) && !defined(__GNUC__)) || GCC_VERSION > 40700
+// GCC 4.6 has some issues with int128 and uint128. Issues were fixed in GCC 4.7
+#if defined(BOOST_HAS_INT128) && (!defined(__GNUC__) || __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 6))
 #define BOOST_LCAST_HAS_INT128
 #endif
-
 
 namespace boost
Index: /trunk/libs/conversion/test/lexical_cast_integral_types_test.cpp
===================================================================
--- /trunk/libs/conversion/test/lexical_cast_integral_types_test.cpp	(revision 83717)
+++ /trunk/libs/conversion/test/lexical_cast_integral_types_test.cpp	(revision 84965)
@@ -49,5 +49,5 @@
 #endif
 
-#if (defined(BOOST_LCAST_HAS_INT128) && !defined(__GNUC__)) || GCC_VERSION > 40700
+#if defined(BOOST_HAS_INT128) && (!defined(__GNUC__) || __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ > 6))
 #define BOOST_LCAST_HAS_INT128
 #endif
@@ -445,6 +445,6 @@
 
     // Overflow test case from David W. Birdsall
-    std::string must_owerflow_str = "160000000000000000000";
-    std::string must_owerflow_negative_str = "-160000000000000000000";
+    std::string must_owerflow_str =             (sizeof(T) < 16 ?  "160000000000000000000" :  "1600000000000000000000000000000000000000");
+    std::string must_owerflow_negative_str =    (sizeof(T) < 16 ? "-160000000000000000000" : "-1600000000000000000000000000000000000000");
     for (int i = 0; i < 15; ++i) {
         BOOST_CHECK_THROW(lexical_cast<T>(must_owerflow_str), bad_lexical_cast);
