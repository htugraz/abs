Only in leptonica-1.69.my: autom4te.cache
Only in leptonica-1.69.my: config_auto.h
Only in leptonica-1.69.my: config.log
Only in leptonica-1.69.my: config.status
Only in leptonica-1.69.my: libtool
Only in leptonica-1.69.my: Makefile
Only in leptonica-1.69.my/prog: .deps
Only in leptonica-1.69.my/prog: Makefile
Only in leptonica-1.69.my/src: adaptmap.lo
Only in leptonica-1.69.my/src: adaptmap.o
Only in leptonica-1.69.my/src: affinecompose.lo
Only in leptonica-1.69.my/src: affinecompose.o
Only in leptonica-1.69.my/src: affine.lo
Only in leptonica-1.69.my/src: affine.o
Only in leptonica-1.69.my/src: arithlow.lo
Only in leptonica-1.69.my/src: arithlow.o
Only in leptonica-1.69.my/src: arrayaccess.lo
Only in leptonica-1.69.my/src: arrayaccess.o
Only in leptonica-1.69.my/src: bardecode.lo
Only in leptonica-1.69.my/src: bardecode.o
Only in leptonica-1.69.my/src: baseline.lo
Only in leptonica-1.69.my/src: baseline.o
Only in leptonica-1.69.my/src: bbuffer.lo
Only in leptonica-1.69.my/src: bbuffer.o
Only in leptonica-1.69.my/src: bilinear.lo
Only in leptonica-1.69.my/src: bilinear.o
Only in leptonica-1.69.my/src: binarize.lo
Only in leptonica-1.69.my/src: binarize.o
Only in leptonica-1.69.my/src: binexpand.lo
Only in leptonica-1.69.my/src: binexpandlow.lo
Only in leptonica-1.69.my/src: binexpandlow.o
Only in leptonica-1.69.my/src: binexpand.o
Only in leptonica-1.69.my/src: binreduce.lo
Only in leptonica-1.69.my/src: binreducelow.lo
Only in leptonica-1.69.my/src: binreducelow.o
Only in leptonica-1.69.my/src: binreduce.o
Only in leptonica-1.69.my/src: blend.lo
Only in leptonica-1.69.my/src: blend.o
Only in leptonica-1.69.my/src: bmf.lo
Only in leptonica-1.69.my/src: bmf.o
Only in leptonica-1.69.my/src: bmpio.lo
Only in leptonica-1.69.my/src: bmpio.o
Only in leptonica-1.69.my/src: bmpiostub.lo
Only in leptonica-1.69.my/src: bmpiostub.o
Only in leptonica-1.69.my/src: boxbasic.lo
Only in leptonica-1.69.my/src: boxbasic.o
Only in leptonica-1.69.my/src: boxfunc1.lo
Only in leptonica-1.69.my/src: boxfunc1.o
Only in leptonica-1.69.my/src: boxfunc2.lo
Only in leptonica-1.69.my/src: boxfunc2.o
Only in leptonica-1.69.my/src: boxfunc3.lo
Only in leptonica-1.69.my/src: boxfunc3.o
Only in leptonica-1.69.my/src: boxfunc4.lo
Only in leptonica-1.69.my/src: boxfunc4.o
Only in leptonica-1.69.my/src: bytearray.lo
Only in leptonica-1.69.my/src: bytearray.o
Only in leptonica-1.69.my/src: ccbord.lo
Only in leptonica-1.69.my/src: ccbord.o
Only in leptonica-1.69.my/src: ccthin.lo
Only in leptonica-1.69.my/src: ccthin.o
Only in leptonica-1.69.my/src: classapp.lo
Only in leptonica-1.69.my/src: classapp.o
Only in leptonica-1.69.my/src: colorcontent.lo
Only in leptonica-1.69.my/src: colorcontent.o
Only in leptonica-1.69.my/src: coloring.lo
Only in leptonica-1.69.my/src: coloring.o
Only in leptonica-1.69.my/src: colormap.lo
Only in leptonica-1.69.my/src: colormap.o
Only in leptonica-1.69.my/src: colormorph.lo
Only in leptonica-1.69.my/src: colormorph.o
Only in leptonica-1.69.my/src: colorquant1.lo
Only in leptonica-1.69.my/src: colorquant1.o
Only in leptonica-1.69.my/src: colorquant2.lo
Only in leptonica-1.69.my/src: colorquant2.o
Only in leptonica-1.69.my/src: colorseg.lo
Only in leptonica-1.69.my/src: colorseg.o
Only in leptonica-1.69.my/src: colorspace.lo
Only in leptonica-1.69.my/src: colorspace.o
Only in leptonica-1.69.my/src: compare.lo
Only in leptonica-1.69.my/src: compare.o
Only in leptonica-1.69.my/src: conncomp.lo
Only in leptonica-1.69.my/src: conncomp.o
Only in leptonica-1.69.my/src: convertfiles.lo
Only in leptonica-1.69.my/src: convertfiles.o
Only in leptonica-1.69.my/src: convolve.lo
Only in leptonica-1.69.my/src: convolvelow.lo
Only in leptonica-1.69.my/src: convolvelow.o
Only in leptonica-1.69.my/src: convolve.o
Only in leptonica-1.69.my/src: correlscore.lo
Only in leptonica-1.69.my/src: correlscore.o
Only in leptonica-1.69.my/src: .deps
Only in leptonica-1.69.my/src: dewarp.lo
Only in leptonica-1.69.my/src: dewarp.o
Only in leptonica-1.69.my/src: dnabasic.lo
Only in leptonica-1.69.my/src: dnabasic.o
Only in leptonica-1.69.my/src: dwacomb.2.lo
Only in leptonica-1.69.my/src: dwacomb.2.o
Only in leptonica-1.69.my/src: dwacomblow.2.lo
Only in leptonica-1.69.my/src: dwacomblow.2.o
Only in leptonica-1.69.my/src: edge.lo
Only in leptonica-1.69.my/src: edge.o
Only in leptonica-1.69.my/src: enhance.lo
Only in leptonica-1.69.my/src: enhance.o
Only in leptonica-1.69.my/src: fhmtauto.lo
Only in leptonica-1.69.my/src: fhmtauto.o
Only in leptonica-1.69.my/src: fhmtgen.1.lo
Only in leptonica-1.69.my/src: fhmtgen.1.o
Only in leptonica-1.69.my/src: fhmtgenlow.1.lo
Only in leptonica-1.69.my/src: fhmtgenlow.1.o
Only in leptonica-1.69.my/src: finditalic.lo
Only in leptonica-1.69.my/src: finditalic.o
Only in leptonica-1.69.my/src: flipdetect.lo
Only in leptonica-1.69.my/src: flipdetect.o
Only in leptonica-1.69.my/src: fliphmtgen.lo
Only in leptonica-1.69.my/src: fliphmtgen.o
Only in leptonica-1.69.my/src: fmorphauto.lo
Only in leptonica-1.69.my/src: fmorphauto.o
Only in leptonica-1.69.my/src: fmorphgen.1.lo
Only in leptonica-1.69.my/src: fmorphgen.1.o
Only in leptonica-1.69.my/src: fmorphgenlow.1.lo
Only in leptonica-1.69.my/src: fmorphgenlow.1.o
Only in leptonica-1.69.my/src: fpix1.lo
Only in leptonica-1.69.my/src: fpix1.o
Only in leptonica-1.69.my/src: fpix2.lo
Only in leptonica-1.69.my/src: fpix2.o
diff -wbBur leptonica-1.69/src/gifio.c leptonica-1.69.my/src/gifio.c
--- leptonica-1.69/src/gifio.c	2012-01-22 22:29:15.000000000 +0400
+++ leptonica-1.69.my/src/gifio.c	2014-05-29 18:58:26.887319933 +0400
@@ -100,18 +100,18 @@
     _lseek(fd, 0, SEEK_SET);
 #endif  /* _MSC_VER */
 
-    if ((gif = DGifOpenFileHandle(fd)) == NULL)
+    if ((gif = DGifOpenFileHandle(fd, NULL)) == NULL)
         return (PIX *)ERROR_PTR("invalid file or file not found",
                                 procName, NULL);
 
         /* Read all the data, but use only the first image found */
     if (DGifSlurp(gif) != GIF_OK) {
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         return (PIX *)ERROR_PTR("failed to read GIF data", procName, NULL);
     }
 
     if (gif->SavedImages == NULL) {
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         return (PIX *)ERROR_PTR("no images found in GIF", procName, NULL);
     }
 
@@ -119,12 +119,12 @@
     w = si.ImageDesc.Width;
     h = si.ImageDesc.Height;
     if (w <= 0 || h <= 0) {
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         return (PIX *)ERROR_PTR("invalid image dimensions", procName, NULL);
     }
 
     if (si.RasterBits == NULL) {
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         return (PIX *)ERROR_PTR("no raster data in GIF", procName, NULL);
     }
 
@@ -138,7 +138,7 @@
     }
     else {
             /* don't know where to take cmap from */
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         return (PIX *)ERROR_PTR("color map is missing", procName, NULL);
     }
 
@@ -162,7 +162,7 @@
     }
 
     if ((pixd = pixCreate(w, h, d)) == NULL) {
-        DGifCloseFile(gif);
+        DGifCloseFile(gif, NULL);
         pixcmapDestroy(&cmap);
         return (PIX *)ERROR_PTR("failed to allocate pixd", procName, NULL);
     }
@@ -197,7 +197,7 @@
         pixTransferAllData(pixd, &pixdi, 0, 0);
     }
 
-    DGifCloseFile(gif);
+    DGifCloseFile(gif, NULL);
     return pixd;
 }
 
@@ -316,7 +316,7 @@
     }
 
         /* Save the cmap colors in a gif_cmap */
-    if ((gif_cmap = MakeMapObject(gif_ncolor, NULL)) == NULL) {
+    if ((gif_cmap = GifMakeMapObject(gif_ncolor, NULL)) == NULL) {
         pixDestroy(&pixd);
         return ERROR_INT("failed to create GIF color map", procName, 1);
     }
@@ -325,7 +325,7 @@
         if (ncolor > 0) {
             if (pixcmapGetColor(cmap, i, &rval, &gval, &bval) != 0) {
                 pixDestroy(&pixd);
-                FreeMapObject(gif_cmap);
+                GifFreeMapObject(gif_cmap);
                 return ERROR_INT("failed to get color from color map",
                                  procName, 1);
             }
@@ -337,9 +337,9 @@
     }
 
         /* Get the gif file handle */
-    if ((gif = EGifOpenFileHandle(fd)) == NULL) {
+    if ((gif = EGifOpenFileHandle(fd, NULL)) == NULL) {
         pixDestroy(&pixd);
-        FreeMapObject(gif_cmap);
+        GifFreeMapObject(gif_cmap);
         return ERROR_INT("failed to create GIF image handle", procName, 1);
     }
 
@@ -347,15 +347,15 @@
     if (EGifPutScreenDesc(gif, w, h, gif_cmap->BitsPerPixel, 0, gif_cmap)
         != GIF_OK) {
         pixDestroy(&pixd);
-        FreeMapObject(gif_cmap);
-        EGifCloseFile(gif);
+        GifFreeMapObject(gif_cmap);
+        EGifCloseFile(gif, NULL);
         return ERROR_INT("failed to write screen description", procName, 1);
     }
-    FreeMapObject(gif_cmap); /* not needed after this point */
+    GifFreeMapObject(gif_cmap); /* not needed after this point */
 
     if (EGifPutImageDesc(gif, 0, 0, w, h, FALSE, NULL) != GIF_OK) {
         pixDestroy(&pixd);
-        EGifCloseFile(gif);
+        EGifCloseFile(gif, NULL);
         return ERROR_INT("failed to image screen description", procName, 1);
     }
 
@@ -363,13 +363,13 @@
     wpl = pixGetWpl(pixd);
     if (d != 1 && d != 2 && d != 4 && d != 8) {
         pixDestroy(&pixd);
-        EGifCloseFile(gif);
+        EGifCloseFile(gif, NULL);
         return ERROR_INT("image depth is not in {1, 2, 4, 8}", procName, 1);
     }
 
     if ((gif_line = (GifByteType *)CALLOC(sizeof(GifByteType), w)) == NULL) {
         pixDestroy(&pixd);
-        EGifCloseFile(gif);
+        EGifCloseFile(gif, NULL);
         return ERROR_INT("mem alloc fail for data line", procName, 1);
     }
 
@@ -398,7 +398,7 @@
         if (EGifPutLine(gif, gif_line, w) != GIF_OK) {
             FREE(gif_line);
             pixDestroy(&pixd);
-            EGifCloseFile(gif);
+            EGifCloseFile(gif, NULL);
             return ERROR_INT("failed to write data line into GIF", procName, 1);
         }
     }
@@ -414,7 +414,7 @@
 
     FREE(gif_line);
     pixDestroy(&pixd);
-    EGifCloseFile(gif);
+    EGifCloseFile(gif, NULL);
     return 0;
 }
 
Only in leptonica-1.69.my/src: .libs
Only in leptonica-1.69.my/src: Makefile
Only in leptonica-1.69.my: stamp-h1
