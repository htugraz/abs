diff --git a/doc/xml/firewalld.xml b/doc/xml/firewalld.xml
index 7171e4f..c34f5ea 100644
--- a/doc/xml/firewalld.xml
+++ b/doc/xml/firewalld.xml
@@ -86,6 +86,15 @@
       </varlistentry>
 
       <varlistentry>
+        <term><option>--debug-gc</option></term>
+        <listitem>
+	  <para>
+	    Print garbage collector leak information. The collector runs every 10 seconds and if there are leaks, it prints information about the leaks.
+	  </para>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
         <term><option>--nofork</option></term>
         <listitem>
 	  <para>
diff --git a/src/firewall-applet b/src/firewall-applet
index 998ef3a..fc0e479 100755
--- a/src/firewall-applet
+++ b/src/firewall-applet
@@ -423,6 +423,7 @@ class TrayApplet(object):
         self.shields_dialog.set_property("width-request", 400)
         self.shields_dialog.resize_to_geometry(400, 100)
         self.shields_dialog.add_buttons("gtk-close", 1)
+        self.shields_dialog.set_icon_name(self.icon_name)
         self.shields_dialog.set_modal(True)
         vbox = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=6)
         vbox.set_border_width(12)
diff --git a/src/firewall-cmd b/src/firewall-cmd
index cef8e24..5a1e9bd 100755
--- a/src/firewall-cmd
+++ b/src/firewall-cmd
@@ -56,7 +56,7 @@ def __print_if_verbose(msg=None):
         print(msg)
 
 def __usage():
-    print """
+    print ("""
 Usage: firewall-cmd [OPTIONS...]
 
 General Options
@@ -241,7 +241,7 @@ Panic Options
   --panic-on           Enable panic mode
   --panic-off          Disable panic mode
   --query-panic        Query whether panic mode is enabled
-"""
+""")
 
 def __parse_port(value):
     try:
diff --git a/src/firewall-config b/src/firewall-config
index 89a9797..0d4b781 100755
--- a/src/firewall-config
+++ b/src/firewall-config
@@ -2780,11 +2780,9 @@ class FirewallConfig(object):
 
     def change_interface_selection_cb(self, selection):
         (model, iter) = selection.get_selected()
-        if not iter:
-            return
-        interface = self.interfaceStore.get_value(iter, 0)
         if iter:
             self.editInterfaceButton.set_sensitive(True)
+            interface = self.interfaceStore.get_value(iter, 0)
             if interface in self.connections:
                 self.removeInterfaceButton.set_sensitive(False)
             else:
diff --git a/src/firewall-config.glade b/src/firewall-config.glade
index f5f42cc..3d79f73 100755
--- a/src/firewall-config.glade
+++ b/src/firewall-config.glade
@@ -110,7 +110,7 @@
                 <property name="max_length">60</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
-                <property name="width_chars">20</property>
+                <property name="width_chars">40</property>
                 <property name="shadow_type">none</property>
                 <property name="invisible_char_set">True</property>
               </object>
@@ -211,10 +211,10 @@
               <object class="GtkEntry" id="commandDialogCommandEntry">
                 <property name="visible">True</property>
                 <property name="can_focus">True</property>
-                <property name="max_length">50</property>
+                <property name="max_length">1024</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
-                <property name="width_chars">20</property>
+                <property name="width_chars">50</property>
                 <property name="invisible_char_set">True</property>
                 <signal name="changed" handler="onCommandChanged" swapped="no"/>
               </object>
@@ -315,10 +315,10 @@
               <object class="GtkEntry" id="contextDialogContextEntry">
                 <property name="visible">True</property>
                 <property name="can_focus">True</property>
-                <property name="max_length">50</property>
+                <property name="max_length">1024</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
-                <property name="width_chars">20</property>
+                <property name="width_chars">50</property>
                 <property name="invisible_char_set">True</property>
                 <signal name="changed" handler="onContextChanged" swapped="no"/>
               </object>
@@ -773,6 +773,7 @@
                       <object class="GtkComboBoxText" id="directPassthroughDialogIPVCombobox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
                         <property name="entry_text_column">0</property>
                         <property name="id_column">1</property>
                         <items>
@@ -795,7 +796,7 @@
                         <property name="valign">start</property>
                         <property name="max_length">1024</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">40</property>
+                        <property name="width_chars">50</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onDirectPassthroughDialogChanged" swapped="no"/>
                       </object>
@@ -960,6 +961,7 @@
                       <object class="GtkComboBoxText" id="directRuleDialogTableCombobox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
                         <property name="entry_text_column">0</property>
                         <property name="id_column">1</property>
                         <signal name="changed" handler="onDirectRuleDialogChanged" swapped="no"/>
@@ -976,10 +978,11 @@
                       <object class="GtkEntry" id="directRuleDialogChainEntry">
                         <property name="visible">True</property>
                         <property name="can_focus">True</property>
+                        <property name="halign">start</property>
                         <property name="valign">start</property>
                         <property name="max_length">31</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">20</property>
+                        <property name="width_chars">31</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onDirectRuleDialogChanged" swapped="no"/>
                       </object>
@@ -1009,6 +1012,7 @@
                       <object class="GtkComboBoxText" id="directRuleDialogIPVCombobox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
                         <property name="entry_text_column">0</property>
                         <property name="id_column">1</property>
                         <items>
@@ -1032,7 +1036,7 @@
                         <property name="valign">start</property>
                         <property name="max_length">1024</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">40</property>
+                        <property name="width_chars">50</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onDirectRuleDialogChanged" swapped="no"/>
                       </object>
@@ -1076,6 +1080,7 @@
                       <object class="GtkSpinButton" id="directRuleDialogPrioritySpinbutton">
                         <property name="visible">True</property>
                         <property name="can_focus">True</property>
+                        <property name="halign">start</property>
                         <property name="max_length">8</property>
                         <property name="invisible_char">●</property>
                         <property name="width_chars">8</property>
@@ -1317,10 +1322,10 @@
                       <object class="GtkEntry" id="forwardDialogToAddrEntry">
                         <property name="visible">True</property>
                         <property name="can_focus">True</property>
-                        <property name="max_length">15</property>
+                        <property name="max_length">60</property>
                         <property name="invisible_char">•</property>
                         <property name="activates_default">True</property>
-                        <property name="width_chars">15</property>
+                        <property name="width_chars">25</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onForwardChanged" swapped="no"/>
                       </object>
@@ -1351,7 +1356,7 @@
                         <property name="can_focus">True</property>
                         <property name="max_length">11</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">5</property>
+                        <property name="width_chars">11</property>
                         <signal name="changed" handler="onForwardChanged" swapped="no"/>
                       </object>
                       <packing>
@@ -1412,7 +1417,7 @@
                         <property name="can_focus">True</property>
                         <property name="max_length">11</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">5</property>
+                        <property name="width_chars">11</property>
                         <signal name="changed" handler="onForwardChanged" swapped="no"/>
                       </object>
                       <packing>
@@ -1997,7 +2002,7 @@
                 <property name="max_length">60</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
-                <property name="width_chars">20</property>
+                <property name="width_chars">50</property>
                 <property name="shadow_type">none</property>
                 <property name="invisible_char_set">True</property>
                 <signal name="changed" handler="onInterfaceChanged" swapped="no"/>
@@ -5807,7 +5812,7 @@
                 <property name="max_length">50</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
-                <property name="width_chars">20</property>
+                <property name="width_chars">50</property>
                 <property name="invisible_char_set">True</property>
                 <signal name="changed" handler="onModuleChanged" swapped="no"/>
               </object>
@@ -5950,7 +5955,7 @@
                         <property name="max_length">50</property>
                         <property name="invisible_char">•</property>
                         <property name="activates_default">True</property>
-                        <property name="width_chars">20</property>
+                        <property name="width_chars">25</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onPortChanged" swapped="no"/>
                       </object>
@@ -5964,6 +5969,7 @@
                       <object class="GtkComboBoxText" id="portDialogProtoCombobox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
                         <property name="entry_text_column">0</property>
                         <property name="id_column">1</property>
                         <items>
@@ -6122,7 +6128,7 @@
                         <property name="max_length">50</property>
                         <property name="invisible_char">•</property>
                         <property name="activates_default">True</property>
-                        <property name="width_chars">20</property>
+                        <property name="width_chars">25</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onPortProtoChanged" swapped="no"/>
                       </object>
@@ -6136,6 +6142,7 @@
                       <object class="GtkComboBoxText" id="portProtoDialogProtoCombobox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
                         <property name="entry_text_column">0</property>
                         <property name="id_column">1</property>
                         <items>
@@ -6179,7 +6186,7 @@
                         <property name="valign">start</property>
                         <property name="max_length">50</property>
                         <property name="invisible_char">●</property>
-                        <property name="width_chars">20</property>
+                        <property name="width_chars">25</property>
                         <property name="invisible_char_set">True</property>
                         <signal name="changed" handler="onPortProtoChanged" swapped="no"/>
                       </object>
@@ -6369,7 +6376,7 @@
                     <property name="hexpand">True</property>
                     <property name="max_length">50</property>
                     <property name="invisible_char">●</property>
-                    <property name="width_chars">20</property>
+                    <property name="width_chars">25</property>
                     <property name="invisible_char_set">True</property>
                     <signal name="changed" handler="onProtoChanged" swapped="no"/>
                   </object>
@@ -6504,6 +6511,7 @@
                       <object class="GtkLabel" id="richRuleDialogSourceLabel">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">end</property>
                         <property name="xalign">1</property>
                         <property name="label" translatable="yes">Source:</property>
                       </object>
@@ -6518,6 +6526,7 @@
                       <object class="GtkLabel" id="richRuleDialogDestinationLabel">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">end</property>
                         <property name="xalign">1</property>
                         <property name="label" translatable="yes">Destination:</property>
                       </object>
@@ -6552,7 +6561,7 @@
                         <property name="can_focus">True</property>
                         <property name="receives_default">False</property>
                         <property name="halign">end</property>
-                        <property name="xalign">0</property>
+                        <property name="xalign">1</property>
                         <property name="draw_indicator">True</property>
                         <signal name="toggled" handler="on_richRuleDialog_changed" swapped="no"/>
                       </object>
@@ -6586,6 +6595,7 @@
                       <object class="GtkBox" id="richRuleDialogSourceBox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="spacing">3</property>
                         <child>
                           <object class="GtkButton" id="richRuleDialogSourceChooser">
@@ -6675,6 +6685,7 @@
                       <object class="GtkBox" id="richRuleDialogDestinationBox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="spacing">3</property>
                         <child>
                           <object class="GtkButton" id="richRuleDialogDestinationChooser">
@@ -6764,6 +6775,7 @@
                       <object class="GtkBox" id="richRuleDialogActionBox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="orientation">vertical</property>
                         <property name="spacing">3</property>
                         <child>
@@ -6819,6 +6831,7 @@
                                     <property name="visible">True</property>
                                     <property name="can_focus">True</property>
                                     <property name="hexpand">True</property>
+                                    <property name="max_length">50</property>
                                     <property name="invisible_char">●</property>
                                     <property name="invisible_char_set">True</property>
                                     <signal name="changed" handler="on_richRuleDialog_changed" swapped="no"/>
@@ -6944,6 +6957,7 @@
                       <object class="GtkGrid" id="richRuleDialogLogGrid">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="row_spacing">6</property>
                         <property name="column_spacing">3</property>
                         <child>
@@ -6981,9 +6995,12 @@
                           <object class="GtkEntry" id="richRuleDialogLogPrefixEntry">
                             <property name="visible">True</property>
                             <property name="can_focus">True</property>
+                            <property name="halign">start</property>
                             <property name="hexpand">True</property>
+                            <property name="max_length">29</property>
                             <property name="invisible_char">•</property>
                             <property name="activates_default">True</property>
+                            <property name="width_chars">29</property>
                             <property name="invisible_char_set">True</property>
                             <signal name="changed" handler="on_richRuleDialog_changed" swapped="no"/>
                           </object>
@@ -7177,6 +7194,7 @@
                       <object class="GtkBox" id="richRuleDialogAuditBox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="spacing">3</property>
                         <child>
                           <object class="GtkCheckButton" id="richRuleDialogAuditLimitCheck">
@@ -7280,19 +7298,21 @@
                         <property name="can_focus">True</property>
                         <property name="receives_default">False</property>
                         <property name="halign">end</property>
-                        <property name="xalign">0</property>
+                        <property name="xalign">1</property>
                         <property name="draw_indicator">True</property>
                         <signal name="toggled" handler="on_richRuleDialog_changed" swapped="no"/>
                       </object>
                       <packing>
                         <property name="top_attach">2</property>
                         <property name="bottom_attach">3</property>
+                        <property name="x_options">GTK_FILL</property>
                       </packing>
                     </child>
                     <child>
                       <object class="GtkBox" id="richRuleDialogElementBox">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="hexpand">True</property>
                         <property name="spacing">6</property>
                         <child>
                           <object class="GtkComboBoxText" id="richRuleDialogElementCombobox">
@@ -7391,9 +7411,12 @@
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
                         <property name="halign">end</property>
-                        <property name="xalign">0</property>
+                        <property name="xalign">1</property>
                         <property name="label" translatable="yes">Family:</property>
                       </object>
+                      <packing>
+                        <property name="x_options">GTK_FILL</property>
+                      </packing>
                     </child>
                     <child>
                       <object class="GtkCheckButton" id="richRuleDialogActionCheck">
@@ -7402,13 +7425,14 @@
                         <property name="can_focus">True</property>
                         <property name="receives_default">False</property>
                         <property name="halign">end</property>
-                        <property name="xalign">0</property>
+                        <property name="xalign">1</property>
                         <property name="draw_indicator">True</property>
                         <signal name="toggled" handler="on_richRuleDialog_changed" swapped="no"/>
                       </object>
                       <packing>
                         <property name="top_attach">4</property>
                         <property name="bottom_attach">5</property>
+                        <property name="x_options">GTK_FILL</property>
                       </packing>
                     </child>
                   </object>
@@ -7985,7 +8009,7 @@
               <object class="GtkEntry" id="userDialogUserEntry">
                 <property name="visible">True</property>
                 <property name="can_focus">True</property>
-                <property name="max_length">50</property>
+                <property name="max_length">256</property>
                 <property name="invisible_char">•</property>
                 <property name="activates_default">True</property>
                 <property name="width_chars">20</property>
diff --git a/src/firewall-offline-cmd b/src/firewall-offline-cmd
index f4bea71..84d6c74 100755
--- a/src/firewall-offline-cmd
+++ b/src/firewall-offline-cmd
@@ -326,18 +326,18 @@ def read_sysconfig_args():
     if os.path.exists(CONFIG) and os.path.isfile(CONFIG):
         filename = CONFIG
     try:
-        fd = open(filename, 'r')
+        f = open(filename, 'r')
     except:
         return None
     argv = [ ]
-    for line in fd.xreadlines():
+    for line in f:
         if not line:
             break
         line = line.strip()
         if len(line) < 1 or line[0] == '#':
             continue
         argv.append(line)
-    fd.close()
+    f.close()
     return (argv, filename)
 
 def parse_sysconfig_args(args, merge_config=None, filename=None):
diff --git a/src/firewall/core/fw.py b/src/firewall/core/fw.py
index bd6772f..cb8db48 100644
--- a/src/firewall/core/fw.py
+++ b/src/firewall/core/fw.py
@@ -64,7 +64,7 @@ class Firewall:
         self.zone = FirewallZone(self)
         self.direct = FirewallDirect(self)
         self.config = FirewallConfig(self)
-        self.policies = FirewallPolicies(self)
+        self.policies = FirewallPolicies()
 
         self.__init_vars()
 
@@ -315,12 +315,14 @@ class Firewall:
             self.zone.add_zone(combined_zone)
 
     def cleanup(self):
-        self.__init_vars()
         self.icmptype.cleanup()
         self.service.cleanup()
         self.zone.cleanup()
         self.config.cleanup()
         self.direct.cleanup()
+        self.policies.cleanup()
+        self._firewalld_conf.cleanup()
+        self.__init_vars()
 
     def stop(self):
         if self.cleanup_on_exit:
@@ -627,7 +629,7 @@ class Firewall:
         if _new_dz != _old_dz:
             # default zone changed. Move interfaces from old default zone to 
             # the new one.
-            for iface, settings in _zone_interfaces[_old_dz].items():
+            for iface, settings in list(_zone_interfaces[_old_dz].items()):
                 if settings["__default__"]:
                     # move only those that were added to default zone
                     # (not those that were added to specific zone same as 
@@ -710,7 +712,7 @@ class Firewall:
 
             # Move interfaces from old default zone to the new one.
             _old_dz_settings = self.zone.get_settings(_old_dz)
-            for iface, settings in _old_dz_settings["interfaces"].items():
+            for iface, settings in list(_old_dz_settings["interfaces"].items()):
                 if settings["__default__"]:
                     # move only those that were added to default zone
                     # (not those that were added to specific zone same as default)
diff --git a/src/firewall/core/fw_config.py b/src/firewall/core/fw_config.py
index 851d5a1..fae69ca 100644
--- a/src/firewall/core/fw_config.py
+++ b/src/firewall/core/fw_config.py
@@ -47,21 +47,42 @@ class FirewallConfig:
         self._direct = None
 
     def cleanup(self):
-        for x in self._default_icmptypes.keys():
+        for x in list(self._default_icmptypes.keys()):
+            self._default_icmptypes[x].cleanup()
             del self._default_icmptypes[x]
-        for x in self._icmptypes.keys():
+        for x in list(self._icmptypes.keys()):
+            self._icmptypes[x].cleanup()
             del self._icmptypes[x]
 
-        for x in self._default_services.keys():
+        for x in list(self._default_services.keys()):
+            self._default_services[x].cleanup()
             del self._default_services[x]
-        for x in self._services.keys():
+        for x in list(self._services.keys()):
+            self._services[x].cleanup()
             del self._services[x]
 
-        for x in self._default_zones.keys():
+        for x in list(self._default_zones.keys()):
+            self._default_zones[x].cleanup()
             del self._default_zones[x]
-        for x in self._zones.keys():
+        for x in list(self._zones.keys()):
+            self._zones[x].cleanup()
             del self._zones[x]
 
+        if self._firewalld_conf:
+            self._firewalld_conf.cleanup()
+            del self._firewalld_conf
+            self._firewalld_conf = None
+
+        if self._policies:
+            self._policies.cleanup()
+            del self._policies
+            self._policies = None
+
+        if self._direct:
+            self._direct.cleanup()
+            del self._direct
+            self._direct = None
+
         self.__init_vars()
 
     # access check
@@ -111,8 +132,8 @@ class FirewallConfig:
     # icmptypes
 
     def get_icmptypes(self):
-        return sorted(set(self._icmptypes.keys() + \
-                          self._default_icmptypes.keys()))
+        return sorted(set(list(self._icmptypes.keys()) + \
+                          list(self._default_icmptypes.keys())))
 
     def add_icmptype(self, obj):
         if obj.default:
@@ -273,8 +294,8 @@ class FirewallConfig:
     # services
 
     def get_services(self):
-        return sorted(set(self._services.keys() + \
-                          self._default_services.keys()))
+        return sorted(set(list(self._services.keys()) + \
+                          list(self._default_services.keys())))
 
     def add_service(self, obj):
         if obj.default:
@@ -435,8 +456,8 @@ class FirewallConfig:
     # zones
 
     def get_zones(self):
-        return sorted(set(self._zones.keys() + \
-                          self._default_zones.keys()))
+        return sorted(set(list(self._zones.keys()) + \
+                          list(self._default_zones.keys())))
 
     def add_zone(self, obj):
         if obj.default:
diff --git a/src/firewall/core/fw_icmptype.py b/src/firewall/core/fw_icmptype.py
index 7a7abd3..8820966 100644
--- a/src/firewall/core/fw_icmptype.py
+++ b/src/firewall/core/fw_icmptype.py
@@ -24,13 +24,10 @@ from firewall.errors import *
 class FirewallIcmpType:
     def __init__(self, fw):
         self._fw = fw
-        self.__init_vars()
-
-    def __init_vars(self):
         self._icmptypes = { }
 
     def cleanup(self):
-        self.__init_vars()
+        self._icmptypes.clear()
 
     # zones
 
diff --git a/src/firewall/core/fw_policies.py b/src/firewall/core/fw_policies.py
index ec444fd..3876d0e 100644
--- a/src/firewall/core/fw_policies.py
+++ b/src/firewall/core/fw_policies.py
@@ -27,16 +27,13 @@ from firewall.core.io.lockdown_whitelist import LockdownWhitelist
 from firewall.errors import *
 
 class FirewallPolicies:
-    def __init__(self, fw):
-        self._fw = fw
-        self.__init_vars()
-
-    def __init_vars(self):
+    def __init__(self):
         self._lockdown = False
         self.lockdown_whitelist = LockdownWhitelist(LOCKDOWN_WHITELIST)
 
     def cleanup(self):
-        self.__init_vars()
+        self._lockdown = False
+        self.lockdown_whitelist.cleanup()
 
     # lockdown
 
diff --git a/src/firewall/core/fw_service.py b/src/firewall/core/fw_service.py
index ac46188..c7c4b06 100644
--- a/src/firewall/core/fw_service.py
+++ b/src/firewall/core/fw_service.py
@@ -24,13 +24,10 @@ from firewall.errors import *
 class FirewallService:
     def __init__(self, fw):
         self._fw = fw
-        self.__init_vars()
-
-    def __init_vars(self):
         self._services = { }
 
     def cleanup(self):
-        self.__init_vars()
+        self._services.clear()
 
     # zones
 
diff --git a/src/firewall/core/fw_zone.py b/src/firewall/core/fw_zone.py
index a434a51..f3531b2 100644
--- a/src/firewall/core/fw_zone.py
+++ b/src/firewall/core/fw_zone.py
@@ -26,7 +26,7 @@ from firewall.functions import portStr, checkIPnMask, checkIP6nMask, \
     checkProtocol, enable_ip_forwarding, check_single_address
 from firewall.core.rich import *
 from firewall.errors import *
-from ipXtables import ip4tables_available_tables, ip6tables_available_tables
+from firewall.core.ipXtables import ip4tables_available_tables, ip6tables_available_tables
 
 mangle = []
 if "mangle" in ip4tables_available_tables:
@@ -73,14 +73,12 @@ INTERFACE_ZONE_OPTS = {
 class FirewallZone:
     def __init__(self, fw):
         self._fw = fw
-        self.__init_vars()
-
-    def __init_vars(self):
         self._chains = { }
         self._zones = { }
 
     def cleanup(self):
-        self.__init_vars()
+        self._chains.clear()
+        self._zones.clear()
 
     # zones
 
@@ -196,6 +194,22 @@ class FirewallZone:
                 rules.append((ipv, [ _zone, 3, "-t", table,
                                      "-j", "%s_allow" % (_zone) ]))
 
+                # handle trust and block zones:
+                # add an additional rule with the zone target (accept, reject or
+                # drop) to the base _zone, with the following limitations:
+                # - REJECT is only valid in the INPUT, FORWARD and
+                # - OUTPUT chains, and user-defined chains which are only 
+                #   called from those chains
+                # - DROP is not supported in nat table
+                target = self._zones[zone].target
+                if target != DEFAULT_ZONE_TARGET and not \
+                   ((target in [ "REJECT", "%%REJECT%%" ] and \
+                     chain not in [ "INPUT", "FORWARD_IN", "FORWARD_OUT",
+                                    "OUTPUT" ]) or \
+                    (target == "DROP" and table == "nat")):
+                    rules.append((ipv, [ _zone, 4, "-t", table,
+                                         "-j", self._zones[zone].target ]))
+
         if create:
             # handle chains first
             ret = self._fw.handle_chains(chains, create)
@@ -371,21 +385,11 @@ class FirewallZone:
                     # create needed chains if not done already
                     if enable:
                         self.add_chain(zone, table, chain)
-
-                    # handle trust and block zone directly, accept or reject
-                    # others will be placed into the proper zone chains
+                    # handle all zones in the same way here, now
+                    # trust and block zone targets are handled now in __chain
                     opt = INTERFACE_ZONE_OPTS[chain]
-                    target = self._zones[zone].target.format(
+                    target = DEFAULT_ZONE_TARGET.format(
                         chain=SHORTCUTS[chain], zone=zone)
-                    if target in [ "REJECT", "%%REJECT%%" ] and \
-                            chain not in [ "INPUT", "FORWARD_IN", "FORWARD_OUT", "OUTPUT" ]:
-                        # REJECT is only valid in the INPUT, FORWARD and
-                        # OUTPUT chains, and user-defined chains which are 
-                        # only called from those chains
-                        continue
-                    if target == "DROP" and table == "nat":
-                        # DROP is not supported in nat table
-                        continue
                     action = "-g" if "_ZONE_" in target else "-j"
                     rule = [ "%s_ZONES" % chain, "-t", table,
                              opt, interface, action, target ]
@@ -1229,7 +1233,8 @@ class FirewallZone:
         if toport:
             self._fw.check_port(toport)
         if toaddr:
-            check_single_address(ipv, toaddr)
+            if not check_single_address(ipv, toaddr):
+                raise FirewallError(INVALID_ADDR, toaddr)
         if not toport and not toaddr:
             raise FirewallError(INVALID_FORWARD)
 
diff --git a/src/firewall/core/io/direct.py b/src/firewall/core/io/direct.py
index 3996843..0f786a7 100644
--- a/src/firewall/core/io/direct.py
+++ b/src/firewall/core/io/direct.py
@@ -21,6 +21,7 @@
 
 import xml.sax as sax
 import os
+import io
 import shutil
 
 from firewall.fw_types import *
@@ -46,22 +47,22 @@ class direct_ContentHandler(IO_Object_ContentHandler):
             if not self.direct:
                 log.error("Parse Error: chain outside of direct")
                 return
-            ipv = str(attrs["ipv"])
-            table = str(attrs["table"])
-            chain = str(attrs["chain"])
+            ipv = attrs["ipv"]
+            table = attrs["table"]
+            chain = attrs["chain"]
             self.item.add_chain(ipv, table, chain)
 
         elif name == "rule":
             if not self.direct:
                 log.error("Parse Error: rule outside of direct")
                 return
-            ipv = str(attrs["ipv"])
+            ipv = attrs["ipv"]
             if ipv not in [ "ipv4", "ipv6", "eb" ]:
                 raise FirewallError(INVALID_IPV, ipv)
-            table = str(attrs["table"])
-            chain = str(attrs["chain"])
+            table = attrs["table"]
+            chain = attrs["chain"]
             try:
-                priority = int(str(attrs["priority"]))
+                priority = int(attrs["priority"])
             except:
                 log.error("Parse Error: %s is not a valid priority" % 
                           attrs["priority"])
@@ -72,7 +73,7 @@ class direct_ContentHandler(IO_Object_ContentHandler):
             if not self.direct:
                 log.error("Parse Error: command outside of direct")
                 return
-            ipv = str(attrs["ipv"])
+            ipv = attrs["ipv"]
             self._passthrough = [ipv]
 
         else:
@@ -124,7 +125,9 @@ class Direct(IO_Object):
     def __init__(self, filename):
         super(Direct, self).__init__()
         self.filename = filename
-        self.clear()
+        self.chains = LastUpdatedOrderedDict()
+        self.rules = LastUpdatedOrderedDict()
+        self.passthroughs = LastUpdatedOrderedDict()
 
     def _check_config(self, config, item):
         pass
@@ -150,7 +153,7 @@ class Direct(IO_Object):
         return tuple(ret)
 
     def import_config(self, config):
-        self.clear()
+        self.cleanup()
         self.check_config(config)
         for i,(element,value) in enumerate(self.IMPORT_EXPORT_STRUCTURE):
             if element == "chains":
@@ -163,10 +166,10 @@ class Direct(IO_Object):
                 for x in config[i]:
                     self.add_passthrough(*x)
 
-    def clear(self):
-        self.chains = LastUpdatedOrderedDict()
-        self.rules = LastUpdatedOrderedDict()
-        self.passthroughs = LastUpdatedOrderedDict()
+    def cleanup(self):
+        self.chains.clear()
+        self.rules.clear()
+        self.passthroughs.clear()
 
     def output(self):
         print ("chains")
@@ -301,13 +304,15 @@ class Direct(IO_Object):
     # read
 
     def read(self):
-        self.clear()
+        self.cleanup()
         if not self.filename.endswith(".xml"):
             raise FirewallError(INVALID_NAME, self.filename)
         handler = direct_ContentHandler(self)
         parser = sax.make_parser()
         parser.setContentHandler(handler)
-        parser.parse(self.filename)
+        with open(self.filename, "r") as f:
+            parser.parse(f)
+
 
     def write(self):
         if os.path.exists(self.filename):
@@ -316,8 +321,8 @@ class Direct(IO_Object):
             except Exception as msg:
                 raise IOError("Backup of '%s' failed: %s" % (self.filename, msg))
 
-        fd = open(self.filename, "w")
-        handler = IO_Object_XMLGenerator(fd)
+        f = io.open(self.filename, mode='wt', encoding='UTF-8')
+        handler = IO_Object_XMLGenerator(f)
         handler.startDocument()
 
         # start whitelist element
@@ -362,4 +367,5 @@ class Direct(IO_Object):
         handler.endElement("direct")
         handler.ignorableWhitespace("\n")
         handler.endDocument()
-        fd.close()
+        f.close()
+        del handler
diff --git a/src/firewall/core/io/firewalld_conf.py b/src/firewall/core/io/firewalld_conf.py
index ab64814..499939d 100644
--- a/src/firewall/core/io/firewalld_conf.py
+++ b/src/firewall/core/io/firewalld_conf.py
@@ -19,11 +19,13 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 
-import os, os.path
+import os.path
+import io
 import tempfile
 import shutil
 
 from firewall.core.logger import log
+from firewall.functions import b2u, u2b, PY2
 
 valid_keys = ["DefaultZone", "MinimalMark", "CleanupOnExit", "Lockdown"]
 
@@ -36,12 +38,16 @@ class firewalld_conf:
         self._config = { }
         self._deleted = [ ]
 
+    def cleanup(self):
+        self._config.clear()
+        self._deleted = [ ]
+
     def get(self, key):
         return self._config.get(key.strip())
 
     def set(self, key, value):
-        _key = key.strip()
-        self._config[_key] = value.strip()
+        _key = b2u(key.strip())
+        self._config[_key] = b2u(value.strip())
         if _key in self._deleted:
             self._deleted.remove[_key]
 
@@ -51,7 +57,7 @@ class firewalld_conf:
             if s:
                 s += '\n'
             s += '%s=%s' % (key, value)
-        return s
+        return u2b(s) if PY2 else s
 
     # load self.filename
     def read(self):
@@ -62,7 +68,7 @@ class firewalld_conf:
             log.error("Failed to open '%s': %s" % (self.filename, msg))
             raise
 
-        for line in f.xreadlines():
+        for line in f:
             if not line:
                 break
             line = line.strip()
@@ -96,7 +102,9 @@ class firewalld_conf:
 
         try:
             (temp_file, temp) = tempfile.mkstemp(prefix="%s." % os.path.basename(self.filename),
-                                                 dir=os.path.dirname(self.filename))
+                                                 dir=os.path.dirname(self.filename),
+                                                 text=True)
+            temp_file = io.open(temp_file, mode='wt', encoding='UTF-8')
         except Exception as msg:
             log.error("Failed to open temporary file: %s" % msg)
             raise
@@ -104,7 +112,7 @@ class firewalld_conf:
         modified = False
         empty = False
         try:
-            f = open(self.filename, "r")
+            f= io.open(self.filename, mode='rt', encoding='UTF-8')
         except Exception as msg:
             if os.path.exists(self.filename):
                 log.error("Failed to open '%s': %s" % (self.filename, msg))
@@ -112,7 +120,7 @@ class firewalld_conf:
             else:
                 f = None
         else:
-            for line in f.xreadlines():
+            for line in f:
                 if not line:
                     break
                 # remove newline
@@ -120,17 +128,17 @@ class firewalld_conf:
 
                 if len(line) < 1:
                     if not empty:
-                        os.write(temp_file, "\n")
+                        temp_file.write(u"\n")
                         empty = True
                 elif line[0] == '#':
                     empty = False
-                    os.write(temp_file, line)
-                    os.write(temp_file, "\n")
+                    temp_file.write(line)
+                    temp_file.write(u"\n")
                 else:
                     p = line.split("=")
                     if len(p) != 2:
                         empty = False
-                        os.write(temp_file, line+"\n")
+                        temp_file.write(line+u"\n")
                         continue
                     key = p[0].strip()
                     value = p[1].strip()
@@ -139,14 +147,14 @@ class firewalld_conf:
                         if (key in self._config and \
                                 self._config[key] != value):
                             empty = False
-                            os.write(temp_file, '%s=%s\n' \
-                                         % (key, self._config[key]))
+                            temp_file.write(u'%s=%s\n' %
+                                            (key, self._config[key]))
                             modified = True
                         elif key in self._deleted:
                             modified = True
                         else:
                             empty = False
-                            os.write(temp_file, line+"\n")
+                            temp_file.write(line+u"\n")
                         done.append(key)
                     else:
                         modified = True
@@ -157,14 +165,14 @@ class firewalld_conf:
                 if key in done:
                     continue
                 if not empty:
-                    os.write(temp_file, "\n")
+                    temp_file.write(u"\n")
                     empty = True
-                os.write(temp_file, '%s=%s\n' % (key, value))
+                temp_file.write(u'%s=%s\n' % (key, value))
                 modified = True
 
         if f:
             f.close()
-        os.close(temp_file)
+        temp_file.close()
 
         if not modified: # not modified: remove tempfile
             os.remove(temp)
@@ -184,4 +192,4 @@ class firewalld_conf:
             os.remove(temp)
             raise IOError("Failed to create '%s': %s" % (self.filename, msg))
         else:
-            os.chmod(self.filename, 0600)
+            os.chmod(self.filename, 0o600)
diff --git a/src/firewall/core/io/icmptype.py b/src/firewall/core/io/icmptype.py
index 98dd899..ab42313 100644
--- a/src/firewall/core/io/icmptype.py
+++ b/src/firewall/core/io/icmptype.py
@@ -21,6 +21,7 @@
 
 import xml.sax as sax
 import os
+import io
 import shutil
 
 from firewall.config import ETC_FIREWALLD
@@ -55,6 +56,12 @@ class IcmpType(IO_Object):
         self.description = ""
         self.destination = [ ]
 
+    def cleanup(self):
+        self.version = ""
+        self.short = ""
+        self.description = ""        
+        del self.destination[:]
+
     def _check_config(self, config, item):
         if item == "destination":
             for destination in config:
@@ -72,7 +79,7 @@ class icmptype_ContentHandler(IO_Object_ContentHandler):
                 log.warning("Ignoring deprecated attribute name='%s'" % 
                             attrs["name"])
             if "version" in attrs:
-                self.item.version = str(attrs["version"])
+                self.item.version = attrs["version"]
         elif name == "short":
             pass
         elif name == "description":
@@ -98,6 +105,8 @@ def icmptype_reader(filename, path):
     name = "%s/%s" % (path, filename)
     with open(name, "r") as f:
         parser.parse(f)
+    del handler
+    del parser
     return icmptype
 
 def icmptype_writer(icmptype, path=None):
@@ -111,11 +120,11 @@ def icmptype_writer(icmptype, path=None):
     if os.path.exists(name):
         try:
             shutil.copy2(name, "%s.old" % name)
-        except Exception, msg:
+        except Exception as msg:
             raise IOError("Backup of '%s' failed: %s" % (name, msg))
 
-    fd = open(name, "w")
-    handler = IO_Object_XMLGenerator(fd)
+    f = io.open(name, mode='wt', encoding='UTF-8')
+    handler = IO_Object_XMLGenerator(f)
     handler.startDocument()
 
     # start icmptype element
@@ -129,9 +138,7 @@ def icmptype_writer(icmptype, path=None):
     if icmptype.short and icmptype.short != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("short", { })
-        handler.characters(icmptype.short.decode('utf-8')
-                           if isinstance(icmptype.short, bytes)
-                           else icmptype.short)
+        handler.characters(icmptype.short)
         handler.endElement("short")
         handler.ignorableWhitespace("\n")
 
@@ -139,9 +146,7 @@ def icmptype_writer(icmptype, path=None):
     if icmptype.description and icmptype.description != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("description", { })
-        handler.characters(icmptype.description.decode('utf-8')
-                           if isinstance(icmptype.description, bytes)
-                           else icmptype.description)
+        handler.characters(icmptype.description)
         handler.endElement("description")
         handler.ignorableWhitespace("\n")
 
@@ -158,4 +163,5 @@ def icmptype_writer(icmptype, path=None):
     handler.endElement('icmptype')
     handler.ignorableWhitespace("\n")
     handler.endDocument()
-    fd.close()
+    f.close()
+    del handler
diff --git a/src/firewall/core/io/io_object.py b/src/firewall/core/io/io_object.py
index 85c9518..2d5f85b 100644
--- a/src/firewall/core/io/io_object.py
+++ b/src/firewall/core/io/io_object.py
@@ -22,10 +22,13 @@
 import xml.sax as sax
 import xml.sax.saxutils as saxutils
 import copy
+import sys
 
 from firewall.config import *
 from firewall.errors import *
-from firewall import functions
+from firewall.functions import getPortRange, b2u
+
+PY2 = sys.version < '3'
 
 class IO_Object(object):
     """ Abstract IO_Object as base for icmptype, service and zone """
@@ -100,7 +103,7 @@ class IO_Object(object):
                 self._check_config_structure(config[i], value)
         elif type(structure) == dict:
             # only one key value pair in structure
-            (skey, svalue) = structure.items()[0]
+            (skey, svalue) = list(structure.items())[0]
             for (key, value) in config.items():
                 if type(key) != type(skey):
                     raise FirewallError(INVALID_TYPE,
@@ -180,22 +183,73 @@ class IO_Object_ContentHandler(sax.handler.ContentHandler):
 
 class IO_Object_XMLGenerator(saxutils.XMLGenerator):
     def __init__(self, out):
-        saxutils.XMLGenerator.__init__(self, out, "utf-8")
+        # fix memory leak in saxutils.XMLGenerator.__init__:
+        #   out = _gettextwriter(out, encoding)
+        # creates unbound object results in garbage in gc
+        #
+        # saxutils.XMLGenerator.__init__(self, out, "utf-8")
+        #   replaced by modified saxutils.XMLGenerator.__init__ code:
+        sax.handler.ContentHandler.__init__(self)
+        self._write = out.write
+        self._flush = out.flush
+        self._ns_contexts = [{}] # contains uri -> prefix dicts
+        self._current_context = self._ns_contexts[-1]
+        self._undeclared_ns_maps = []
+        self._encoding = "utf-8"
+        self._pending_start_element = False
+        self._short_empty_elements = False
+
+    def startElement(self, name, attrs):
+        """ saxutils.XMLGenerator.startElement() expects name and attrs to be
+            unicode and bad things happen if any of them is (utf-8) encoded.
+            We override the method here to sanitize this case.
+            Can be removed once we drop Python2 support.
+        """
+        if PY2:
+            attrs = { b2u(name):b2u(value) for name, value in attrs.items() }
+        saxutils.XMLGenerator.startElement(self, name, attrs)
 
     def simpleElement(self, name, attrs):
-        if isinstance(name, bytes):
-            name = name.decode('utf-8')
-        self._write(u'<' + name)
-        for (name, value) in attrs.items():
-            if isinstance(name, bytes):
-                name = name.decode('utf-8')
-            if isinstance(value, bytes):
-                value = value.decode('utf-8')
-            self._write(u' %s=%s' % (name, saxutils.quoteattr(value)))
-        self._write(u'/>')
+        """ slightly modified startElement()
+        """
+        if PY2:
+            self._write(u'<' + b2u(name))
+            for (name, value) in attrs.items():
+                self._write(u' %s=%s' % (b2u(name),
+                                        saxutils.quoteattr(b2u(value))))
+            self._write(u'/>')
+        else:
+            self._write('<' + name)
+            for (name, value) in attrs.items():
+                self._write(' %s=%s' % (name, saxutils.quoteattr(value)))
+            self._write('/>')
+
+    def endElement(self, name):
+        """ saxutils.XMLGenerator.endElement() expects name to be
+            unicode and bad things happen if it's (utf-8) encoded.
+            We override the method here to sanitize this case.
+            Can be removed once we drop Python2 support.
+        """
+        saxutils.XMLGenerator.endElement(self, b2u(name))
+
+    def characters(self, content):
+        """ saxutils.XMLGenerator.characters() expects content to be
+            unicode and bad things happen if it's (utf-8) encoded.
+            We override the method here to sanitize this case.
+            Can be removed once we drop Python2 support.
+        """
+        saxutils.XMLGenerator.characters(self, b2u(content))
+
+    def ignorableWhitespace(self, content):
+        """ saxutils.XMLGenerator.ignorableWhitespace() expects content to be
+            unicode and bad things happen if it's (utf-8) encoded.
+            We override the method here to sanitize this case.
+            Can be removed once we drop Python2 support.
+        """
+        saxutils.XMLGenerator.ignorableWhitespace(self, b2u(content))
 
 def check_port(port):
-    port_range = functions.getPortRange(port)
+    port_range = getPortRange(port)
     if port_range == -2 or port_range == -1 or port_range == None or \
             (len(port_range) == 2 and port_range[0] >= port_range[1]):
         raise FirewallError(INVALID_PORT, port)
diff --git a/src/firewall/core/io/lockdown_whitelist.py b/src/firewall/core/io/lockdown_whitelist.py
index 62cccac..7cc416c 100644
--- a/src/firewall/core/io/lockdown_whitelist.py
+++ b/src/firewall/core/io/lockdown_whitelist.py
@@ -21,12 +21,14 @@
 
 import xml.sax as sax
 import os
+import io
 import shutil
 
 from firewall.errors import *
 from firewall.core.io.io_object import *
 from firewall.core.logger import log
-from firewall.functions import uniqify
+from firewall.functions import uniqify, checkUser, checkUid, checkCommand, \
+    checkContext
 
 class lockdown_whitelist_ContentHandler(IO_Object_ContentHandler):
     def __init__(self, item):
@@ -45,7 +47,7 @@ class lockdown_whitelist_ContentHandler(IO_Object_ContentHandler):
             if not self.whitelist:
                 log.error("Parse Error: command outside of whitelist")
                 return
-            command = str(attrs["name"])
+            command = attrs["name"]
             self.item.add_command(command)
 
         elif name == "user":
@@ -54,14 +56,14 @@ class lockdown_whitelist_ContentHandler(IO_Object_ContentHandler):
                 return
             if "id" in attrs:
                 try:
-                    uid = int(str(attrs["id"]))
+                    uid = int(attrs["id"])
                 except:
                     log.error("Parse Error: %s is not a valid uid" % 
                               attrs["id"])
                     return
                 self.item.add_uid(uid)
             elif "name" in attrs:
-                self.item.add_user(str(attrs["name"]))
+                self.item.add_user(attrs["name"])
 
         elif name == "selinux":
             if not self.whitelist:
@@ -70,7 +72,7 @@ class lockdown_whitelist_ContentHandler(IO_Object_ContentHandler):
             if not "context" in attrs:
                 log.error("Parse Error: no context")
                 return
-            self.item.add_context(str(attrs["context"]))
+            self.item.add_context(attrs["context"])
             
 
         else:
@@ -103,21 +105,44 @@ class LockdownWhitelist(IO_Object):
     def __init__(self, filename):
         super(LockdownWhitelist, self).__init__()
         self.filename = filename
-        self.clear()
-
-    def _check_config(self, config, item):
-        pass
-
-    def clear(self):
+        self.parser = None
         self.commands = [ ]
         self.contexts = [ ]
         self.users = [ ]
         self.uids = [ ]
+#        self.gids = [ ]
 #        self.groups = [ ]
 
+    def _check_config(self, config, item):
+        if item in [ "commands", "contexts", "users", "uids" ]:
+            for x in config:
+                self._check_config(x, item[:-1])
+        elif item == "command":
+            if not checkCommand(config):
+                raise FirewallError(INVALID_COMMAND, config)
+        elif item == "context":
+            if not checkContext(config):
+                raise FirewallError(INVALID_CONTEXT, config)
+        elif item == "user":
+            if not checkUser(config):
+                raise FirewallError(INVALID_USER, config)
+        elif item == "uid":
+            if not checkUid(config):
+                raise FirewallError(INVALID_UID, config)
+
+    def cleanup(self):
+        del self.commands[:]
+        del self.contexts[:]
+        del self.users[:]
+        del self.uids[:]
+#        del self.gids[:]
+#        del self.groups[:]
+
     # commands
 
     def add_command(self, command):
+        if not checkCommand(command):
+            raise FirewallError(INVALID_COMMAND, command)
         if command not in self.commands:
             self.commands.append(command)
 
@@ -147,6 +172,8 @@ class LockdownWhitelist(IO_Object):
     # user ids
 
     def add_uid(self, uid):
+        if not checkUid(uid):
+            raise FirewallError(INVALID_UID, str(uid))
         if uid not in self.uids:
             self.uids.append(uid)
 
@@ -169,6 +196,8 @@ class LockdownWhitelist(IO_Object):
     # users
 
     def add_user(self, user):
+        if not checkUser(user):
+            raise FirewallError(INVALID_USER, user)
         if user not in self.users:
             self.users.append(user)
 
@@ -235,6 +264,8 @@ class LockdownWhitelist(IO_Object):
     # selinux contexts
 
     def add_context(self, context):
+        if not checkContext(context):
+            raise FirewallError(INVALID_CONTEXT, context)
         if context not in self.contexts:
             self.contexts.append(context)
 
@@ -257,23 +288,25 @@ class LockdownWhitelist(IO_Object):
     # read and write
 
     def read(self):
-        self.clear()
+        self.cleanup()
         if not self.filename.endswith(".xml"):
             raise FirewallError(INVALID_NAME, self.filename)
         handler = lockdown_whitelist_ContentHandler(self)
         parser = sax.make_parser()
         parser.setContentHandler(handler)
         parser.parse(self.filename)
+        del handler
+        del parser
 
     def write(self):
         if os.path.exists(self.filename):
             try:
                 shutil.copy2(self.filename, "%s.old" % self.filename)
-            except Exception, msg:
+            except Exception as msg:
                 raise IOError("Backup of '%s' failed: %s" % (self.filename, msg))
 
-        fd = open(self.filename, "w")
-        handler = IO_Object_XMLGenerator(fd)
+        f = io.open(self.filename, mode='wt', encoding='UTF-8')
+        handler = IO_Object_XMLGenerator(f)
         handler.startDocument()
 
         # start whitelist element
@@ -315,4 +348,5 @@ class LockdownWhitelist(IO_Object):
         handler.endElement("whitelist")
         handler.ignorableWhitespace("\n")
         handler.endDocument()
-        fd.close()
+        f.close()
+        del handler
diff --git a/src/firewall/core/io/service.py b/src/firewall/core/io/service.py
index 3fabc49..1ff161c 100644
--- a/src/firewall/core/io/service.py
+++ b/src/firewall/core/io/service.py
@@ -21,6 +21,7 @@
 
 import xml.sax as sax
 import os
+import io
 import shutil
 
 from firewall.config import ETC_FIREWALLD
@@ -61,6 +62,14 @@ class Service(IO_Object):
         self.modules = [ ]
         self.destination = { }
 
+    def cleanup(self):
+        self.version = ""
+        self.short = ""
+        self.description = ""
+        del self.ports[:]
+        del self.modules[:]
+        self.destination.clear()
+
     def _check_config(self, config, item):
         if item == "ports":
             for port in config:
@@ -77,39 +86,36 @@ class Service(IO_Object):
                 if destination not in [ "ipv4", "ipv6" ]:
                     raise FirewallError(INVALID_DESTINATION, destination)
                 if not functions.check_address(destination, config[destination]):
-                    raise FirewallError(INVALID_ADDRESS, config[destination])
-                    
+                    raise FirewallError(INVALID_ADDR, config[destination])
 
 # PARSER
 
 class service_ContentHandler(IO_Object_ContentHandler):
     def startElement(self, name, attrs):
         self.item.parser_check_element_attrs(name, attrs)
-
         if name == "service":
             if "name" in attrs:
                 log.warning("Ignoring deprecated attribute name='%s'" % 
                             attrs["name"])
             if "version" in attrs:
-                self.item.version = str(attrs["version"])
+                self.item.version = attrs["version"]
         elif name == "short":
             pass
         elif name == "description":
             pass
         elif name == "port":
-            self.item.ports.append((str(attrs["port"]),
-                                       str(attrs["protocol"])))
+            self.item.ports.append((attrs["port"], attrs["protocol"]))
         elif name == "destination":
             for x in [ "ipv4", "ipv6" ]:
                 if x in attrs:
-                    s = str(attrs[x])
+                    s = attrs[x]
                     if x == "ipv4" and not functions.checkIPnMask(s):
                         raise FirewallError(INVALID_DESTINATION, s)
                     if x == "ipv6" and not functions.checkIP6nMask(s):
                         raise FirewallError(INVALID_DESTINATION, s)
-                    self.item.destination[x] = str(attrs[x])
+                    self.item.destination[x] = attrs[x]
         elif name == "module":
-            self.item.modules.append(str(attrs["name"]))
+            self.item.modules.append(attrs["name"])
 
 def service_reader(filename, path):
     service = Service()
@@ -126,6 +132,8 @@ def service_reader(filename, path):
     name = "%s/%s" % (path, filename)
     with open(name, "r") as f:
         parser.parse(f)
+    del handler
+    del parser
     return service
 
 def service_writer(service, path=None):
@@ -139,11 +147,11 @@ def service_writer(service, path=None):
     if os.path.exists(name):
         try:
             shutil.copy2(name, "%s.old" % name)
-        except Exception, msg:
+        except Exception as msg:
             raise IOError("Backup of '%s' failed: %s" % (name, msg))
 
-    fd = open(name, "w")
-    handler = IO_Object_XMLGenerator(fd)
+    f = io.open(name, mode='wt', encoding='UTF-8')
+    handler = IO_Object_XMLGenerator(f)
     handler.startDocument()
 
     # start service element
@@ -157,9 +165,7 @@ def service_writer(service, path=None):
     if service.short and service.short != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("short", { })
-        handler.characters(service.short.decode('utf-8')
-                           if isinstance(service.short, bytes)
-                           else service.short)
+        handler.characters(service.short)
         handler.endElement("short")
         handler.ignorableWhitespace("\n")
 
@@ -167,9 +173,7 @@ def service_writer(service, path=None):
     if service.description and service.description != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("description", { })
-        handler.characters(service.description.decode('utf-8')
-                           if isinstance(service.description, bytes)
-                           else service.description)
+        handler.characters(service.description)
         handler.endElement("description")
         handler.ignorableWhitespace("\n")
 
@@ -195,4 +199,5 @@ def service_writer(service, path=None):
     handler.endElement('service')
     handler.ignorableWhitespace("\n")
     handler.endDocument()
-    fd.close()
+    f.close()
+    del handler
diff --git a/src/firewall/core/io/zone.py b/src/firewall/core/io/zone.py
index 555c0aa..f5e3aa8 100644
--- a/src/firewall/core/io/zone.py
+++ b/src/firewall/core/io/zone.py
@@ -18,9 +18,9 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
-
 import xml.sax as sax
 import os
+import io
 import shutil
 
 from firewall.config import ETC_FIREWALLD
@@ -107,6 +107,23 @@ class Zone(IO_Object):
         self.rules = [ ]
         self.combined = False
 
+    def cleanup(self):
+        self.version = ""
+        self.short = ""
+        self.description = ""
+        self.UNUSED = False
+        self.target = DEFAULT_ZONE_TARGET
+        del self.services[:]
+        del self.ports[:]
+        del self.icmp_blocks[:]
+        self.masquerade = False
+        del self.forward_ports[:]
+        del self.interfaces[:]
+        del self.sources[:]
+        self.fw_config = None # to be able to check services and a icmp_blocks
+        del self.rules[:]
+        self.combined = False        
+
     def __getattr__(self, name):
         if name == "rules_str":
             rules_str = [str(rule) for rule in self.rules]
@@ -197,12 +214,12 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                 log.warning("Ignoring deprecated attribute name='%s'" % 
                             attrs["name"])
             if "version" in attrs:
-                self.item.version = str(attrs["version"])
+                self.item.version = attrs["version"]
             if "immutable" in attrs:
                 log.warning("Ignoring deprecated attribute immutable='%s'" % 
                             attrs["immutable"])
             if "target" in attrs:
-                target = str(attrs["target"])
+                target = attrs["target"]
                 if target not in ZONE_TARGETS:
                     raise FirewallError(INVALID_TARGET, target)
                 if target != "" and target != DEFAULT_ZONE_TARGET:
@@ -218,21 +235,21 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                     log.error('Invalid rule: More than one element, ignoring.')
                     self._rule_error = True
                     return
-                self._rule.element = Rich_Service(str(attrs["name"]))
+                self._rule.element = Rich_Service(attrs["name"])
                 return
-            if str(attrs["name"]) not in self.item.services:
-                self.item.services.append(str(attrs["name"]))
+            if attrs["name"] not in self.item.services:
+                self.item.services.append(attrs["name"])
         elif name == "port":
             if self._rule:
                 if self._rule.element:
                     log.error('Invalid rule: More than one element, ignoring.')
                     self._rule_error = True
                     return
-                self._rule.element = Rich_Port(str(attrs["port"]),
-                                               str(attrs["protocol"]))
+                self._rule.element = Rich_Port(attrs["port"],
+                                               attrs["protocol"])
                 return
             # TODO: fix port string according to fw_zone.__port_id()
-            entry = (str(attrs["port"]), str(attrs["protocol"]))
+            entry = (attrs["port"], attrs["protocol"])
             if entry not in self.item.ports:
                 self.item.ports.append(entry)
         elif name == "protocol":
@@ -241,7 +258,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                     log.error('Invalid rule: More than one element, ignoring.')
                     self._rule_error = True
                     return
-                self._rule.element = Rich_Protocol(str(attrs["value"]))
+                self._rule.element = Rich_Protocol(attrs["value"])
             else:
                 log.error('Protocol allowed only in rule.')
         elif name == "icmp-block":
@@ -250,10 +267,10 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                     log.error('Invalid rule: More than one element, ignoring.')
                     self._rule_error = True
                     return
-                self._rule.element = Rich_IcmpBlock(str(attrs["name"]))
+                self._rule.element = Rich_IcmpBlock(attrs["name"])
                 return
-            if str(attrs["name"]) not in self.item.icmp_blocks:
-                self.item.icmp_blocks.append(str(attrs["name"]))
+            if attrs["name"] not in self.item.icmp_blocks:
+                self.item.icmp_blocks.append(attrs["name"])
         elif name == "masquerade":
             if self._rule:
                 if "enabled" in attrs:
@@ -269,22 +286,22 @@ class zone_ContentHandler(IO_Object_ContentHandler):
         elif name == "forward-port":
             to_port = ""
             if "to-port" in attrs:
-                to_port = str(attrs["to-port"])
+                to_port = attrs["to-port"]
             to_addr = ""
             if "to-addr" in attrs:
-                to_addr = str(attrs["to-addr"])
+                to_addr = attrs["to-addr"]
 
             if self._rule:
                 if self._rule.element:
                     log.error('Invalid rule: More than one element, ignoring.')
                     self._rule_error = True
                     return
-                self._rule.element = Rich_ForwardPort(str(attrs["port"]),
-                                                      str(attrs["protocol"]),
+                self._rule.element = Rich_ForwardPort(attrs["port"],
+                                                      attrs["protocol"],
                                                       to_port, to_addr)
                 return
             # TODO: fix port string according to fw_zone.__forward_port_id()
-            entry = (str(attrs["port"]), str(attrs["protocol"]), to_port,
+            entry = (attrs["port"], attrs["protocol"], to_port,
                      to_addr)
             if entry not in self.item.forward_ports:
                 self.item.forward_ports.append(entry)
@@ -299,7 +316,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                 log.error('Invalid interface: Name missing.')
                 self._rule_error = True
                 return
-            name = str(attrs["name"])
+            name = attrs["name"]
             if name not in self.item.interfaces:
                 self.item.interfaces.append(name)
             
@@ -313,7 +330,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                 if "invert" in attrs and \
                         attrs["invert"].lower() in [ "yes", "true" ]:
                     invert = True
-                self._rule.source = Rich_Source(str(attrs["address"]), invert)
+                self._rule.source = Rich_Source(attrs["address"], invert)
                 return
             # zone bound to source
             if not "address" in attrs:
@@ -325,7 +342,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
             if "invert" in attrs:
                 log.error('Invalid source: Invertion not allowed here.')
                 return
-            entry = str(attrs["address"])
+            entry = attrs["address"]
             if entry not in self.item.sources:
                 self.item.sources.append(entry)
 
@@ -341,7 +358,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
             if "invert" in attrs and \
                     attrs["invert"].lower() in [ "yes", "true" ]:
                 invert = True
-            self._rule.destination = Rich_Destination(str(attrs["address"]),
+            self._rule.destination = Rich_Destination(attrs["address"],
                                                       invert)
 
         elif name in [ "accept", "reject", "drop" ]:
@@ -358,7 +375,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
             if name == "reject":
                 _type = None
                 if "type" in attrs:
-                    _type = str(attrs["type"])
+                    _type = attrs["type"]
                 self._rule.action = Rich_Reject(_type)
             if name == "drop":
                 self._rule.action = Rich_Drop()
@@ -373,13 +390,13 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                 return
             level = None
             if "level" in attrs:
-                level = str(attrs["level"])
+                level = attrs["level"]
                 if level not in [ "emerg", "alert", "crit", "error",
                                   "warning", "notice", "info", "debug" ]:
                     log.error('Invalid rule: Invalid log level')
                     self._rule_error = True
                     return
-            prefix = str(attrs["prefix"]) if "prefix" in attrs else None
+            prefix = attrs["prefix"] if "prefix" in attrs else None
             self._rule.log = Rich_Log(prefix, level)
             self._limit_ok = self._rule.log
 
@@ -415,7 +432,7 @@ class zone_ContentHandler(IO_Object_ContentHandler):
                 log.error('Invalid rule: More than one limit')
                 self._rule_error = True
                 return
-            value = str(attrs["value"])
+            value = attrs["value"]
             self._limit_ok.limit = Rich_Limit(value)
 
         else:
@@ -456,6 +473,8 @@ def zone_reader(filename, path):
     name = "%s/%s" % (path, filename)
     with open(name, "r") as f:
         parser.parse(f)
+    del handler
+    del parser
     return zone
 
 def zone_writer(zone, path=None):
@@ -469,11 +488,11 @@ def zone_writer(zone, path=None):
     if os.path.exists(name):
         try:
             shutil.copy2(name, "%s.old" % name)
-        except Exception, msg:
+        except Exception as msg:
             raise IOError("Backup of '%s' failed: %s" % (name, msg))
 
-    fd = open(name, "w")
-    handler = IO_Object_XMLGenerator(fd)
+    f = io.open(name, mode='wt', encoding='UTF-8')
+    handler = IO_Object_XMLGenerator(f)
     handler.startDocument()
 
     # start zone element
@@ -489,9 +508,7 @@ def zone_writer(zone, path=None):
     if zone.short and zone.short != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("short", { })
-        handler.characters(zone.short.decode('utf-8')
-                           if isinstance(zone.short, bytes)
-                           else zone.short)
+        handler.characters(zone.short)
         handler.endElement("short")
         handler.ignorableWhitespace("\n")
 
@@ -499,9 +516,7 @@ def zone_writer(zone, path=None):
     if zone.description and zone.description != "":
         handler.ignorableWhitespace("  ")
         handler.startElement("description", { })
-        handler.characters(zone.description.decode('utf-8')
-                           if isinstance(zone.description, bytes)
-                           else zone.description)
+        handler.characters(zone.description)
         handler.endElement("description")
         handler.ignorableWhitespace("\n")
 
@@ -686,4 +701,5 @@ def zone_writer(zone, path=None):
     handler.endElement("zone")
     handler.ignorableWhitespace("\n")
     handler.endDocument()
-    fd.close()
+    f.close()
+    del handler
diff --git a/src/firewall/core/logger.py b/src/firewall/core/logger.py
index 1415c5d..e4a9b67 100644
--- a/src/firewall/core/logger.py
+++ b/src/firewall/core/logger.py
@@ -28,6 +28,9 @@ import syslog
 import traceback
 import fcntl
 
+PY2 = sys.version < '3'
+PY3 = sys.version >= '3'
+
 # ---------------------------------------------------------------------------
 
 # abstract class for logging targets
@@ -188,7 +191,7 @@ class Logger:
     from logger import log
     log.setInfoLogLevel(log.INFO1)
     log.setDebugLogLevel(log.DEBUG1)
-    for i in xrange(1, log.INFO_MAX+1):
+    for i in range(1, log.INFO_MAX+1):
         log.setInfoLogLabel(i, "INFO%d: " % i)
     log.setFormat("%(date)s %(module)s:%(line)d [%(domain)s] %(label)s: "
                   "%(level)d %(message)s")
@@ -254,7 +257,7 @@ class Logger:
         self.setInfoLogLabel(self.WARNING, "WARNING: ")
 
         # generate info levels and infox functions
-        for _level in xrange(1, self.INFO_MAX+1):
+        for _level in range(1, self.INFO_MAX+1):
             setattr(self, "INFO%d" % _level, _level)
             self.setInfoLogLabel(_level, "")
             setattr(self, "info%d" % (_level),
@@ -263,7 +266,7 @@ class Logger:
                      self.info(x, message, *args, **kwargs))(self, _level))
 
         # generate debug levels and debugx functions
-        for _level in xrange(1, self.DEBUG_MAX+1):
+        for _level in range(1, self.DEBUG_MAX+1):
             setattr(self, "DEBUG%d" % _level, _level)
             self.setDebugLogLabel(_level, "DEBUG%d: " % _level)
             setattr(self, "debug%d" % (_level),
@@ -278,13 +281,13 @@ class Logger:
         self.setDateFormat("%d %b %Y %H:%M:%S")
         self.setInfoLogging("*", self.stderr, [ self.FATAL, self.ERROR ])
         self.setInfoLogging("*", self.stdout,
-                        [ i for i in xrange(self.WARNING, self.INFO_MAX+1) ])
+                        [ i for i in range(self.WARNING, self.INFO_MAX+1) ])
         self.setDebugLogging("*", self.stdout,
-                             [ i for i in xrange(1, self.DEBUG_MAX+1) ])
+                             [ i for i in range(1, self.DEBUG_MAX+1) ])
 
     def close(self):
         """ Close all logging targets """
-        for level in xrange(self.FATAL, self.DEBUG_MAX+1):
+        for level in range(self.FATAL, self.DEBUG_MAX+1):
             if not level in self._logging:
                 continue
             for (domain, target, _format) in self._logging[level]:
@@ -470,9 +473,9 @@ class Logger:
                                         max=self.INFO_MAX)
         else:
             if is_debug:
-                levels = [ i for i in xrange(self.DEBUG1, self.DEBUG_MAX) ]
+                levels = [ i for i in range(self.DEBUG1, self.DEBUG_MAX) ]
             else:
-                levels = [ i for i in xrange(self.FATAL, self.INFO_MAX) ]
+                levels = [ i for i in range(self.FATAL, self.INFO_MAX) ]
         return levels
 
     def _getTargets(self, target):
@@ -502,7 +505,7 @@ class Logger:
         if len(_domains) > 0:
             _domains.clear()
 
-        for level in xrange(_range[0], _range[1]):
+        for level in range(_range[0], _range[1]):
             if not level in _logging:
                 continue
             for (domain, target, _format) in _logging[level]:
@@ -605,8 +608,9 @@ class Logger:
                 return None
 
         # class in module
-        for (name, obj) in module.__dict__.iteritems():
-            if isinstance(obj, types.ClassType):
+        for (name, obj) in module.__dict__.items():
+            if ((PY2 and isinstance(obj, types.ClassType)) or
+                (PY3 and isinstance(obj, type))):
                 if hasattr(obj, code.co_name):
                     value = getattr(obj, code.co_name)
                     if type(value) == types.FunctionType:
@@ -819,9 +823,9 @@ log = Logger()
 if __name__ == '__main__':
     log.setInfoLogLevel(log.INFO2)
     log.setDebugLogLevel(log.DEBUG5)
-    for i in xrange(log.INFO1, log.INFO_MAX+1):
+    for i in range(log.INFO1, log.INFO_MAX+1):
         log.setInfoLogLabel(i, "INFO%d: " % i)
-    for i in xrange(log.DEBUG1, log.DEBUG_MAX+1):
+    for i in range(log.DEBUG1, log.DEBUG_MAX+1):
         log.setDebugLogLabel(i, "DEBUG%d: " % i)
 
     log.setFormat("%(date)s %(module)s:%(line)d %(label)s"
diff --git a/src/firewall/core/modules.py b/src/firewall/core/modules.py
index da1e54d..2395dd7 100644
--- a/src/firewall/core/modules.py
+++ b/src/firewall/core/modules.py
@@ -30,7 +30,7 @@ class modules:
         modules = [ ]
         deps = { }
         with open("/proc/modules", "r") as f:
-            for line in f.xreadlines():
+            for line in f:
                 if not line:
                     break
                 line = line.strip()
diff --git a/src/firewall/core/prog.py b/src/firewall/core/prog.py
index 04730be..23909f2 100644
--- a/src/firewall/core/prog.py
+++ b/src/firewall/core/prog.py
@@ -42,7 +42,7 @@ def runProg(prog, argv=[ ]):
             os._exit(255)
     os.close(wfd)
 
-    cret = ""
+    cret = b''
     cout = os.read(rfd, 8192)
     while cout:
         cret += cout
@@ -50,4 +50,5 @@ def runProg(prog, argv=[ ]):
     os.close(rfd)
     (cpid, status) = os.waitpid(pid, 0)
 
-    return (status, cret.rstrip())
+    cret = cret.rstrip().decode('utf-8', 'replace')
+    return (status, cret)
diff --git a/src/firewall/core/rich.py b/src/firewall/core/rich.py
index d77b152..ac0fc94 100644
--- a/src/firewall/core/rich.py
+++ b/src/firewall/core/rich.py
@@ -538,7 +538,9 @@ class Rich_Rule(object):
             ret += " %s" % self.audit
         if self.action:
             ret += " %s" % self.action
-        return ret
+
+        return (functions.u2b(ret)) if functions.PY2 else ret
+
 
 #class Rich_RawRule(object):
 #class Rich_RuleSet(object):
diff --git a/src/firewall/dbus_utils.py b/src/firewall/dbus_utils.py
index 918ef39..af83401 100644
--- a/src/firewall/dbus_utils.py
+++ b/src/firewall/dbus_utils.py
@@ -21,6 +21,9 @@
 
 import dbus
 import pwd
+import sys
+
+PY2 = sys.version < '3'
 
 def command_of_pid(pid):
     """ Get command for pid from /proc """
@@ -94,9 +97,10 @@ def dbus_to_python(obj):
     elif isinstance(obj, dbus.Boolean):
         return obj == True
     elif isinstance(obj, dbus.String):
-        return obj.encode('utf-8')
-    elif isinstance(obj, dbus.UTF8String) or \
-         isinstance(obj, dbus.ObjectPath):
+        return obj.encode('utf-8') if PY2 else str(obj)
+    elif PY2 and isinstance(obj, dbus.UTF8String): # Python3 has no UTF8String
+        return str(obj)
+    elif isinstance(obj, dbus.ObjectPath):
         return str(obj)
     elif isinstance(obj, dbus.Byte) or \
             isinstance(obj, dbus.Int16) or \
@@ -113,7 +117,7 @@ def dbus_to_python(obj):
     elif isinstance(obj, dbus.Struct):
         return tuple([dbus_to_python(x) for x in obj])
     elif isinstance(obj, dbus.Dictionary):
-        return {dbus_to_python(k):dbus_to_python(v) for k,v in obj.iteritems()}
+        return {dbus_to_python(k):dbus_to_python(v) for k,v in obj.items()}
     elif isinstance(obj, bool) or \
          isinstance(obj, str) or isinstance(obj, bytes) or \
          isinstance(obj, int) or isinstance(obj, float) or \
diff --git a/src/firewall/errors.py b/src/firewall/errors.py
index b1fbfd4..51d8534 100644
--- a/src/firewall/errors.py
+++ b/src/firewall/errors.py
@@ -68,6 +68,10 @@ INVALID_FAMILY      =  124
 INVALID_LOG_LEVEL   =  125
 INVALID_AUDIT_TYPE  =  126
 INVALID_MARK        =  127
+INVALID_CONTEXT     =  128
+INVALID_COMMAND     =  129
+INVALID_USER        =  130
+INVALID_UID         =  131
 
 MISSING_TABLE       =  200
 MISSING_CHAIN       =  201
@@ -85,12 +89,6 @@ UNKNOWN_ERROR       =  254
 import sys
 
 class FirewallError(Exception):
-    mod = sys.modules[__module__]
-    errors = dict([(getattr(mod,varname),varname)
-                   for varname in dir(mod)
-                   if not varname.startswith("_")])
-    codes = dict([(errors[code],code) for code in errors])
-
     def __init__(self, code, msg=None):
         self.code = code
         self.msg = msg
@@ -115,3 +113,11 @@ class FirewallError(Exception):
         return code
 
     get_code = staticmethod(get_code)
+
+mod = sys.modules[FirewallError.__module__]
+FirewallError.errors = { getattr(mod,varname) : varname
+                         for varname in dir(mod)
+                         if not varname.startswith("_") and \
+                         type(getattr(mod,varname)) == int }
+FirewallError.codes =  { FirewallError.errors[code] : code
+                         for code in FirewallError.errors }
diff --git a/src/firewall/functions.py b/src/firewall/functions.py
index c3d4146..3f8c978 100644
--- a/src/firewall/functions.py
+++ b/src/firewall/functions.py
@@ -22,8 +22,12 @@
 import socket
 import os.path
 import shlex, pipes
+import string
+import sys
 from firewall.core.logger import log
 
+PY2 = sys.version < '3'
+
 def getPortID(port):
     """ Check and Get port id from port string or port id using socket.getservbyname
 
@@ -62,7 +66,7 @@ def getPortRange(ports):
 
     splits = ports.split("-")
     matched = [ ]
-    for i in xrange(len(splits), 0, -1):
+    for i in range(len(splits), 0, -1):
         id1 = getPortID("-".join(splits[:i]))
         port2 = "-".join(splits[i:])
         if len(port2) > 0:
@@ -289,25 +293,19 @@ def check_port(port):
 
 def check_address(ipv, source):
     if ipv == "ipv4":
-        if not checkIPnMask(source):
-            return False
+        return checkIPnMask(source)
     elif ipv == "ipv6":
-        if not checkIP6nMask(source):
-            return False
+        return checkIP6nMask(source)
     else:
         return False
-    return True
 
 def check_single_address(ipv, source):
     if ipv == "ipv4":
-        if not checkIP(source):
-            return False
+        return checkIP(source)
     elif ipv == "ipv6":
-        if not checkIP6(source):
-            return False
+        return checkIP6(source)
     else:
         return False
-    return True
 
 def uniqify(input):
     # removes duplicates from list, whilst preserving order
@@ -340,6 +338,11 @@ def max_zone_name_len():
 def checkUser(user):
     if len(user) < 1 or len(user) > os.sysconf('SC_LOGIN_NAME_MAX'):
         return False
+    for c in user:
+        if c not in string.ascii_letters and \
+           c not in string.digits and \
+           c not in [ ".", "-", "_", "$" ]:
+            return False
     return True
 
 def checkUid(uid):
@@ -348,7 +351,7 @@ def checkUid(uid):
             uid = int(uid)
         except:
             return False
-    if uid > 0 or uid <= 2^31-1:
+    if uid >= 0 or uid <= 2**31-1:
         return True
     return False
 
@@ -358,6 +361,26 @@ def checkCommand(command):
     for ch in [ "|", "\n", "\0" ]:
         if ch in command:
             return False
+    if command[0] != "/":
+        return False
+    return True
+
+def checkContext(context):
+    splits = context.split(":")
+    if len(splits) not in [4, 5]:
+        return False
+    # user ends with _u if not root
+    if splits[0] != "root" and splits[0][-2:] != "_u":
+        return False
+    # role ends with _r
+    if splits[1][-2:] != "_r":
+        return False
+    # type ends with _t
+    if splits[2][-2:] != "_t":
+        return False
+    # level might also contain :
+    if len(splits[3]) < 1:
+        return False
     return True
 
 def joinArgs(args):
@@ -367,6 +390,9 @@ def joinArgs(args):
         return " ".join(pipes.quote(a) for a in args)
 
 def splitArgs(string):
+    if PY2:
+        # Python2's shlex doesn't like unicode
+        string = u2b(string)
     return shlex.split(string)
 
 def b2u(string):
@@ -374,3 +400,9 @@ def b2u(string):
     if isinstance(string, bytes):
         return string.decode('utf-8', 'replace')
     return string
+
+def u2b(string):
+    """ unicode to bytes """
+    if not isinstance(string, bytes):
+        return string.encode('utf-8', 'replace')
+    return string
diff --git a/src/firewall/fw_types.py b/src/firewall/fw_types.py
index 070ee96..82f843d 100644
--- a/src/firewall/fw_types.py
+++ b/src/firewall/fw_types.py
@@ -19,15 +19,59 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 
-from collections import OrderedDict
+class LastUpdatedOrderedDict(object):
+    def __init__(self, x=None):
+        self._dict = { }
+        self._list = [ ]
+        if x:
+            self.update(x)
 
-class LastUpdatedOrderedDict(OrderedDict):
-    """ Ordered dictionary that stores items in the order they were last
-    set or added """
+    def clear(self):
+        del self._list[:]
+        self._dict.clear()
+
+    def update(self, x):
+        for key,value in x.items():
+            self[key] = value
+
+    def items(self):
+        return [(key, self[key]) for key in self._list]
+
+    def __delitem__(self, key):
+        if key in self._dict:
+            self._list.remove(key)
+            del self._dict[key]
+
+    def __repr__(self):
+        return '%s([%s])' % (self.__class__.__name__, ', '.join(
+                ['(%r, %r)' % (key, self[key]) for key in self._list]))
 
     def __setitem__(self, key, value):
-        # delete entry if it exists
+        if key not in self._dict:
+            self._list.append(key)
+        self._dict[key] = value
+
+    def __getitem__(self, key):
+        if key in self._dict:
+            return self._dict[key]
+        else:
+            return self._list[key]
+
+    def __len__(self):
+        return len(self._list)
+
+    def copy(self):
+        return LastUpdatedOrderedDict(self)
+
+    def keys(self):
+        return self_list[:]
+
+    def values(self, values=None):
+        return [ self[key] for key in self._list ]
+
+    def setdefault(self, key, value=None):
         if key in self:
-            del self[key]
-        # add the new entry as last item
-        OrderedDict.__setitem__(self, key, value)
+            return self[key]
+        else:
+            self[key] = value
+            return value
diff --git a/src/firewall/server/config.py b/src/firewall/server/config.py
index d0f40cc..750a43b 100644
--- a/src/firewall/server/config.py
+++ b/src/firewall/server/config.py
@@ -359,8 +359,7 @@ class FirewallDConfig(slip.dbus.service.Object):
                 "org.freedesktop.DBus.Error.UnknownInterface: "
                 "FirewallD does not implement %s" % interface_name)
 
-        if property_name in [ "DefaultZone", "MinimalMark", "CleanupOnExit",
-                              "Lockdown" ]:
+        if property_name in [ "MinimalMark", "CleanupOnExit" ]:
             if property_name == "MinimalMark":
                 try:
                     foo = int(new_value)
@@ -371,7 +370,7 @@ class FirewallDConfig(slip.dbus.service.Object):
             except:
                 raise FirewallError(INVALID_VALUE, "'%s' for %s" % \
                                             (new_value, property_name))
-            if property_name in [ "CleanupOnExit", "Lockdown" ]:
+            if property_name in [ "CleanupOnExit" ]:
                 if new_value.lower() not in [ "yes", "no", "true", "false" ]:
                     raise FirewallError(INVALID_VALUE, "'%s' for %s" % \
                                             (new_value, property_name))
@@ -379,15 +378,20 @@ class FirewallDConfig(slip.dbus.service.Object):
             self.config.get_firewalld_conf().write()
             self.PropertiesChanged(interface_name,
                                    { property_name: new_value }, [ ])
+        elif property_name in [ "DefaultZone", "Lockdown" ]:
+            raise dbus.exceptions.DBusException(
+                "org.freedesktop.DBus.Error.PropertyReadOnly: "
+                "Property '%s' is read-only" % property_name)
         else:
             raise dbus.exceptions.DBusException(
                 "org.freedesktop.DBus.Error.AccessDenied: "
-                "Property '%s' does not exist" % prop)
+                "Property '%s' does not exist" % property_name)
 
     @dbus.service.signal(dbus.PROPERTIES_IFACE, signature='sa{sv}as')
     def PropertiesChanged(self, interface_name, changed_properties,
                           invalidated_properties):
-        pass
+        log.debug1("config.PropertiesChanged('%s', '%s', '%s')", interface_name,
+                   changed_properties, invalidated_properties)
 
     # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
 
@@ -404,7 +408,7 @@ class FirewallDConfig(slip.dbus.service.Object):
                          in_signature=LockdownWhitelist.DBUS_SIGNATURE)
     @dbus_handle_exceptions
     def setLockdownWhitelist(self, settings, sender=None):
-        log.debug1("config.policies.setLockdownWhitelistSettings(...)")
+        log.debug1("config.policies.setLockdownWhitelist(...)")
         settings = dbus_to_python(settings)
         self.config.get_policies().lockdown_whitelist.import_config(settings)
         self.config.get_policies().lockdown_whitelist.write()
diff --git a/src/firewall/server/firewalld.py b/src/firewall/server/firewalld.py
index e99564e..b4edfbd 100644
--- a/src/firewall/server/firewalld.py
+++ b/src/firewall/server/firewalld.py
@@ -246,6 +246,7 @@ class FirewallD(slip.dbus.service.Object):
         log.debug1("completeReload()")
 
         self.fw.reload(True)
+        self.config.reload()
         self.Reloaded()
 
     @dbus.service.signal(DBUS_INTERFACE)
diff --git a/src/firewall/server/server.py b/src/firewall/server/server.py
index 76404c5..f4263ae 100644
--- a/src/firewall/server/server.py
+++ b/src/firewall/server/server.py
@@ -59,10 +59,29 @@ def sigterm(mainloop):
 #
 ############################################################################
 
-def run_server():
+def run_server(debug_gc=False):
     """ Main function for firewall server. Handles D-BUS and GLib mainloop.
     """
     service = None
+    if debug_gc:
+        from pprint import pformat
+        import gc
+        gc.enable()
+        gc.set_debug(gc.DEBUG_LEAK)
+
+        gc_timeout = 10
+        def gc_collect():
+            gc.collect()
+            if len(gc.garbage) > 0:
+                print("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
+                      ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n")
+                print("GARBAGE OBJECTS (%d):\n" % len(gc.garbage))
+                for x in gc.garbage:
+                    print(type(x),"\n  ",)
+                    print(pformat(x))
+                print("\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
+                      "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n")
+            id = GLib.timeout_add_seconds(gc_timeout, gc_collect)
 
     try:
         dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
@@ -72,6 +91,8 @@ def run_server():
 
         mainloop = GLib.MainLoop()
         slip.dbus.service.set_mainloop(mainloop)
+        if debug_gc:
+            id = GLib.timeout_add_seconds(gc_timeout, gc_collect)
 
         # use unix_signal_add if available, else unix_signal_add_full
         if hasattr(GLib, 'unix_signal_add'):
diff --git a/src/firewalld b/src/firewalld
index d755f82..8a09b19 100755
--- a/src/firewalld
+++ b/src/firewalld
@@ -44,6 +44,11 @@ parser.add_argument('--debug',
                             Additional argument in range 1..%s can be used
                             to specify log level.""" % log.DEBUG_MAX,
                     metavar="level")
+parser.add_argument('--debug-gc',
+                    help="""Turn on garbage collector leak information.
+                    The collector runs every 10 seconds and if there are 
+                    leaks, it prints information about the leaks.""",
+                    action="store_true")
 parser.add_argument('--nofork',
                     help="""Turn off daemon forking,
                             run as a foreground process.""",
@@ -67,7 +72,7 @@ log.addInfoLogging("*", log_file, [ log.FATAL, log.ERROR ])
 log.setInfoLogging("*", log_file, [ log.WARNING ])
 log.setDebugLogLevel(log.NO_INFO)
 log.setDebugLogLevel(log.NO_DEBUG)
-log.setDebugLogging("*", log_file, [ i for i in xrange(1, log.DEBUG_MAX+1) ])
+log.setDebugLogging("*", log_file, [ i for i in range(1, log.DEBUG_MAX+1) ])
 
 if args.debug:
     log.setInfoLogLevel(log.INFO_MAX)
@@ -94,7 +99,7 @@ try:
         # decouple from parent environment
         os.chdir("/")
         os.setsid()
-        os.umask(os.umask(0077) | 0022)
+        os.umask(os.umask(0o077) | 0o022)
 
         import resource          # Resource usage information.
         maxfd = resource.getrlimit(resource.RLIMIT_NOFILE)[1]
@@ -102,7 +107,7 @@ try:
             maxfd = 1024
 
         # Iterate through and close all file descriptors.
-        for fd in xrange(0, maxfd):
+        for fd in range(0, maxfd):
             try:
                 os.close(fd)
             except OSError:      # ERROR, fd wasn't open to begin with (ignored)
@@ -125,7 +130,7 @@ try:
 
     # import here
     from firewall.server import server
-    server.run_server()
+    server.run_server(args.debug_gc)
 
     if not args.nopid:
         os.remove(pid_file)
diff --git a/src/gtk3_chooserbutton.py b/src/gtk3_chooserbutton.py
index d6fe615..a1a80cc 100755
--- a/src/gtk3_chooserbutton.py
+++ b/src/gtk3_chooserbutton.py
@@ -185,7 +185,7 @@ if __name__ == "__main__":
     window.add(hbox)
 
     menu = Gtk.Menu()
-    for i in xrange(10):
+    for i in range(10):
         item = Gtk.CheckMenuItem("level %d" % i)
 #        item = Gtk.MenuItem("level %d" % i)
         menu.add(item)
-- 
1.8.4.1

