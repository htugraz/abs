commit 50844ff5338feeaa1e59af72eb3d0a624f3e4791
Author: Felix Yan <felixonmars@archlinux.org>
Date:   Wed Nov 25 00:27:27 2015 +0800

    Add support to check login.defs for isHuman
    
    Change-Id: Ic18e289d02b208a4c28f64a7362a082f5280556e

diff --git a/accounts/users/list.go b/accounts/users/list.go
index 4b6d563..e5038e4 100644
--- a/accounts/users/list.go
+++ b/accounts/users/list.go
@@ -25,16 +25,19 @@ import (
 	"fmt"
 	"io/ioutil"
 	"strings"
+	"strconv"
 )
 
 const (
-	userFilePasswd = "/etc/passwd"
-	userFileShadow = "/etc/shadow"
-	userFileGroup  = "/etc/group"
-
-	itemLenPasswd = 7
-	itemLenShadow = 9
-	itemLenGroup  = 4
+	userFilePasswd    = "/etc/passwd"
+	userFileShadow    = "/etc/shadow"
+	userFileGroup     = "/etc/group"
+	userFileLoginDefs = "/etc/login.defs"
+
+	itemLenPasswd    = 7
+	itemLenShadow    = 9
+	itemLenGroup     = 4
+	itemLenLoginDefs = 2
 )
 
 var (
@@ -137,7 +140,7 @@ func (infos UserInfos) GetUserNames() []string {
 func (infos UserInfos) filterUserInfos() UserInfos {
 	var tmp UserInfos
 	for _, info := range infos {
-		if !info.isHumanUser(userFileShadow) {
+		if !info.isHumanUser(userFileShadow, userFileLoginDefs) {
 			continue
 		}
 
@@ -147,7 +150,7 @@ func (infos UserInfos) filterUserInfos() UserInfos {
 	return tmp
 }
 
-func (info UserInfo) isHumanUser(config string) bool {
+func (info UserInfo) isHumanUser(configShadow string, configLoginDefs string) bool {
 	if info.Name == "root" {
 		return false
 	}
@@ -156,7 +159,11 @@ func (info UserInfo) isHumanUser(config string) bool {
 		return false
 	}
 
-	if !info.isHumanViaShadow(config) {
+	if !info.isHumanViaShadow(configShadow) {
+		return false
+	}
+
+	if !info.isHumanViaLoginDefs(configLoginDefs) {
 		return false
 	}
 
@@ -214,3 +221,60 @@ func (info UserInfo) isHumanViaShadow(config string) bool {
 
 	return false
 }
+
+func (info UserInfo) isHumanViaLoginDefs(config string) bool {
+	var uidMin, uidMax string
+	content, err := ioutil.ReadFile(config)
+	if err != nil {
+		return false
+	}
+
+	lines := strings.Split(string(content), "\n")
+	for _, line := range lines {
+		if len(line) == 0 {
+			continue
+		}
+
+		if line[0] == '#' {
+			continue
+		}
+
+		items := strings.Fields(line)
+		if len(items) != itemLenLoginDefs {
+			continue
+		}
+
+		if items[0] == "UID_MIN" {
+			uidMin = items[1]
+		}
+
+		if items[0] == "UID_MAX" {
+			uidMax = items[1]
+		}
+	}
+
+	if len(uidMax) == 0 || len(uidMin) == 0 {
+		return false
+	}
+
+	uidMinInt, err := strconv.Atoi(uidMin)
+	if err != nil {
+		return false
+	}
+
+	uidMaxInt, err := strconv.Atoi(uidMax)
+	if err != nil {
+		return false
+	}
+
+	uidInt, err := strconv.Atoi(info.Uid)
+	if err != nil {
+		return false
+	}
+
+	if uidInt > uidMaxInt || uidInt < uidMinInt {
+		return false
+	}
+
+	return true
+}
\ No newline at end of file
