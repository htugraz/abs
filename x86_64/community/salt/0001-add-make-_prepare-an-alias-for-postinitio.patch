From 43950a5bc5ccb1b8f47235d889177a1df6d2bddb Mon Sep 17 00:00:00 2001
From: Daniel Wallace <danielwallace@gtmanfred.com>
Date: Fri, 17 Jul 2015 18:12:28 -0500
Subject: [PATCH] add make _prepare an alias for postinitio

ioflo 1.2.1 deprecated postinitio, so if you have the newest version of
ioflo raet won't work.  This just provides an alias for the new versions
of ioflo to keep everything working.

closes #25432
---
 salt/daemons/flo/core.py | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/salt/daemons/flo/core.py b/salt/daemons/flo/core.py
index 61c6c3b..8341cb5 100644
--- a/salt/daemons/flo/core.py
+++ b/salt/daemons/flo/core.py
@@ -134,6 +134,8 @@ class SaltRaetRoadStackSetup(ioflo.base.deeding.Deed):
         RoadStack.Bk = raeting.BodyKind.msgpack.value
         RoadStack.JoinentTimeout = 0.0
 
+    _prepare = postinitio
+
     def action(self):
         '''
         enter action
@@ -237,6 +239,8 @@ class SaltRaetRoadStackJoiner(ioflo.base.deeding.Deed):
         self.masters = daemons.extract_masters(self.opts.value)
         # self.mha = (self.opts.value['master'], int(self.opts.value['master_port']))
 
+    _prepare = postinitio
+
     def action(self, **kwa):
         '''
         Join with all masters
@@ -499,6 +503,8 @@ class SaltLoadModules(ioflo.base.deeding.Deed):
     def postinitio(self):
         self._load_modules()
 
+    _prepare = postinitio
+
     def action(self):
         self._load_modules()
 
@@ -626,6 +632,8 @@ class SaltSchedule(ioflo.base.deeding.Deed):
                 self.modules.value,
                 self.returners.value)
 
+    _prepare = postinitio
+
     def action(self):
         '''
         Eval the schedule
@@ -665,6 +673,8 @@ class SaltRaetManorLaneSetup(ioflo.base.deeding.Deed):
         '''
         pass
 
+    _prepare = postinitio
+
     def action(self):
         '''
         Run once at enter
@@ -1259,6 +1269,8 @@ class SaltRaetMasterEvents(ioflo.base.deeding.Deed):
     def postinitio(self):
         self.master_events.value = deque()
 
+    _prepare = postinitio
+
     def action(self):
         if not self.master_events.value:
             return
@@ -1308,6 +1320,8 @@ class SaltRaetThreadShellJobber(ioflo.base.deeding.Deed):
     def postinitio(self):
         self.threads.value = deque()
 
+    _prepare = postinitio
+
     def action(self):
         '''
         Evaluate the fun options and execute them via salt-call
@@ -1383,6 +1397,8 @@ class SaltRaetNixJobber(ioflo.base.deeding.Deed):
         self.serial = salt.payload.Serial(self.opts)
         self.executors.value = {}
 
+    _prepare = postinitio
+
     def _setup_jobber_stack(self):
         '''
         Setup and return the LaneStack and Yard used by the jobber yard
-- 
2.3.2 (Apple Git-55)

