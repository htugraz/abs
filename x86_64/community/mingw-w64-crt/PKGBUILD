# $Id: PKGBUILD 112597 2014-06-04 11:48:23Z spupykin $
# Maintainer: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Maintainer: rubenvb vanboxem <dottie> ruben <attie> gmail <dottie> com

_targets="i686-w64-mingw32 x86_64-w64-mingw32"

pkgname=mingw-w64-crt
pkgver=3.1.0
pkgrel=3
pkgdesc='MinGW-w64 CRT for Windows'
arch=('any')
url='http://mingw-w64.sourceforge.net'
license=('custom')
groups=('mingw-w64-toolchain' 'mingw-w64')
makedepends=('mingw-w64-gcc-base' 'mingw-w64-binutils' 'mingw-w64-headers')
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
source=(http://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/mingw-w64-v${pkgver}.tar.bz2
	0001-Add-_gmtime32-and-_localtime32-to-lib64-msvcrt.def.patch
	0001-Add-secapi-wrapper-for-sprintf_s.patch
	0002-Remove-rand_s-and-vsprintf_s-from-msvcrt.def.in.patch
	0004-secapi-wrapper.patch
	0005-regenerate-automake.patch)
md5sums=('df0e7657f46cbd59ed9cbe2a50c66e15'
         'a6df990508d09dae874778a7863a796d'
         'b116e994bfce8e3fc54e71219d5ad409'
         '0a91be4a5ee7154c6faa35e5078f29cf'
         '093d252061d90f7a2a9f5252e74e5d06'
         '2e1c1b73e5291b6f453d205259282b04')

prepare() {
  cd ${srcdir}/mingw-w64-v${pkgver}
  patch -p1 < ${srcdir}/0001-Add-secapi-wrapper-for-sprintf_s.patch
  patch -p1 < ${srcdir}/0001-Add-_gmtime32-and-_localtime32-to-lib64-msvcrt.def.patch
  patch -p1 < ${srcdir}/0002-Remove-rand_s-and-vsprintf_s-from-msvcrt.def.in.patch
  patch -p1 < ${srcdir}/0004-secapi-wrapper.patch
#  patch -p1 < ${srcdir}/0005-regenerate-automake.patch
  cd mingw-w64-crt
  aclocal
  automake
}

build() {
  cd ${srcdir}
  for _target in ${_targets}; do
    msg "Building ${_target} CRT"
    if [ ${_target} == "i686-w64-mingw32" ]; then
        _crt_configure_args="--disable-lib64 --enable-lib32"
    elif [ ${_target} == "x86_64-w64-mingw32" ]; then
        _crt_configure_args="--disable-lib32 --enable-lib64"
    fi
    mkdir -p ${srcdir}/crt-${_target} && cd ${srcdir}/crt-${_target}
    ${srcdir}/mingw-w64-v${pkgver}/mingw-w64-crt/configure --prefix=/usr/${_target} \
        --host=${_target} --enable-wildcard \
        ${_crt_configure_args}
    make
  done
}

package() {
  for _target in ${_targets}; do
    msg "Installing ${_target} crt"
    cd ${srcdir}/crt-${_target}
    make DESTDIR=${pkgdir} install
  done
}
