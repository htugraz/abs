diff -Naur lxterminal-0.1.11.orig/src/lxterminal.c lxterminal-0.1.11/src/lxterminal.c
--- lxterminal-0.1.11.orig/src/lxterminal.c	2011-07-27 23:07:54.000000000 +0200
+++ lxterminal-0.1.11/src/lxterminal.c	2014-05-12 05:13:32.264123691 +0200
@@ -69,29 +70,29 @@
 /* Menu and accelerator event handlers. */
 static void terminal_initialize_switch_tab_accelerator(Term * term);
 static void terminal_set_disable_alt(Term *term, gboolean disable_alt);
-static void terminal_switch_tab_accelerator(Term * term);
+static gboolean terminal_switch_tab_accelerator(Term * term);
 static void terminal_new_window_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_new_window_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_new_window_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_new_tab_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_new_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_new_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_close_tab_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_close_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_close_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_copy_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_copy_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_copy_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_paste_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_paste_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_paste_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_name_tab_response_event(GtkWidget * dialog, gint response, LXTerminal * terminal);
 static void terminal_name_tab_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_name_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_name_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_previous_tab_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_previous_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_previous_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_next_tab_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_next_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_next_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_move_tab_execute(LXTerminal * terminal, gint direction);
 static void terminal_move_tab_left_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_move_tab_left_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_move_tab_left_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_move_tab_right_activate_event(GtkAction * action, LXTerminal * terminal);
-static void terminal_move_tab_right_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
+static gboolean terminal_move_tab_right_accelerator(LXTerminal * terminal, guint action, GtkWidget * item);
 static void terminal_about_activate_event(GtkAction * action, LXTerminal * terminal);
 
 /* Window creation, destruction, and control. */
@@ -327,11 +328,14 @@
 
 /* Handler for accelerator <ALT> n, where n is a digit.
  * Switch to the tab selected by the digit, if it exists. */
-static void terminal_switch_tab_accelerator(Term * term)
+static gboolean terminal_switch_tab_accelerator(Term * term)
 {
     LXTerminal * terminal = term->parent;
-    if (term->index < gtk_notebook_get_n_pages(GTK_NOTEBOOK(terminal->notebook)))
+    if (term->index < gtk_notebook_get_n_pages(GTK_NOTEBOOK(terminal->notebook))) {
         gtk_notebook_set_current_page(GTK_NOTEBOOK(terminal->notebook), term->index);
+    	return TRUE;
+    }
+    return FALSE;
 }
 
 /* Handler for "activate" signal on File/New Window menu item.
@@ -344,9 +348,10 @@
 }
 
 /* Handler for accelerator <SHIFT><CTRL> N.  Open a new window. */
-static void terminal_new_window_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_new_window_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_new_window_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on File/New Tab menu item.
@@ -405,9 +410,10 @@
 }
 
 /* Handler for accelerator <SHIFT><CTRL> T.  Open a new tab. */
-static void terminal_new_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_new_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_new_tab_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on File/Close Tab menu item.
@@ -419,9 +425,10 @@
 }
 
 /* Handler for accelerator <SHIFT><CTRL> W.  Close the current tab. */
-static void terminal_close_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_close_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_close_tab_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Edit/Copy menu item.
@@ -433,9 +440,10 @@
 }
 
 /* Handler for accelerator <CTRL><SHIFT> C.  Copy to the clipboard. */
-static void terminal_copy_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_copy_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_copy_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Edit/Paste menu item.
@@ -447,9 +455,10 @@
 }
 
 /* Handler for accelerator <CTRL><SHIFT> V.  Paste from the clipboard. */
-static void terminal_paste_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_paste_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_paste_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "response" signal on Name Tab dialog. */
@@ -521,9 +530,10 @@
 }
 
 /* Handler for accelerator <CTRL><SHIFT> R.  Name the tab. */
-static void terminal_name_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_name_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_name_tab_activate_event(NULL, terminal);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Tabs/Previous Tab menu item.
@@ -538,10 +548,11 @@
 }
 
 /* Handler for accelerator <CTRL><PAGE UP>.  Cycle through tabs in the reverse direction. */
-static void terminal_previous_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_previous_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     GtkAction *_action = gtk_action_group_get_action(terminal->action_group, "Tabs_PreviousTab");
     gtk_action_activate(_action);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Tabs/Next Tab menu item.
@@ -556,10 +567,11 @@
 }
 
 /* Handler for accelerator <CTRL><PAGE DOWN>.  Cycle through tabs in the forward direction. */
-static void terminal_next_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_next_tab_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     GtkAction *_action = gtk_action_group_get_action(terminal->action_group, "Tabs_NextTab");
     gtk_action_activate(_action);
+    return TRUE;
 }
 
 /* Helper for move tab left and right. */
@@ -594,9 +606,10 @@
 }
 
 /* Handler for accelerator <SHIFT><CTRL><PAGE UP>.  Move the tab one position in the reverse direction. */
-static void terminal_move_tab_left_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_move_tab_left_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_move_tab_execute(terminal, -1);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Tabs/Move Tab Right menu item.
@@ -607,9 +620,10 @@
 }
 
 /* Handler for accelerator <SHIFT><CTRL><PAGE DOWN>.  Move the tab one position in the forward direction. */
-static void terminal_move_tab_right_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
+static gboolean terminal_move_tab_right_accelerator(LXTerminal * terminal, guint action, GtkWidget * item)
 {
     terminal_move_tab_execute(terminal, 1);
+    return TRUE;
 }
 
 /* Handler for "activate" signal on Help/About menu item. */ 
