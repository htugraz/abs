From f1c240dd64cb0f7ad9f93b6f8013444b5706e890 Mon Sep 17 00:00:00 2001
From: Martin Johansson <martin@fatbob.nu>
Date: Thu, 31 Jul 2014 23:31:04 +0200
Subject: [PATCH] Update to use Protobuf-C 1.0.0. This change required
 regenerated Mumble.pb-c.[h|c] and it is not backwards compatible with
 Protobuf-C 0.15 or earlier.

---
 configure.ac      |    4 +-
 src/Mumble.pb-c.c | 1225 +++++++++++++++++++++++++++--------------------------
 src/Mumble.pb-c.h |   19 +-
 3 files changed, 630 insertions(+), 618 deletions(-)

diff --git a/configure.ac b/configure.ac
index 3fb9757..d60781f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -46,7 +46,7 @@ AC_PROG_CC
 
 # Checks dependencies.
 AC_CHECK_HEADERS([google/protobuf-c/protobuf-c.h], [], [AC_MSG_ERROR([could not find google/protobuf-c/protobuf-c.h])])
-AC_CHECK_LIB([protobuf-c], [protobuf_c_data_buffer_init], [], [AC_MSG_ERROR([could not find protobuf-c library])])
+AC_CHECK_LIB([protobuf-c], [protobuf_c_message_init], [], [AC_MSG_ERROR([could not find protobuf-c library])])
 AC_CHECK_HEADERS([libconfig.h], [], [AC_MSG_ERROR([could not find libconfig.h])])
 AC_CHECK_LIB([config], [config_init], [], [AC_MSG_ERROR([could not find libconfig])])
 case $host_os in
@@ -108,7 +108,7 @@ AC_TYPE_UINT64_T
 AC_TYPE_UINT8_T
 
 # Checks for library functions.
-AC_CHECK_FUNCS([ftruncate gettimeofday inet_ntoa memchr memmove memset socket strdup strerror strrchr uname poll], [], [AC_MSG_ERROR([missing a required func])])
+AC_CHECK_FUNCS([ftruncate gettimeofday inet_ntoa memchr memmove memset socket strdup strrchr uname poll], [], [AC_MSG_ERROR([missing a required func])])
 
 AC_CONFIG_FILES([Makefile src/Makefile])
 AC_OUTPUT
diff --git a/src/Mumble.pb-c.c b/src/Mumble.pb-c.c
index 21d54d6..76b157b 100644
--- a/src/Mumble.pb-c.c
+++ b/src/Mumble.pb-c.c
@@ -1,8 +1,9 @@
 /* Generated by the protocol buffer compiler.  DO NOT EDIT! */
+/* Generated from: Mumble.proto */
 
 /* Do not generate deprecated warnings for self */
-#ifndef PROTOBUF_C_NO_DEPRECATED
-#define PROTOBUF_C_NO_DEPRECATED
+#ifndef PROTOBUF_C__NO_DEPRECATED
+#define PROTOBUF_C__NO_DEPRECATED
 #endif
 
 #include "Mumble.pb-c.h"
@@ -15,21 +16,21 @@ void   mumble_proto__version__init
 size_t mumble_proto__version__get_packed_size
                      (const MumbleProto__Version *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__version__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__version__pack
                      (const MumbleProto__Version *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__version__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__version__pack_to_buffer
                      (const MumbleProto__Version *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__version__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__Version *
@@ -46,7 +47,7 @@ void   mumble_proto__version__free_unpacked
                      (MumbleProto__Version *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__version__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__udptunnel__init
@@ -58,21 +59,21 @@ void   mumble_proto__udptunnel__init
 size_t mumble_proto__udptunnel__get_packed_size
                      (const MumbleProto__UDPTunnel *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__udptunnel__descriptor);
+  assert(message->base.descriptor == &mumble_proto__udptunnel__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__udptunnel__pack
                      (const MumbleProto__UDPTunnel *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__udptunnel__descriptor);
+  assert(message->base.descriptor == &mumble_proto__udptunnel__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__udptunnel__pack_to_buffer
                      (const MumbleProto__UDPTunnel *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__udptunnel__descriptor);
+  assert(message->base.descriptor == &mumble_proto__udptunnel__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__UDPTunnel *
@@ -89,7 +90,7 @@ void   mumble_proto__udptunnel__free_unpacked
                      (MumbleProto__UDPTunnel *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__udptunnel__descriptor);
+  assert(message->base.descriptor == &mumble_proto__udptunnel__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__authenticate__init
@@ -101,21 +102,21 @@ void   mumble_proto__authenticate__init
 size_t mumble_proto__authenticate__get_packed_size
                      (const MumbleProto__Authenticate *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__authenticate__descriptor);
+  assert(message->base.descriptor == &mumble_proto__authenticate__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__authenticate__pack
                      (const MumbleProto__Authenticate *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__authenticate__descriptor);
+  assert(message->base.descriptor == &mumble_proto__authenticate__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__authenticate__pack_to_buffer
                      (const MumbleProto__Authenticate *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__authenticate__descriptor);
+  assert(message->base.descriptor == &mumble_proto__authenticate__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__Authenticate *
@@ -132,7 +133,7 @@ void   mumble_proto__authenticate__free_unpacked
                      (MumbleProto__Authenticate *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__authenticate__descriptor);
+  assert(message->base.descriptor == &mumble_proto__authenticate__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__ping__init
@@ -144,21 +145,21 @@ void   mumble_proto__ping__init
 size_t mumble_proto__ping__get_packed_size
                      (const MumbleProto__Ping *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ping__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ping__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__ping__pack
                      (const MumbleProto__Ping *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ping__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ping__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__ping__pack_to_buffer
                      (const MumbleProto__Ping *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ping__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ping__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__Ping *
@@ -175,7 +176,7 @@ void   mumble_proto__ping__free_unpacked
                      (MumbleProto__Ping *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ping__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ping__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__reject__init
@@ -187,21 +188,21 @@ void   mumble_proto__reject__init
 size_t mumble_proto__reject__get_packed_size
                      (const MumbleProto__Reject *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__reject__descriptor);
+  assert(message->base.descriptor == &mumble_proto__reject__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__reject__pack
                      (const MumbleProto__Reject *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__reject__descriptor);
+  assert(message->base.descriptor == &mumble_proto__reject__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__reject__pack_to_buffer
                      (const MumbleProto__Reject *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__reject__descriptor);
+  assert(message->base.descriptor == &mumble_proto__reject__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__Reject *
@@ -218,7 +219,7 @@ void   mumble_proto__reject__free_unpacked
                      (MumbleProto__Reject *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__reject__descriptor);
+  assert(message->base.descriptor == &mumble_proto__reject__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__server_config__init
@@ -230,21 +231,21 @@ void   mumble_proto__server_config__init
 size_t mumble_proto__server_config__get_packed_size
                      (const MumbleProto__ServerConfig *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_config__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__server_config__pack
                      (const MumbleProto__ServerConfig *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_config__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__server_config__pack_to_buffer
                      (const MumbleProto__ServerConfig *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_config__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ServerConfig *
@@ -261,7 +262,7 @@ void   mumble_proto__server_config__free_unpacked
                      (MumbleProto__ServerConfig *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_config__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__server_sync__init
@@ -273,21 +274,21 @@ void   mumble_proto__server_sync__init
 size_t mumble_proto__server_sync__get_packed_size
                      (const MumbleProto__ServerSync *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_sync__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_sync__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__server_sync__pack
                      (const MumbleProto__ServerSync *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_sync__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_sync__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__server_sync__pack_to_buffer
                      (const MumbleProto__ServerSync *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_sync__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_sync__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ServerSync *
@@ -304,7 +305,7 @@ void   mumble_proto__server_sync__free_unpacked
                      (MumbleProto__ServerSync *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__server_sync__descriptor);
+  assert(message->base.descriptor == &mumble_proto__server_sync__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__channel_remove__init
@@ -316,21 +317,21 @@ void   mumble_proto__channel_remove__init
 size_t mumble_proto__channel_remove__get_packed_size
                      (const MumbleProto__ChannelRemove *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_remove__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__channel_remove__pack
                      (const MumbleProto__ChannelRemove *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_remove__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__channel_remove__pack_to_buffer
                      (const MumbleProto__ChannelRemove *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_remove__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ChannelRemove *
@@ -347,7 +348,7 @@ void   mumble_proto__channel_remove__free_unpacked
                      (MumbleProto__ChannelRemove *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_remove__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__channel_state__init
@@ -359,21 +360,21 @@ void   mumble_proto__channel_state__init
 size_t mumble_proto__channel_state__get_packed_size
                      (const MumbleProto__ChannelState *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_state__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__channel_state__pack
                      (const MumbleProto__ChannelState *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_state__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__channel_state__pack_to_buffer
                      (const MumbleProto__ChannelState *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_state__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ChannelState *
@@ -390,7 +391,7 @@ void   mumble_proto__channel_state__free_unpacked
                      (MumbleProto__ChannelState *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__channel_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__channel_state__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__user_remove__init
@@ -402,21 +403,21 @@ void   mumble_proto__user_remove__init
 size_t mumble_proto__user_remove__get_packed_size
                      (const MumbleProto__UserRemove *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_remove__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__user_remove__pack
                      (const MumbleProto__UserRemove *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_remove__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__user_remove__pack_to_buffer
                      (const MumbleProto__UserRemove *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_remove__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__UserRemove *
@@ -433,7 +434,7 @@ void   mumble_proto__user_remove__free_unpacked
                      (MumbleProto__UserRemove *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_remove__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_remove__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__user_state__init
@@ -445,21 +446,21 @@ void   mumble_proto__user_state__init
 size_t mumble_proto__user_state__get_packed_size
                      (const MumbleProto__UserState *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_state__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__user_state__pack
                      (const MumbleProto__UserState *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_state__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__user_state__pack_to_buffer
                      (const MumbleProto__UserState *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_state__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__UserState *
@@ -476,7 +477,7 @@ void   mumble_proto__user_state__free_unpacked
                      (MumbleProto__UserState *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_state__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_state__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__ban_list__ban_entry__init
@@ -494,21 +495,21 @@ void   mumble_proto__ban_list__init
 size_t mumble_proto__ban_list__get_packed_size
                      (const MumbleProto__BanList *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ban_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ban_list__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__ban_list__pack
                      (const MumbleProto__BanList *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ban_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ban_list__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__ban_list__pack_to_buffer
                      (const MumbleProto__BanList *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ban_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ban_list__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__BanList *
@@ -525,7 +526,7 @@ void   mumble_proto__ban_list__free_unpacked
                      (MumbleProto__BanList *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__ban_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__ban_list__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__text_message__init
@@ -537,21 +538,21 @@ void   mumble_proto__text_message__init
 size_t mumble_proto__text_message__get_packed_size
                      (const MumbleProto__TextMessage *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__text_message__descriptor);
+  assert(message->base.descriptor == &mumble_proto__text_message__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__text_message__pack
                      (const MumbleProto__TextMessage *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__text_message__descriptor);
+  assert(message->base.descriptor == &mumble_proto__text_message__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__text_message__pack_to_buffer
                      (const MumbleProto__TextMessage *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__text_message__descriptor);
+  assert(message->base.descriptor == &mumble_proto__text_message__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__TextMessage *
@@ -568,7 +569,7 @@ void   mumble_proto__text_message__free_unpacked
                      (MumbleProto__TextMessage *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__text_message__descriptor);
+  assert(message->base.descriptor == &mumble_proto__text_message__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__permission_denied__init
@@ -580,21 +581,21 @@ void   mumble_proto__permission_denied__init
 size_t mumble_proto__permission_denied__get_packed_size
                      (const MumbleProto__PermissionDenied *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_denied__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_denied__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__permission_denied__pack
                      (const MumbleProto__PermissionDenied *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_denied__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_denied__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__permission_denied__pack_to_buffer
                      (const MumbleProto__PermissionDenied *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_denied__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_denied__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__PermissionDenied *
@@ -611,7 +612,7 @@ void   mumble_proto__permission_denied__free_unpacked
                      (MumbleProto__PermissionDenied *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_denied__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_denied__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__acl__chan_group__init
@@ -635,21 +636,21 @@ void   mumble_proto__acl__init
 size_t mumble_proto__acl__get_packed_size
                      (const MumbleProto__ACL *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__acl__descriptor);
+  assert(message->base.descriptor == &mumble_proto__acl__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__acl__pack
                      (const MumbleProto__ACL *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__acl__descriptor);
+  assert(message->base.descriptor == &mumble_proto__acl__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__acl__pack_to_buffer
                      (const MumbleProto__ACL *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__acl__descriptor);
+  assert(message->base.descriptor == &mumble_proto__acl__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ACL *
@@ -666,7 +667,7 @@ void   mumble_proto__acl__free_unpacked
                      (MumbleProto__ACL *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__acl__descriptor);
+  assert(message->base.descriptor == &mumble_proto__acl__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__query_users__init
@@ -678,21 +679,21 @@ void   mumble_proto__query_users__init
 size_t mumble_proto__query_users__get_packed_size
                      (const MumbleProto__QueryUsers *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__query_users__descriptor);
+  assert(message->base.descriptor == &mumble_proto__query_users__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__query_users__pack
                      (const MumbleProto__QueryUsers *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__query_users__descriptor);
+  assert(message->base.descriptor == &mumble_proto__query_users__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__query_users__pack_to_buffer
                      (const MumbleProto__QueryUsers *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__query_users__descriptor);
+  assert(message->base.descriptor == &mumble_proto__query_users__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__QueryUsers *
@@ -709,7 +710,7 @@ void   mumble_proto__query_users__free_unpacked
                      (MumbleProto__QueryUsers *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__query_users__descriptor);
+  assert(message->base.descriptor == &mumble_proto__query_users__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__crypt_setup__init
@@ -721,21 +722,21 @@ void   mumble_proto__crypt_setup__init
 size_t mumble_proto__crypt_setup__get_packed_size
                      (const MumbleProto__CryptSetup *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
+  assert(message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__crypt_setup__pack
                      (const MumbleProto__CryptSetup *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
+  assert(message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__crypt_setup__pack_to_buffer
                      (const MumbleProto__CryptSetup *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
+  assert(message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__CryptSetup *
@@ -752,7 +753,7 @@ void   mumble_proto__crypt_setup__free_unpacked
                      (MumbleProto__CryptSetup *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
+  assert(message->base.descriptor == &mumble_proto__crypt_setup__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__context_action_modify__init
@@ -764,21 +765,21 @@ void   mumble_proto__context_action_modify__init
 size_t mumble_proto__context_action_modify__get_packed_size
                      (const MumbleProto__ContextActionModify *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__context_action_modify__pack
                      (const MumbleProto__ContextActionModify *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__context_action_modify__pack_to_buffer
                      (const MumbleProto__ContextActionModify *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ContextActionModify *
@@ -795,7 +796,7 @@ void   mumble_proto__context_action_modify__free_unpacked
                      (MumbleProto__ContextActionModify *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action_modify__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__context_action__init
@@ -807,21 +808,21 @@ void   mumble_proto__context_action__init
 size_t mumble_proto__context_action__get_packed_size
                      (const MumbleProto__ContextAction *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__context_action__pack
                      (const MumbleProto__ContextAction *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__context_action__pack_to_buffer
                      (const MumbleProto__ContextAction *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__ContextAction *
@@ -838,7 +839,7 @@ void   mumble_proto__context_action__free_unpacked
                      (MumbleProto__ContextAction *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__context_action__descriptor);
+  assert(message->base.descriptor == &mumble_proto__context_action__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__user_list__user__init
@@ -856,21 +857,21 @@ void   mumble_proto__user_list__init
 size_t mumble_proto__user_list__get_packed_size
                      (const MumbleProto__UserList *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_list__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__user_list__pack
                      (const MumbleProto__UserList *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_list__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__user_list__pack_to_buffer
                      (const MumbleProto__UserList *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_list__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__UserList *
@@ -887,7 +888,7 @@ void   mumble_proto__user_list__free_unpacked
                      (MumbleProto__UserList *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_list__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_list__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__voice_target__target__init
@@ -905,21 +906,21 @@ void   mumble_proto__voice_target__init
 size_t mumble_proto__voice_target__get_packed_size
                      (const MumbleProto__VoiceTarget *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__voice_target__descriptor);
+  assert(message->base.descriptor == &mumble_proto__voice_target__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__voice_target__pack
                      (const MumbleProto__VoiceTarget *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__voice_target__descriptor);
+  assert(message->base.descriptor == &mumble_proto__voice_target__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__voice_target__pack_to_buffer
                      (const MumbleProto__VoiceTarget *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__voice_target__descriptor);
+  assert(message->base.descriptor == &mumble_proto__voice_target__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__VoiceTarget *
@@ -936,7 +937,7 @@ void   mumble_proto__voice_target__free_unpacked
                      (MumbleProto__VoiceTarget *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__voice_target__descriptor);
+  assert(message->base.descriptor == &mumble_proto__voice_target__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__permission_query__init
@@ -948,21 +949,21 @@ void   mumble_proto__permission_query__init
 size_t mumble_proto__permission_query__get_packed_size
                      (const MumbleProto__PermissionQuery *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_query__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_query__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__permission_query__pack
                      (const MumbleProto__PermissionQuery *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_query__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_query__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__permission_query__pack_to_buffer
                      (const MumbleProto__PermissionQuery *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_query__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_query__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__PermissionQuery *
@@ -979,7 +980,7 @@ void   mumble_proto__permission_query__free_unpacked
                      (MumbleProto__PermissionQuery *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__permission_query__descriptor);
+  assert(message->base.descriptor == &mumble_proto__permission_query__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__codec_version__init
@@ -991,21 +992,21 @@ void   mumble_proto__codec_version__init
 size_t mumble_proto__codec_version__get_packed_size
                      (const MumbleProto__CodecVersion *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__codec_version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__codec_version__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__codec_version__pack
                      (const MumbleProto__CodecVersion *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__codec_version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__codec_version__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__codec_version__pack_to_buffer
                      (const MumbleProto__CodecVersion *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__codec_version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__codec_version__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__CodecVersion *
@@ -1022,7 +1023,7 @@ void   mumble_proto__codec_version__free_unpacked
                      (MumbleProto__CodecVersion *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__codec_version__descriptor);
+  assert(message->base.descriptor == &mumble_proto__codec_version__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__user_stats__stats__init
@@ -1040,21 +1041,21 @@ void   mumble_proto__user_stats__init
 size_t mumble_proto__user_stats__get_packed_size
                      (const MumbleProto__UserStats *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_stats__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_stats__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__user_stats__pack
                      (const MumbleProto__UserStats *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_stats__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_stats__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__user_stats__pack_to_buffer
                      (const MumbleProto__UserStats *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_stats__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_stats__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__UserStats *
@@ -1071,7 +1072,7 @@ void   mumble_proto__user_stats__free_unpacked
                      (MumbleProto__UserStats *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__user_stats__descriptor);
+  assert(message->base.descriptor == &mumble_proto__user_stats__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__suggest_config__init
@@ -1083,21 +1084,21 @@ void   mumble_proto__suggest_config__init
 size_t mumble_proto__suggest_config__get_packed_size
                      (const MumbleProto__SuggestConfig *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__suggest_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__suggest_config__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__suggest_config__pack
                      (const MumbleProto__SuggestConfig *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__suggest_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__suggest_config__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__suggest_config__pack_to_buffer
                      (const MumbleProto__SuggestConfig *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__suggest_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__suggest_config__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__SuggestConfig *
@@ -1114,7 +1115,7 @@ void   mumble_proto__suggest_config__free_unpacked
                      (MumbleProto__SuggestConfig *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__suggest_config__descriptor);
+  assert(message->base.descriptor == &mumble_proto__suggest_config__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 void   mumble_proto__request_blob__init
@@ -1126,21 +1127,21 @@ void   mumble_proto__request_blob__init
 size_t mumble_proto__request_blob__get_packed_size
                      (const MumbleProto__RequestBlob *message)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__request_blob__descriptor);
+  assert(message->base.descriptor == &mumble_proto__request_blob__descriptor);
   return protobuf_c_message_get_packed_size ((const ProtobufCMessage*)(message));
 }
 size_t mumble_proto__request_blob__pack
                      (const MumbleProto__RequestBlob *message,
                       uint8_t       *out)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__request_blob__descriptor);
+  assert(message->base.descriptor == &mumble_proto__request_blob__descriptor);
   return protobuf_c_message_pack ((const ProtobufCMessage*)message, out);
 }
 size_t mumble_proto__request_blob__pack_to_buffer
                      (const MumbleProto__RequestBlob *message,
                       ProtobufCBuffer *buffer)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__request_blob__descriptor);
+  assert(message->base.descriptor == &mumble_proto__request_blob__descriptor);
   return protobuf_c_message_pack_to_buffer ((const ProtobufCMessage*)message, buffer);
 }
 MumbleProto__RequestBlob *
@@ -1157,7 +1158,7 @@ void   mumble_proto__request_blob__free_unpacked
                      (MumbleProto__RequestBlob *message,
                       ProtobufCAllocator *allocator)
 {
-  PROTOBUF_C_ASSERT (message->base.descriptor == &mumble_proto__request_blob__descriptor);
+  assert(message->base.descriptor == &mumble_proto__request_blob__descriptor);
   protobuf_c_message_free_unpacked ((ProtobufCMessage*)message, allocator);
 }
 static const ProtobufCFieldDescriptor mumble_proto__version__field_descriptors[4] =
@@ -1167,11 +1168,11 @@ static const ProtobufCFieldDescriptor mumble_proto__version__field_descriptors[4
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Version, has_version),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Version, version),
+    offsetof(MumbleProto__Version, has_version),
+    offsetof(MumbleProto__Version, version),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1180,10 +1181,10 @@ static const ProtobufCFieldDescriptor mumble_proto__version__field_descriptors[4
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Version, release),
+    offsetof(MumbleProto__Version, release),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1192,10 +1193,10 @@ static const ProtobufCFieldDescriptor mumble_proto__version__field_descriptors[4
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Version, os),
+    offsetof(MumbleProto__Version, os),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1204,10 +1205,10 @@ static const ProtobufCFieldDescriptor mumble_proto__version__field_descriptors[4
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Version, os_version),
+    offsetof(MumbleProto__Version, os_version),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1224,7 +1225,7 @@ static const ProtobufCIntRange mumble_proto__version__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__version__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.Version",
   "Version",
   "MumbleProto__Version",
@@ -1245,10 +1246,10 @@ static const ProtobufCFieldDescriptor mumble_proto__udptunnel__field_descriptors
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_BYTES,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UDPTunnel, packet),
+    offsetof(MumbleProto__UDPTunnel, packet),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1262,7 +1263,7 @@ static const ProtobufCIntRange mumble_proto__udptunnel__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__udptunnel__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UDPTunnel",
   "UDPTunnel",
   "MumbleProto__UDPTunnel",
@@ -1284,10 +1285,10 @@ static const ProtobufCFieldDescriptor mumble_proto__authenticate__field_descript
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, username),
+    offsetof(MumbleProto__Authenticate, username),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1296,10 +1297,10 @@ static const ProtobufCFieldDescriptor mumble_proto__authenticate__field_descript
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, password),
+    offsetof(MumbleProto__Authenticate, password),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1307,11 +1308,11 @@ static const ProtobufCFieldDescriptor mumble_proto__authenticate__field_descript
     3,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_STRING,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, n_tokens),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, tokens),
+    offsetof(MumbleProto__Authenticate, n_tokens),
+    offsetof(MumbleProto__Authenticate, tokens),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1319,11 +1320,11 @@ static const ProtobufCFieldDescriptor mumble_proto__authenticate__field_descript
     4,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_INT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, n_celt_versions),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, celt_versions),
+    offsetof(MumbleProto__Authenticate, n_celt_versions),
+    offsetof(MumbleProto__Authenticate, celt_versions),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1331,11 +1332,11 @@ static const ProtobufCFieldDescriptor mumble_proto__authenticate__field_descript
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, has_opus),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Authenticate, opus),
+    offsetof(MumbleProto__Authenticate, has_opus),
+    offsetof(MumbleProto__Authenticate, opus),
     NULL,
     &mumble_proto__authenticate__opus__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1353,7 +1354,7 @@ static const ProtobufCIntRange mumble_proto__authenticate__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__authenticate__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.Authenticate",
   "Authenticate",
   "MumbleProto__Authenticate",
@@ -1373,11 +1374,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT64,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_timestamp),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, timestamp),
+    offsetof(MumbleProto__Ping, has_timestamp),
+    offsetof(MumbleProto__Ping, timestamp),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1385,11 +1386,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_good),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, good),
+    offsetof(MumbleProto__Ping, has_good),
+    offsetof(MumbleProto__Ping, good),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1397,11 +1398,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_late),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, late),
+    offsetof(MumbleProto__Ping, has_late),
+    offsetof(MumbleProto__Ping, late),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1409,11 +1410,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_lost),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, lost),
+    offsetof(MumbleProto__Ping, has_lost),
+    offsetof(MumbleProto__Ping, lost),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1421,11 +1422,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_resync),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, resync),
+    offsetof(MumbleProto__Ping, has_resync),
+    offsetof(MumbleProto__Ping, resync),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1433,11 +1434,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     6,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_udp_packets),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, udp_packets),
+    offsetof(MumbleProto__Ping, has_udp_packets),
+    offsetof(MumbleProto__Ping, udp_packets),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1445,11 +1446,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     7,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_tcp_packets),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, tcp_packets),
+    offsetof(MumbleProto__Ping, has_tcp_packets),
+    offsetof(MumbleProto__Ping, tcp_packets),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1457,11 +1458,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     8,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_udp_ping_avg),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, udp_ping_avg),
+    offsetof(MumbleProto__Ping, has_udp_ping_avg),
+    offsetof(MumbleProto__Ping, udp_ping_avg),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1469,11 +1470,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     9,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_udp_ping_var),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, udp_ping_var),
+    offsetof(MumbleProto__Ping, has_udp_ping_var),
+    offsetof(MumbleProto__Ping, udp_ping_var),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1481,11 +1482,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     10,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_tcp_ping_avg),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, tcp_ping_avg),
+    offsetof(MumbleProto__Ping, has_tcp_ping_avg),
+    offsetof(MumbleProto__Ping, tcp_ping_avg),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1493,11 +1494,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ping__field_descriptors[11]
     11,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, has_tcp_ping_var),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Ping, tcp_ping_var),
+    offsetof(MumbleProto__Ping, has_tcp_ping_var),
+    offsetof(MumbleProto__Ping, tcp_ping_var),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1521,7 +1522,7 @@ static const ProtobufCIntRange mumble_proto__ping__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__ping__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.Ping",
   "Ping",
   "MumbleProto__Ping",
@@ -1536,14 +1537,14 @@ const ProtobufCMessageDescriptor mumble_proto__ping__descriptor =
 };
 const ProtobufCEnumValue mumble_proto__reject__reject_type__enum_values_by_number[8] =
 {
-  { "None", "MUMBLE_PROTO__REJECT__REJECT_TYPE__NONE", 0 },
-  { "WrongVersion", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WRONGVERSION", 1 },
-  { "InvalidUsername", "MUMBLE_PROTO__REJECT__REJECT_TYPE__INVALIDUSERNAME", 2 },
-  { "WrongUserPW", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WRONGUSERPW", 3 },
-  { "WrongServerPW", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WRONGSERVERPW", 4 },
-  { "UsernameInUse", "MUMBLE_PROTO__REJECT__REJECT_TYPE__USERNAMEINUSE", 5 },
-  { "ServerFull", "MUMBLE_PROTO__REJECT__REJECT_TYPE__SERVERFULL", 6 },
-  { "NoCertificate", "MUMBLE_PROTO__REJECT__REJECT_TYPE__NOCERTIFICATE", 7 },
+  { "None", "MUMBLE_PROTO__REJECT__REJECT_TYPE__None", 0 },
+  { "WrongVersion", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WrongVersion", 1 },
+  { "InvalidUsername", "MUMBLE_PROTO__REJECT__REJECT_TYPE__InvalidUsername", 2 },
+  { "WrongUserPW", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WrongUserPW", 3 },
+  { "WrongServerPW", "MUMBLE_PROTO__REJECT__REJECT_TYPE__WrongServerPW", 4 },
+  { "UsernameInUse", "MUMBLE_PROTO__REJECT__REJECT_TYPE__UsernameInUse", 5 },
+  { "ServerFull", "MUMBLE_PROTO__REJECT__REJECT_TYPE__ServerFull", 6 },
+  { "NoCertificate", "MUMBLE_PROTO__REJECT__REJECT_TYPE__NoCertificate", 7 },
 };
 static const ProtobufCIntRange mumble_proto__reject__reject_type__value_ranges[] = {
 {0, 0},{0, 8}
@@ -1561,7 +1562,7 @@ const ProtobufCEnumValueIndex mumble_proto__reject__reject_type__enum_values_by_
 };
 const ProtobufCEnumDescriptor mumble_proto__reject__reject_type__descriptor =
 {
-  PROTOBUF_C_ENUM_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__ENUM_DESCRIPTOR_MAGIC,
   "MumbleProto.Reject.RejectType",
   "RejectType",
   "MumbleProto__Reject__RejectType",
@@ -1581,11 +1582,11 @@ static const ProtobufCFieldDescriptor mumble_proto__reject__field_descriptors[2]
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_ENUM,
-    PROTOBUF_C_OFFSETOF(MumbleProto__Reject, has_type),
-    PROTOBUF_C_OFFSETOF(MumbleProto__Reject, type),
+    offsetof(MumbleProto__Reject, has_type),
+    offsetof(MumbleProto__Reject, type),
     &mumble_proto__reject__reject_type__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1594,10 +1595,10 @@ static const ProtobufCFieldDescriptor mumble_proto__reject__field_descriptors[2]
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__Reject, reason),
+    offsetof(MumbleProto__Reject, reason),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1612,7 +1613,7 @@ static const ProtobufCIntRange mumble_proto__reject__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__reject__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.Reject",
   "Reject",
   "MumbleProto__Reject",
@@ -1632,11 +1633,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_config__field_descrip
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, has_max_bandwidth),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, max_bandwidth),
+    offsetof(MumbleProto__ServerConfig, has_max_bandwidth),
+    offsetof(MumbleProto__ServerConfig, max_bandwidth),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1645,10 +1646,10 @@ static const ProtobufCFieldDescriptor mumble_proto__server_config__field_descrip
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, welcome_text),
+    offsetof(MumbleProto__ServerConfig, welcome_text),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1656,11 +1657,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_config__field_descrip
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, has_allow_html),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, allow_html),
+    offsetof(MumbleProto__ServerConfig, has_allow_html),
+    offsetof(MumbleProto__ServerConfig, allow_html),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1668,11 +1669,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_config__field_descrip
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, has_message_length),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, message_length),
+    offsetof(MumbleProto__ServerConfig, has_message_length),
+    offsetof(MumbleProto__ServerConfig, message_length),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1680,11 +1681,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_config__field_descrip
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, has_image_message_length),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerConfig, image_message_length),
+    offsetof(MumbleProto__ServerConfig, has_image_message_length),
+    offsetof(MumbleProto__ServerConfig, image_message_length),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1702,7 +1703,7 @@ static const ProtobufCIntRange mumble_proto__server_config__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__server_config__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ServerConfig",
   "ServerConfig",
   "MumbleProto__ServerConfig",
@@ -1722,11 +1723,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_sync__field_descripto
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, has_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, session),
+    offsetof(MumbleProto__ServerSync, has_session),
+    offsetof(MumbleProto__ServerSync, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1734,11 +1735,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_sync__field_descripto
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, has_max_bandwidth),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, max_bandwidth),
+    offsetof(MumbleProto__ServerSync, has_max_bandwidth),
+    offsetof(MumbleProto__ServerSync, max_bandwidth),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1747,10 +1748,10 @@ static const ProtobufCFieldDescriptor mumble_proto__server_sync__field_descripto
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, welcome_text),
+    offsetof(MumbleProto__ServerSync, welcome_text),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1758,11 +1759,11 @@ static const ProtobufCFieldDescriptor mumble_proto__server_sync__field_descripto
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT64,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, has_permissions),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ServerSync, permissions),
+    offsetof(MumbleProto__ServerSync, has_permissions),
+    offsetof(MumbleProto__ServerSync, permissions),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1779,7 +1780,7 @@ static const ProtobufCIntRange mumble_proto__server_sync__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__server_sync__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ServerSync",
   "ServerSync",
   "MumbleProto__ServerSync",
@@ -1800,10 +1801,10 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_remove__field_descri
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_UINT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelRemove, channel_id),
+    offsetof(MumbleProto__ChannelRemove, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1817,7 +1818,7 @@ static const ProtobufCIntRange mumble_proto__channel_remove__number_ranges[1 + 1
 };
 const ProtobufCMessageDescriptor mumble_proto__channel_remove__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ChannelRemove",
   "ChannelRemove",
   "MumbleProto__ChannelRemove",
@@ -1839,11 +1840,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, channel_id),
+    offsetof(MumbleProto__ChannelState, has_channel_id),
+    offsetof(MumbleProto__ChannelState, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1851,11 +1852,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, has_parent),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, parent),
+    offsetof(MumbleProto__ChannelState, has_parent),
+    offsetof(MumbleProto__ChannelState, parent),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1864,10 +1865,10 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, name),
+    offsetof(MumbleProto__ChannelState, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1875,11 +1876,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     4,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, n_links),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, links),
+    offsetof(MumbleProto__ChannelState, n_links),
+    offsetof(MumbleProto__ChannelState, links),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1888,10 +1889,10 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, description),
+    offsetof(MumbleProto__ChannelState, description),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1899,11 +1900,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     6,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, n_links_add),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, links_add),
+    offsetof(MumbleProto__ChannelState, n_links_add),
+    offsetof(MumbleProto__ChannelState, links_add),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1911,11 +1912,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     7,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, n_links_remove),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, links_remove),
+    offsetof(MumbleProto__ChannelState, n_links_remove),
+    offsetof(MumbleProto__ChannelState, links_remove),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1923,11 +1924,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     8,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, has_temporary),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, temporary),
+    offsetof(MumbleProto__ChannelState, has_temporary),
+    offsetof(MumbleProto__ChannelState, temporary),
     NULL,
     &mumble_proto__channel_state__temporary__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1935,11 +1936,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     9,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_INT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, has_position),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, position),
+    offsetof(MumbleProto__ChannelState, has_position),
+    offsetof(MumbleProto__ChannelState, position),
     NULL,
     &mumble_proto__channel_state__position__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -1947,11 +1948,11 @@ static const ProtobufCFieldDescriptor mumble_proto__channel_state__field_descrip
     10,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, has_description_hash),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ChannelState, description_hash),
+    offsetof(MumbleProto__ChannelState, has_description_hash),
+    offsetof(MumbleProto__ChannelState, description_hash),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -1974,7 +1975,7 @@ static const ProtobufCIntRange mumble_proto__channel_state__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__channel_state__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ChannelState",
   "ChannelState",
   "MumbleProto__ChannelState",
@@ -1995,10 +1996,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_remove__field_descripto
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_UINT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, session),
+    offsetof(MumbleProto__UserRemove, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2006,11 +2007,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_remove__field_descripto
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, has_actor),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, actor),
+    offsetof(MumbleProto__UserRemove, has_actor),
+    offsetof(MumbleProto__UserRemove, actor),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2019,10 +2020,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_remove__field_descripto
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, reason),
+    offsetof(MumbleProto__UserRemove, reason),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2030,11 +2031,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_remove__field_descripto
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, has_ban),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserRemove, ban),
+    offsetof(MumbleProto__UserRemove, has_ban),
+    offsetof(MumbleProto__UserRemove, ban),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2051,7 +2052,7 @@ static const ProtobufCIntRange mumble_proto__user_remove__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__user_remove__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserRemove",
   "UserRemove",
   "MumbleProto__UserRemove",
@@ -2071,11 +2072,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, session),
+    offsetof(MumbleProto__UserState, has_session),
+    offsetof(MumbleProto__UserState, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2083,11 +2084,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_actor),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, actor),
+    offsetof(MumbleProto__UserState, has_actor),
+    offsetof(MumbleProto__UserState, actor),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2096,10 +2097,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, name),
+    offsetof(MumbleProto__UserState, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2107,11 +2108,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_user_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, user_id),
+    offsetof(MumbleProto__UserState, has_user_id),
+    offsetof(MumbleProto__UserState, user_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2119,11 +2120,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, channel_id),
+    offsetof(MumbleProto__UserState, has_channel_id),
+    offsetof(MumbleProto__UserState, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2131,11 +2132,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     6,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_mute),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, mute),
+    offsetof(MumbleProto__UserState, has_mute),
+    offsetof(MumbleProto__UserState, mute),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2143,11 +2144,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     7,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_deaf),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, deaf),
+    offsetof(MumbleProto__UserState, has_deaf),
+    offsetof(MumbleProto__UserState, deaf),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2155,11 +2156,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     8,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_suppress),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, suppress),
+    offsetof(MumbleProto__UserState, has_suppress),
+    offsetof(MumbleProto__UserState, suppress),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2167,11 +2168,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     9,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_self_mute),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, self_mute),
+    offsetof(MumbleProto__UserState, has_self_mute),
+    offsetof(MumbleProto__UserState, self_mute),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2179,11 +2180,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     10,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_self_deaf),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, self_deaf),
+    offsetof(MumbleProto__UserState, has_self_deaf),
+    offsetof(MumbleProto__UserState, self_deaf),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2191,11 +2192,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     11,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_texture),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, texture),
+    offsetof(MumbleProto__UserState, has_texture),
+    offsetof(MumbleProto__UserState, texture),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2203,11 +2204,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     12,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_plugin_context),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, plugin_context),
+    offsetof(MumbleProto__UserState, has_plugin_context),
+    offsetof(MumbleProto__UserState, plugin_context),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2216,10 +2217,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, plugin_identity),
+    offsetof(MumbleProto__UserState, plugin_identity),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2228,10 +2229,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, comment),
+    offsetof(MumbleProto__UserState, comment),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2240,10 +2241,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, hash),
+    offsetof(MumbleProto__UserState, hash),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2251,11 +2252,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     16,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_comment_hash),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, comment_hash),
+    offsetof(MumbleProto__UserState, has_comment_hash),
+    offsetof(MumbleProto__UserState, comment_hash),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2263,11 +2264,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     17,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_texture_hash),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, texture_hash),
+    offsetof(MumbleProto__UserState, has_texture_hash),
+    offsetof(MumbleProto__UserState, texture_hash),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2275,11 +2276,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     18,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_priority_speaker),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, priority_speaker),
+    offsetof(MumbleProto__UserState, has_priority_speaker),
+    offsetof(MumbleProto__UserState, priority_speaker),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2287,11 +2288,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_state__field_descriptor
     19,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, has_recording),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserState, recording),
+    offsetof(MumbleProto__UserState, has_recording),
+    offsetof(MumbleProto__UserState, recording),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2323,7 +2324,7 @@ static const ProtobufCIntRange mumble_proto__user_state__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__user_state__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserState",
   "UserState",
   "MumbleProto__UserState",
@@ -2344,10 +2345,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_BYTES,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, address),
+    offsetof(MumbleProto__BanList__BanEntry, address),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2356,10 +2357,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_UINT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, mask),
+    offsetof(MumbleProto__BanList__BanEntry, mask),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2368,10 +2369,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, name),
+    offsetof(MumbleProto__BanList__BanEntry, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2380,10 +2381,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, hash),
+    offsetof(MumbleProto__BanList__BanEntry, hash),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2392,10 +2393,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, reason),
+    offsetof(MumbleProto__BanList__BanEntry, reason),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2404,10 +2405,10 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, start),
+    offsetof(MumbleProto__BanList__BanEntry, start),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2415,11 +2416,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__ban_entry__field_d
     7,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, has_duration),
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList__BanEntry, duration),
+    offsetof(MumbleProto__BanList__BanEntry, has_duration),
+    offsetof(MumbleProto__BanList__BanEntry, duration),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2439,7 +2440,7 @@ static const ProtobufCIntRange mumble_proto__ban_list__ban_entry__number_ranges[
 };
 const ProtobufCMessageDescriptor mumble_proto__ban_list__ban_entry__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.BanList.BanEntry",
   "BanEntry",
   "MumbleProto__BanList__BanEntry",
@@ -2460,11 +2461,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__field_descriptors[
     1,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_MESSAGE,
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList, n_bans),
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList, bans),
+    offsetof(MumbleProto__BanList, n_bans),
+    offsetof(MumbleProto__BanList, bans),
     &mumble_proto__ban_list__ban_entry__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2472,11 +2473,11 @@ static const ProtobufCFieldDescriptor mumble_proto__ban_list__field_descriptors[
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList, has_query),
-    PROTOBUF_C_OFFSETOF(MumbleProto__BanList, query),
+    offsetof(MumbleProto__BanList, has_query),
+    offsetof(MumbleProto__BanList, query),
     NULL,
     &mumble_proto__ban_list__query__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2491,7 +2492,7 @@ static const ProtobufCIntRange mumble_proto__ban_list__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__ban_list__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.BanList",
   "BanList",
   "MumbleProto__BanList",
@@ -2511,11 +2512,11 @@ static const ProtobufCFieldDescriptor mumble_proto__text_message__field_descript
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, has_actor),
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, actor),
+    offsetof(MumbleProto__TextMessage, has_actor),
+    offsetof(MumbleProto__TextMessage, actor),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2523,11 +2524,11 @@ static const ProtobufCFieldDescriptor mumble_proto__text_message__field_descript
     2,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, n_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, session),
+    offsetof(MumbleProto__TextMessage, n_session),
+    offsetof(MumbleProto__TextMessage, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2535,11 +2536,11 @@ static const ProtobufCFieldDescriptor mumble_proto__text_message__field_descript
     3,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, n_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, channel_id),
+    offsetof(MumbleProto__TextMessage, n_channel_id),
+    offsetof(MumbleProto__TextMessage, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2547,11 +2548,11 @@ static const ProtobufCFieldDescriptor mumble_proto__text_message__field_descript
     4,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, n_tree_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, tree_id),
+    offsetof(MumbleProto__TextMessage, n_tree_id),
+    offsetof(MumbleProto__TextMessage, tree_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2560,10 +2561,10 @@ static const ProtobufCFieldDescriptor mumble_proto__text_message__field_descript
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__TextMessage, message),
+    offsetof(MumbleProto__TextMessage, message),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2581,7 +2582,7 @@ static const ProtobufCIntRange mumble_proto__text_message__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__text_message__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.TextMessage",
   "TextMessage",
   "MumbleProto__TextMessage",
@@ -2596,17 +2597,17 @@ const ProtobufCMessageDescriptor mumble_proto__text_message__descriptor =
 };
 const ProtobufCEnumValue mumble_proto__permission_denied__deny_type__enum_values_by_number[11] =
 {
-  { "Text", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__TEXT", 0 },
-  { "Permission", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__PERMISSION", 1 },
-  { "SuperUser", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__SUPERUSER", 2 },
-  { "ChannelName", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__CHANNELNAME", 3 },
-  { "TextTooLong", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__TEXTTOOLONG", 4 },
+  { "Text", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__Text", 0 },
+  { "Permission", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__Permission", 1 },
+  { "SuperUser", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__SuperUser", 2 },
+  { "ChannelName", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__ChannelName", 3 },
+  { "TextTooLong", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__TextTooLong", 4 },
   { "H9K", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__H9K", 5 },
-  { "TemporaryChannel", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__TEMPORARYCHANNEL", 6 },
-  { "MissingCertificate", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__MISSINGCERTIFICATE", 7 },
-  { "UserName", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__USERNAME", 8 },
-  { "ChannelFull", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__CHANNELFULL", 9 },
-  { "NestingLimit", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__NESTINGLIMIT", 10 },
+  { "TemporaryChannel", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__TemporaryChannel", 6 },
+  { "MissingCertificate", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__MissingCertificate", 7 },
+  { "UserName", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__UserName", 8 },
+  { "ChannelFull", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__ChannelFull", 9 },
+  { "NestingLimit", "MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__NestingLimit", 10 },
 };
 static const ProtobufCIntRange mumble_proto__permission_denied__deny_type__value_ranges[] = {
 {0, 0},{0, 11}
@@ -2627,7 +2628,7 @@ const ProtobufCEnumValueIndex mumble_proto__permission_denied__deny_type__enum_v
 };
 const ProtobufCEnumDescriptor mumble_proto__permission_denied__deny_type__descriptor =
 {
-  PROTOBUF_C_ENUM_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__ENUM_DESCRIPTOR_MAGIC,
   "MumbleProto.PermissionDenied.DenyType",
   "DenyType",
   "MumbleProto__PermissionDenied__DenyType",
@@ -2647,11 +2648,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, has_permission),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, permission),
+    offsetof(MumbleProto__PermissionDenied, has_permission),
+    offsetof(MumbleProto__PermissionDenied, permission),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2659,11 +2660,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, channel_id),
+    offsetof(MumbleProto__PermissionDenied, has_channel_id),
+    offsetof(MumbleProto__PermissionDenied, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2671,11 +2672,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, has_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, session),
+    offsetof(MumbleProto__PermissionDenied, has_session),
+    offsetof(MumbleProto__PermissionDenied, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2684,10 +2685,10 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, reason),
+    offsetof(MumbleProto__PermissionDenied, reason),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2695,11 +2696,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_ENUM,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, has_type),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, type),
+    offsetof(MumbleProto__PermissionDenied, has_type),
+    offsetof(MumbleProto__PermissionDenied, type),
     &mumble_proto__permission_denied__deny_type__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2708,10 +2709,10 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_denied__field_des
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionDenied, name),
+    offsetof(MumbleProto__PermissionDenied, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2730,7 +2731,7 @@ static const ProtobufCIntRange mumble_proto__permission_denied__number_ranges[1
 };
 const ProtobufCMessageDescriptor mumble_proto__permission_denied__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.PermissionDenied",
   "PermissionDenied",
   "MumbleProto__PermissionDenied",
@@ -2754,10 +2755,10 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, name),
+    offsetof(MumbleProto__ACL__ChanGroup, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2765,11 +2766,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, has_inherited),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, inherited),
+    offsetof(MumbleProto__ACL__ChanGroup, has_inherited),
+    offsetof(MumbleProto__ACL__ChanGroup, inherited),
     NULL,
     &mumble_proto__acl__chan_group__inherited__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2777,11 +2778,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, has_inherit),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, inherit),
+    offsetof(MumbleProto__ACL__ChanGroup, has_inherit),
+    offsetof(MumbleProto__ACL__ChanGroup, inherit),
     NULL,
     &mumble_proto__acl__chan_group__inherit__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2789,11 +2790,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, has_inheritable),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, inheritable),
+    offsetof(MumbleProto__ACL__ChanGroup, has_inheritable),
+    offsetof(MumbleProto__ACL__ChanGroup, inheritable),
     NULL,
     &mumble_proto__acl__chan_group__inheritable__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2801,11 +2802,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     5,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, n_add),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, add),
+    offsetof(MumbleProto__ACL__ChanGroup, n_add),
+    offsetof(MumbleProto__ACL__ChanGroup, add),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2813,11 +2814,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     6,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, n_remove),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, remove),
+    offsetof(MumbleProto__ACL__ChanGroup, n_remove),
+    offsetof(MumbleProto__ACL__ChanGroup, remove),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2825,11 +2826,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_group__field_descr
     7,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, n_inherited_members),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanGroup, inherited_members),
+    offsetof(MumbleProto__ACL__ChanGroup, n_inherited_members),
+    offsetof(MumbleProto__ACL__ChanGroup, inherited_members),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2849,7 +2850,7 @@ static const ProtobufCIntRange mumble_proto__acl__chan_group__number_ranges[1 +
 };
 const ProtobufCMessageDescriptor mumble_proto__acl__chan_group__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ACL.ChanGroup",
   "ChanGroup",
   "MumbleProto__ACL__ChanGroup",
@@ -2872,11 +2873,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_apply_here),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, apply_here),
+    offsetof(MumbleProto__ACL__ChanACL, has_apply_here),
+    offsetof(MumbleProto__ACL__ChanACL, apply_here),
     NULL,
     &mumble_proto__acl__chan_acl__apply_here__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2884,11 +2885,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_apply_subs),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, apply_subs),
+    offsetof(MumbleProto__ACL__ChanACL, has_apply_subs),
+    offsetof(MumbleProto__ACL__ChanACL, apply_subs),
     NULL,
     &mumble_proto__acl__chan_acl__apply_subs__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2896,11 +2897,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_inherited),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, inherited),
+    offsetof(MumbleProto__ACL__ChanACL, has_inherited),
+    offsetof(MumbleProto__ACL__ChanACL, inherited),
     NULL,
     &mumble_proto__acl__chan_acl__inherited__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2908,11 +2909,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_user_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, user_id),
+    offsetof(MumbleProto__ACL__ChanACL, has_user_id),
+    offsetof(MumbleProto__ACL__ChanACL, user_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2921,10 +2922,10 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, group),
+    offsetof(MumbleProto__ACL__ChanACL, group),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2932,11 +2933,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     6,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_grant),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, grant),
+    offsetof(MumbleProto__ACL__ChanACL, has_grant),
+    offsetof(MumbleProto__ACL__ChanACL, grant),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -2944,11 +2945,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__chan_acl__field_descrip
     7,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, has_deny),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL__ChanACL, deny),
+    offsetof(MumbleProto__ACL__ChanACL, has_deny),
+    offsetof(MumbleProto__ACL__ChanACL, deny),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -2968,7 +2969,7 @@ static const ProtobufCIntRange mumble_proto__acl__chan_acl__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__acl__chan_acl__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ACL.ChanACL",
   "ChanACL",
   "MumbleProto__ACL__ChanACL",
@@ -2991,10 +2992,10 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__field_descriptors[5] =
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_UINT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, channel_id),
+    offsetof(MumbleProto__ACL, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3002,11 +3003,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__field_descriptors[5] =
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, has_inherit_acls),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, inherit_acls),
+    offsetof(MumbleProto__ACL, has_inherit_acls),
+    offsetof(MumbleProto__ACL, inherit_acls),
     NULL,
     &mumble_proto__acl__inherit_acls__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3014,11 +3015,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__field_descriptors[5] =
     3,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_MESSAGE,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, n_groups),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, groups),
+    offsetof(MumbleProto__ACL, n_groups),
+    offsetof(MumbleProto__ACL, groups),
     &mumble_proto__acl__chan_group__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3026,11 +3027,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__field_descriptors[5] =
     4,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_MESSAGE,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, n_acls),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, acls),
+    offsetof(MumbleProto__ACL, n_acls),
+    offsetof(MumbleProto__ACL, acls),
     &mumble_proto__acl__chan_acl__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3038,11 +3039,11 @@ static const ProtobufCFieldDescriptor mumble_proto__acl__field_descriptors[5] =
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, has_query),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ACL, query),
+    offsetof(MumbleProto__ACL, has_query),
+    offsetof(MumbleProto__ACL, query),
     NULL,
     &mumble_proto__acl__query__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3060,7 +3061,7 @@ static const ProtobufCIntRange mumble_proto__acl__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__acl__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ACL",
   "ACL",
   "MumbleProto__ACL",
@@ -3080,11 +3081,11 @@ static const ProtobufCFieldDescriptor mumble_proto__query_users__field_descripto
     1,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__QueryUsers, n_ids),
-    PROTOBUF_C_OFFSETOF(MumbleProto__QueryUsers, ids),
+    offsetof(MumbleProto__QueryUsers, n_ids),
+    offsetof(MumbleProto__QueryUsers, ids),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3092,11 +3093,11 @@ static const ProtobufCFieldDescriptor mumble_proto__query_users__field_descripto
     2,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_STRING,
-    PROTOBUF_C_OFFSETOF(MumbleProto__QueryUsers, n_names),
-    PROTOBUF_C_OFFSETOF(MumbleProto__QueryUsers, names),
+    offsetof(MumbleProto__QueryUsers, n_names),
+    offsetof(MumbleProto__QueryUsers, names),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3111,7 +3112,7 @@ static const ProtobufCIntRange mumble_proto__query_users__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__query_users__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.QueryUsers",
   "QueryUsers",
   "MumbleProto__QueryUsers",
@@ -3131,11 +3132,11 @@ static const ProtobufCFieldDescriptor mumble_proto__crypt_setup__field_descripto
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, has_key),
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, key),
+    offsetof(MumbleProto__CryptSetup, has_key),
+    offsetof(MumbleProto__CryptSetup, key),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3143,11 +3144,11 @@ static const ProtobufCFieldDescriptor mumble_proto__crypt_setup__field_descripto
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, has_client_nonce),
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, client_nonce),
+    offsetof(MumbleProto__CryptSetup, has_client_nonce),
+    offsetof(MumbleProto__CryptSetup, client_nonce),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3155,11 +3156,11 @@ static const ProtobufCFieldDescriptor mumble_proto__crypt_setup__field_descripto
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, has_server_nonce),
-    PROTOBUF_C_OFFSETOF(MumbleProto__CryptSetup, server_nonce),
+    offsetof(MumbleProto__CryptSetup, has_server_nonce),
+    offsetof(MumbleProto__CryptSetup, server_nonce),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3175,7 +3176,7 @@ static const ProtobufCIntRange mumble_proto__crypt_setup__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__crypt_setup__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.CryptSetup",
   "CryptSetup",
   "MumbleProto__CryptSetup",
@@ -3190,9 +3191,9 @@ const ProtobufCMessageDescriptor mumble_proto__crypt_setup__descriptor =
 };
 const ProtobufCEnumValue mumble_proto__context_action_modify__context__enum_values_by_number[3] =
 {
-  { "Server", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__SERVER", 1 },
-  { "Channel", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__CHANNEL", 2 },
-  { "User", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__USER", 4 },
+  { "Server", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__Server", 1 },
+  { "Channel", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__Channel", 2 },
+  { "User", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__User", 4 },
 };
 static const ProtobufCIntRange mumble_proto__context_action_modify__context__value_ranges[] = {
 {1, 0},{4, 2},{0, 3}
@@ -3205,7 +3206,7 @@ const ProtobufCEnumValueIndex mumble_proto__context_action_modify__context__enum
 };
 const ProtobufCEnumDescriptor mumble_proto__context_action_modify__context__descriptor =
 {
-  PROTOBUF_C_ENUM_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__ENUM_DESCRIPTOR_MAGIC,
   "MumbleProto.ContextActionModify.Context",
   "Context",
   "MumbleProto__ContextActionModify__Context",
@@ -3220,8 +3221,8 @@ const ProtobufCEnumDescriptor mumble_proto__context_action_modify__context__desc
 };
 const ProtobufCEnumValue mumble_proto__context_action_modify__operation__enum_values_by_number[2] =
 {
-  { "Add", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__ADD", 0 },
-  { "Remove", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__REMOVE", 1 },
+  { "Add", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__Add", 0 },
+  { "Remove", "MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__Remove", 1 },
 };
 static const ProtobufCIntRange mumble_proto__context_action_modify__operation__value_ranges[] = {
 {0, 0},{0, 2}
@@ -3233,7 +3234,7 @@ const ProtobufCEnumValueIndex mumble_proto__context_action_modify__operation__en
 };
 const ProtobufCEnumDescriptor mumble_proto__context_action_modify__operation__descriptor =
 {
-  PROTOBUF_C_ENUM_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__ENUM_DESCRIPTOR_MAGIC,
   "MumbleProto.ContextActionModify.Operation",
   "Operation",
   "MumbleProto__ContextActionModify__Operation",
@@ -3254,10 +3255,10 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action_modify__field
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, action),
+    offsetof(MumbleProto__ContextActionModify, action),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3266,10 +3267,10 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action_modify__field
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, text),
+    offsetof(MumbleProto__ContextActionModify, text),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3277,11 +3278,11 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action_modify__field
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, has_context),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, context),
+    offsetof(MumbleProto__ContextActionModify, has_context),
+    offsetof(MumbleProto__ContextActionModify, context),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3289,11 +3290,11 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action_modify__field
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_ENUM,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, has_operation),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextActionModify, operation),
+    offsetof(MumbleProto__ContextActionModify, has_operation),
+    offsetof(MumbleProto__ContextActionModify, operation),
     &mumble_proto__context_action_modify__operation__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3310,7 +3311,7 @@ static const ProtobufCIntRange mumble_proto__context_action_modify__number_range
 };
 const ProtobufCMessageDescriptor mumble_proto__context_action_modify__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ContextActionModify",
   "ContextActionModify",
   "MumbleProto__ContextActionModify",
@@ -3330,11 +3331,11 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action__field_descri
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextAction, has_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextAction, session),
+    offsetof(MumbleProto__ContextAction, has_session),
+    offsetof(MumbleProto__ContextAction, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3342,11 +3343,11 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action__field_descri
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextAction, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextAction, channel_id),
+    offsetof(MumbleProto__ContextAction, has_channel_id),
+    offsetof(MumbleProto__ContextAction, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3355,10 +3356,10 @@ static const ProtobufCFieldDescriptor mumble_proto__context_action__field_descri
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__ContextAction, action),
+    offsetof(MumbleProto__ContextAction, action),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3374,7 +3375,7 @@ static const ProtobufCIntRange mumble_proto__context_action__number_ranges[1 + 1
 };
 const ProtobufCMessageDescriptor mumble_proto__context_action__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.ContextAction",
   "ContextAction",
   "MumbleProto__ContextAction",
@@ -3395,10 +3396,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_list__user__field_descr
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_UINT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserList__User, user_id),
+    offsetof(MumbleProto__UserList__User, user_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3407,10 +3408,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_list__user__field_descr
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserList__User, name),
+    offsetof(MumbleProto__UserList__User, name),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3425,7 +3426,7 @@ static const ProtobufCIntRange mumble_proto__user_list__user__number_ranges[1 +
 };
 const ProtobufCMessageDescriptor mumble_proto__user_list__user__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserList.User",
   "User",
   "MumbleProto__UserList__User",
@@ -3445,11 +3446,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_list__field_descriptors
     1,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_MESSAGE,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserList, n_users),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserList, users),
+    offsetof(MumbleProto__UserList, n_users),
+    offsetof(MumbleProto__UserList, users),
     &mumble_proto__user_list__user__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3463,7 +3464,7 @@ static const ProtobufCIntRange mumble_proto__user_list__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__user_list__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserList",
   "UserList",
   "MumbleProto__UserList",
@@ -3485,11 +3486,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__target__field_
     1,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, n_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, session),
+    offsetof(MumbleProto__VoiceTarget__Target, n_session),
+    offsetof(MumbleProto__VoiceTarget__Target, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3497,11 +3498,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__target__field_
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, channel_id),
+    offsetof(MumbleProto__VoiceTarget__Target, has_channel_id),
+    offsetof(MumbleProto__VoiceTarget__Target, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3510,10 +3511,10 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__target__field_
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_STRING,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, group),
+    offsetof(MumbleProto__VoiceTarget__Target, group),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3521,11 +3522,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__target__field_
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, has_links),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, links),
+    offsetof(MumbleProto__VoiceTarget__Target, has_links),
+    offsetof(MumbleProto__VoiceTarget__Target, links),
     NULL,
     &mumble_proto__voice_target__target__links__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3533,11 +3534,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__target__field_
     5,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, has_children),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget__Target, children),
+    offsetof(MumbleProto__VoiceTarget__Target, has_children),
+    offsetof(MumbleProto__VoiceTarget__Target, children),
     NULL,
     &mumble_proto__voice_target__target__children__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3555,7 +3556,7 @@ static const ProtobufCIntRange mumble_proto__voice_target__target__number_ranges
 };
 const ProtobufCMessageDescriptor mumble_proto__voice_target__target__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.VoiceTarget.Target",
   "Target",
   "MumbleProto__VoiceTarget__Target",
@@ -3575,11 +3576,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__field_descript
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget, has_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget, id),
+    offsetof(MumbleProto__VoiceTarget, has_id),
+    offsetof(MumbleProto__VoiceTarget, id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3587,11 +3588,11 @@ static const ProtobufCFieldDescriptor mumble_proto__voice_target__field_descript
     2,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_MESSAGE,
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget, n_targets),
-    PROTOBUF_C_OFFSETOF(MumbleProto__VoiceTarget, targets),
+    offsetof(MumbleProto__VoiceTarget, n_targets),
+    offsetof(MumbleProto__VoiceTarget, targets),
     &mumble_proto__voice_target__target__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3606,7 +3607,7 @@ static const ProtobufCIntRange mumble_proto__voice_target__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__voice_target__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.VoiceTarget",
   "VoiceTarget",
   "MumbleProto__VoiceTarget",
@@ -3627,11 +3628,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_query__field_desc
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, has_channel_id),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, channel_id),
+    offsetof(MumbleProto__PermissionQuery, has_channel_id),
+    offsetof(MumbleProto__PermissionQuery, channel_id),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3639,11 +3640,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_query__field_desc
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, has_permissions),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, permissions),
+    offsetof(MumbleProto__PermissionQuery, has_permissions),
+    offsetof(MumbleProto__PermissionQuery, permissions),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3651,11 +3652,11 @@ static const ProtobufCFieldDescriptor mumble_proto__permission_query__field_desc
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, has_flush),
-    PROTOBUF_C_OFFSETOF(MumbleProto__PermissionQuery, flush),
+    offsetof(MumbleProto__PermissionQuery, has_flush),
+    offsetof(MumbleProto__PermissionQuery, flush),
     NULL,
     &mumble_proto__permission_query__flush__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3671,7 +3672,7 @@ static const ProtobufCIntRange mumble_proto__permission_query__number_ranges[1 +
 };
 const ProtobufCMessageDescriptor mumble_proto__permission_query__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.PermissionQuery",
   "PermissionQuery",
   "MumbleProto__PermissionQuery",
@@ -3694,10 +3695,10 @@ static const ProtobufCFieldDescriptor mumble_proto__codec_version__field_descrip
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_INT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__CodecVersion, alpha),
+    offsetof(MumbleProto__CodecVersion, alpha),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3706,10 +3707,10 @@ static const ProtobufCFieldDescriptor mumble_proto__codec_version__field_descrip
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_INT32,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__CodecVersion, beta),
+    offsetof(MumbleProto__CodecVersion, beta),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3718,10 +3719,10 @@ static const ProtobufCFieldDescriptor mumble_proto__codec_version__field_descrip
     PROTOBUF_C_LABEL_REQUIRED,
     PROTOBUF_C_TYPE_BOOL,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__CodecVersion, prefer_alpha),
+    offsetof(MumbleProto__CodecVersion, prefer_alpha),
     NULL,
     &mumble_proto__codec_version__prefer_alpha__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3729,11 +3730,11 @@ static const ProtobufCFieldDescriptor mumble_proto__codec_version__field_descrip
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__CodecVersion, has_opus),
-    PROTOBUF_C_OFFSETOF(MumbleProto__CodecVersion, opus),
+    offsetof(MumbleProto__CodecVersion, has_opus),
+    offsetof(MumbleProto__CodecVersion, opus),
     NULL,
     &mumble_proto__codec_version__opus__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3750,7 +3751,7 @@ static const ProtobufCIntRange mumble_proto__codec_version__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__codec_version__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.CodecVersion",
   "CodecVersion",
   "MumbleProto__CodecVersion",
@@ -3770,11 +3771,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__stats__field_des
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, has_good),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, good),
+    offsetof(MumbleProto__UserStats__Stats, has_good),
+    offsetof(MumbleProto__UserStats__Stats, good),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3782,11 +3783,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__stats__field_des
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, has_late),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, late),
+    offsetof(MumbleProto__UserStats__Stats, has_late),
+    offsetof(MumbleProto__UserStats__Stats, late),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3794,11 +3795,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__stats__field_des
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, has_lost),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, lost),
+    offsetof(MumbleProto__UserStats__Stats, has_lost),
+    offsetof(MumbleProto__UserStats__Stats, lost),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3806,11 +3807,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__stats__field_des
     4,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, has_resync),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats__Stats, resync),
+    offsetof(MumbleProto__UserStats__Stats, has_resync),
+    offsetof(MumbleProto__UserStats__Stats, resync),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -3827,7 +3828,7 @@ static const ProtobufCIntRange mumble_proto__user_stats__stats__number_ranges[1
 };
 const ProtobufCMessageDescriptor mumble_proto__user_stats__stats__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserStats.Stats",
   "Stats",
   "MumbleProto__UserStats__Stats",
@@ -3850,11 +3851,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_session),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, session),
+    offsetof(MumbleProto__UserStats, has_session),
+    offsetof(MumbleProto__UserStats, session),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3862,11 +3863,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_stats_only),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, stats_only),
+    offsetof(MumbleProto__UserStats, has_stats_only),
+    offsetof(MumbleProto__UserStats, stats_only),
     NULL,
     &mumble_proto__user_stats__stats_only__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3874,11 +3875,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     3,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, n_certificates),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, certificates),
+    offsetof(MumbleProto__UserStats, n_certificates),
+    offsetof(MumbleProto__UserStats, certificates),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3887,10 +3888,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_MESSAGE,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, from_client),
+    offsetof(MumbleProto__UserStats, from_client),
     &mumble_proto__user_stats__stats__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3899,10 +3900,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_MESSAGE,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, from_server),
+    offsetof(MumbleProto__UserStats, from_server),
     &mumble_proto__user_stats__stats__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3910,11 +3911,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     6,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_udp_packets),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, udp_packets),
+    offsetof(MumbleProto__UserStats, has_udp_packets),
+    offsetof(MumbleProto__UserStats, udp_packets),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3922,11 +3923,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     7,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_tcp_packets),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, tcp_packets),
+    offsetof(MumbleProto__UserStats, has_tcp_packets),
+    offsetof(MumbleProto__UserStats, tcp_packets),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3934,11 +3935,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     8,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_udp_ping_avg),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, udp_ping_avg),
+    offsetof(MumbleProto__UserStats, has_udp_ping_avg),
+    offsetof(MumbleProto__UserStats, udp_ping_avg),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3946,11 +3947,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     9,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_udp_ping_var),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, udp_ping_var),
+    offsetof(MumbleProto__UserStats, has_udp_ping_var),
+    offsetof(MumbleProto__UserStats, udp_ping_var),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3958,11 +3959,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     10,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_tcp_ping_avg),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, tcp_ping_avg),
+    offsetof(MumbleProto__UserStats, has_tcp_ping_avg),
+    offsetof(MumbleProto__UserStats, tcp_ping_avg),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3970,11 +3971,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     11,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_FLOAT,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_tcp_ping_var),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, tcp_ping_var),
+    offsetof(MumbleProto__UserStats, has_tcp_ping_var),
+    offsetof(MumbleProto__UserStats, tcp_ping_var),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3983,10 +3984,10 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_MESSAGE,
     0,   /* quantifier_offset */
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, version),
+    offsetof(MumbleProto__UserStats, version),
     &mumble_proto__version__descriptor,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -3994,11 +3995,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     13,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_INT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, n_celt_versions),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, celt_versions),
+    offsetof(MumbleProto__UserStats, n_celt_versions),
+    offsetof(MumbleProto__UserStats, celt_versions),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4006,11 +4007,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     14,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BYTES,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_address),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, address),
+    offsetof(MumbleProto__UserStats, has_address),
+    offsetof(MumbleProto__UserStats, address),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4018,11 +4019,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     15,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_bandwidth),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, bandwidth),
+    offsetof(MumbleProto__UserStats, has_bandwidth),
+    offsetof(MumbleProto__UserStats, bandwidth),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4030,11 +4031,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     16,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_onlinesecs),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, onlinesecs),
+    offsetof(MumbleProto__UserStats, has_onlinesecs),
+    offsetof(MumbleProto__UserStats, onlinesecs),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4042,11 +4043,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     17,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_idlesecs),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, idlesecs),
+    offsetof(MumbleProto__UserStats, has_idlesecs),
+    offsetof(MumbleProto__UserStats, idlesecs),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4054,11 +4055,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     18,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_strong_certificate),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, strong_certificate),
+    offsetof(MumbleProto__UserStats, has_strong_certificate),
+    offsetof(MumbleProto__UserStats, strong_certificate),
     NULL,
     &mumble_proto__user_stats__strong_certificate__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4066,11 +4067,11 @@ static const ProtobufCFieldDescriptor mumble_proto__user_stats__field_descriptor
     19,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, has_opus),
-    PROTOBUF_C_OFFSETOF(MumbleProto__UserStats, opus),
+    offsetof(MumbleProto__UserStats, has_opus),
+    offsetof(MumbleProto__UserStats, opus),
     NULL,
     &mumble_proto__user_stats__opus__default_value,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -4102,7 +4103,7 @@ static const ProtobufCIntRange mumble_proto__user_stats__number_ranges[1 + 1] =
 };
 const ProtobufCMessageDescriptor mumble_proto__user_stats__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.UserStats",
   "UserStats",
   "MumbleProto__UserStats",
@@ -4122,11 +4123,11 @@ static const ProtobufCFieldDescriptor mumble_proto__suggest_config__field_descri
     1,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, has_version),
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, version),
+    offsetof(MumbleProto__SuggestConfig, has_version),
+    offsetof(MumbleProto__SuggestConfig, version),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4134,11 +4135,11 @@ static const ProtobufCFieldDescriptor mumble_proto__suggest_config__field_descri
     2,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, has_positional),
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, positional),
+    offsetof(MumbleProto__SuggestConfig, has_positional),
+    offsetof(MumbleProto__SuggestConfig, positional),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4146,11 +4147,11 @@ static const ProtobufCFieldDescriptor mumble_proto__suggest_config__field_descri
     3,
     PROTOBUF_C_LABEL_OPTIONAL,
     PROTOBUF_C_TYPE_BOOL,
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, has_push_to_talk),
-    PROTOBUF_C_OFFSETOF(MumbleProto__SuggestConfig, push_to_talk),
+    offsetof(MumbleProto__SuggestConfig, has_push_to_talk),
+    offsetof(MumbleProto__SuggestConfig, push_to_talk),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -4166,7 +4167,7 @@ static const ProtobufCIntRange mumble_proto__suggest_config__number_ranges[1 + 1
 };
 const ProtobufCMessageDescriptor mumble_proto__suggest_config__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.SuggestConfig",
   "SuggestConfig",
   "MumbleProto__SuggestConfig",
@@ -4186,11 +4187,11 @@ static const ProtobufCFieldDescriptor mumble_proto__request_blob__field_descript
     1,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, n_session_texture),
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, session_texture),
+    offsetof(MumbleProto__RequestBlob, n_session_texture),
+    offsetof(MumbleProto__RequestBlob, session_texture),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4198,11 +4199,11 @@ static const ProtobufCFieldDescriptor mumble_proto__request_blob__field_descript
     2,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, n_session_comment),
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, session_comment),
+    offsetof(MumbleProto__RequestBlob, n_session_comment),
+    offsetof(MumbleProto__RequestBlob, session_comment),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
   {
@@ -4210,11 +4211,11 @@ static const ProtobufCFieldDescriptor mumble_proto__request_blob__field_descript
     3,
     PROTOBUF_C_LABEL_REPEATED,
     PROTOBUF_C_TYPE_UINT32,
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, n_channel_description),
-    PROTOBUF_C_OFFSETOF(MumbleProto__RequestBlob, channel_description),
+    offsetof(MumbleProto__RequestBlob, n_channel_description),
+    offsetof(MumbleProto__RequestBlob, channel_description),
     NULL,
     NULL,
-    0,            /* packed */
+    0,             /* flags */
     0,NULL,NULL    /* reserved1,reserved2, etc */
   },
 };
@@ -4230,7 +4231,7 @@ static const ProtobufCIntRange mumble_proto__request_blob__number_ranges[1 + 1]
 };
 const ProtobufCMessageDescriptor mumble_proto__request_blob__descriptor =
 {
-  PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC,
+  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,
   "MumbleProto.RequestBlob",
   "RequestBlob",
   "MumbleProto__RequestBlob",
diff --git a/src/Mumble.pb-c.h b/src/Mumble.pb-c.h
index 9f2a516..579f5d9 100644
--- a/src/Mumble.pb-c.h
+++ b/src/Mumble.pb-c.h
@@ -1,11 +1,18 @@
 /* Generated by the protocol buffer compiler.  DO NOT EDIT! */
+/* Generated from: Mumble.proto */
 
 #ifndef PROTOBUF_C_Mumble_2eproto__INCLUDED
 #define PROTOBUF_C_Mumble_2eproto__INCLUDED
 
-#include <google/protobuf-c/protobuf-c.h>
+#include <protobuf-c/protobuf-c.h>
 
-PROTOBUF_C_BEGIN_DECLS
+PROTOBUF_C__BEGIN_DECLS
+
+#if PROTOBUF_C_VERSION_NUMBER < 1000000
+# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
+#elif 1000000 < PROTOBUF_C_MIN_COMPILER_VERSION
+# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
+#endif
 
 
 typedef struct _MumbleProto__Version MumbleProto__Version;
@@ -53,6 +60,7 @@ typedef enum _MumbleProto__Reject__RejectType {
   MUMBLE_PROTO__REJECT__REJECT_TYPE__UsernameInUse = 5,
   MUMBLE_PROTO__REJECT__REJECT_TYPE__ServerFull = 6,
   MUMBLE_PROTO__REJECT__REJECT_TYPE__NoCertificate = 7
+    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MUMBLE_PROTO__REJECT__REJECT_TYPE)
 } MumbleProto__Reject__RejectType;
 typedef enum _MumbleProto__PermissionDenied__DenyType {
   MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__Text = 0,
@@ -66,15 +74,18 @@ typedef enum _MumbleProto__PermissionDenied__DenyType {
   MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__UserName = 8,
   MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__ChannelFull = 9,
   MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE__NestingLimit = 10
+    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MUMBLE_PROTO__PERMISSION_DENIED__DENY_TYPE)
 } MumbleProto__PermissionDenied__DenyType;
 typedef enum _MumbleProto__ContextActionModify__Context {
   MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__Server = 1,
   MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__Channel = 2,
   MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT__User = 4
+    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__CONTEXT)
 } MumbleProto__ContextActionModify__Context;
 typedef enum _MumbleProto__ContextActionModify__Operation {
   MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__Add = 0,
   MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION__Remove = 1
+    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MUMBLE_PROTO__CONTEXT_ACTION_MODIFY__OPERATION)
 } MumbleProto__ContextActionModify__Operation;
 
 /* --- messages --- */
@@ -1304,7 +1315,7 @@ extern const ProtobufCMessageDescriptor mumble_proto__user_stats__stats__descrip
 extern const ProtobufCMessageDescriptor mumble_proto__suggest_config__descriptor;
 extern const ProtobufCMessageDescriptor mumble_proto__request_blob__descriptor;
 
-PROTOBUF_C_END_DECLS
+PROTOBUF_C__END_DECLS
 
 
-#endif  /* PROTOBUF_Mumble_2eproto__INCLUDED */
+#endif  /* PROTOBUF_C_Mumble_2eproto__INCLUDED */
-- 
2.0.2

