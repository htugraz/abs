# $Id: PKGBUILD 233337 2015-03-11 07:19:57Z tpowa $
# Maintainer: AndyRTR <andyrtr@archlinux.org>
# Maintainer: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: John Proctor <jproctor@prium.net>
# Contributor: dibblethewrecker <dibblethewrecker.at.jiwe.org>
# Contributor: abelstr <abel@pinklf.eu>
# Contributor: Marco Lima <cipparello gmail com>

pkgname=nfs-utils
pkgver=1.3.2
pkgrel=6
pkgdesc="Support programs for Network File Systems"
arch=('i686' 'x86_64')
url='http://nfs.sourceforge.net'
license=('GPL2')
backup=(etc/{exports,nfsmount.conf} etc/conf.d/{nfs-common.conf,nfs-server.conf})
depends=('rpcbind' 'librpcsecgss>=0.19-2' 'nfsidmap' 'gssproxy' 
         'libevent>=2.0.10' 'device-mapper')
makedepends=('sqlite')
source=(http://downloads.sourceforge.net/project/nfs/${pkgname}/${pkgver}/${pkgname}-${pkgver}.tar.{bz2,sign}
        nfs-common.conf nfs-server.conf exports nfs-utils.conf id_resolver.conf
        nfs-utils_env.sh
        nfs-utils-1.3.2-statd-bg.patch
        nfs-utils-1.3.2-statd-nowait.patch)
install=nfs-utils.install
optdepends=('sqlite: for nfsdcltrack usage'
            'python2: for nfsiostat and mountstats usage')
md5sums=('1e2f3c1ed468dee02d00c534c002ea10'
         'SKIP'
         '95129639a19da1f262d4eb3ac73e0bdb'
         '7bd61e84ee05054f5232b2e8063ea08d'
         'e6ad3c7a59c7e4c24965a0e7da35026c'
         '8ac484023d786766d287ccbe878ae4ba'
         '2e203f35ee753f5264a951cf43d4168e'
         'c6c9c32f153dfa6c0477ea6b99354288'
         '45f55a5d581b2527b453c3a0816add24'
         'dde4e23776a2425d2a1241eb2daf8b7c')
validpgpkeys=('E1B71E339E20A10A676F7CB69AFB1D681A125177') # Steve Dickson

prepare() {
  cd ${pkgname}-${pkgver}
  # fix rpc.statd starting
  patch -Np1 -i $srcdir/nfs-utils-1.3.2-statd-bg.patch
  # don't wait for online target on statd
  patch -Np1 -i $srcdir/nfs-utils-1.3.2-statd-nowait.patch

  # fix hardcoded sbin path to our needs
  sed -i "s|sbindir = /sbin|sbindir = /usr/bin|g" utils/*/Makefile.am
  autoreconf -vfi
}

build() {
  cd ${pkgname}-${pkgver}
  ./configure --prefix=/usr \
    --sbindir=/usr/bin \
    --sysconfdir=/etc \
    --enable-gss \
    --without-tcp-wrappers \
    --with-statedir=/var/lib/nfs \
    --enable-ipv6 \
    --enable-libmount-mount \
    --enable-mountconfig \
    --with-start-statd=/usr/bin/start-statd
  make 
}

check() {
  cd ${pkgname}-${pkgver}
  make -k check
}

package() {
  cd ${pkgname}-${pkgver}
  make DESTDIR="$pkgdir" install
  
  sed -i '1s/python$/python2/' "$pkgdir"/usr/bin/{nfsiostat,mountstats}
  
  install -D -m 644 utils/mount/nfsmount.conf "$pkgdir"/etc/nfsmount.conf
  
  for i in systemd/{*.service,*.mount,*.target}; do
    install -D -m 644 $i "$pkgdir"/usr/lib/systemd/system/$(basename $i)
  done

  cd ..
  install -D -m 644 nfs-common.conf  "$pkgdir"/etc/conf.d/nfs-common.conf
  install -D -m 644 nfs-server.conf  "$pkgdir"/etc/conf.d/nfs-server.conf
  install -D -m 755 nfs-utils_env.sh "$pkgdir"/usr/lib/systemd/scripts/nfs-utils_env.sh
  install -D -m 644 exports          "$pkgdir"/etc/exports
  install -D -m 644 id_resolver.conf "$pkgdir"/etc/request-key.d/id_resolver.conf
  install -D -m 644 nfs-utils.conf   "$pkgdir"/usr/lib/modules-load.d/nfs-utils.conf
  mkdir "$pkgdir"/etc/exports.d
  mkdir -m 555 "$pkgdir"/var/lib/nfs/rpc_pipefs
  mkdir "$pkgdir"/var/lib/nfs/v4recovery
}
